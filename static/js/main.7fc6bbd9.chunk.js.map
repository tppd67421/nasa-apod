{"version":3,"sources":["reportWebVitals.ts","store/slices/imageCatalogSlice.ts","store/slices/mainImageSlice.ts","store/slices/modalWindowSlice.ts","store/slices/preloaderSlice.ts","store/store.ts","constants/appConstants.js","helpers/checkTodayDate.js","helpers/checkImageInCache.js","helpers/context.js","components/ImageBlock/ImageBlock.js","components/ImageBlock/ImageBlockContainer.js","components/ErrorComponent/ErrorComponent.js","constants/thumbnailFromVideoConstants.js","components/VideoBlock/VideoBlock.js","components/VideoBlock/VideoBlockContainer.js","components/RenderingContentDependingOnTheType/RenderingContentDependingOnTheType.js","components/ApplicationError/ApplicationError.js","helpers/workWithLocalStorage.js","helpers/queryString.js","components/MainImage/MainImage.js","components/MainImage/MainImageContainer.js","components/loaders/loaders.js","helpers/convertDateObjectToString.js","components/ImageCatalog/ImageCatalog.js","components/ImageCatalog/ImageCatalogContainer.js","helpers/convertStringDateToObject.js","helpers/removeParentClass.js","components/ModalWindow/ModalWindow.js","components/ModalWindow/ModalWindowContainer.js","components/Preloader/Preloader.js","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","imageCatalogSlice","createSlice","name","initialState","items","itemsForOneIteration","date","startDateValue","endDateValue","itemsCounterForOneIteration","loader","reducers","loadImagesToImageCatalog","state","action","payload","loadImagesForOneIterationToImageCatalog","changeDateIntervalInImageCatalog","countItemsForOneIteration","loaderInImageCatalog","actions","mainImageSlice","imageData","url","explanation","title","mediaType","todayData","setTodayData","setMainImage","modalWindowSlice","modalWindowState","modalWindowTitle","modalWindowMainData","modalWindowDate","modalWindowExplanation","modalWindowType","setStateForModalWindow","setTitleForModalWindow","setMainDataForModalWindow","setDateForModalWindow","setExplanationForModalWindow","setTypeForModalWindow","preloaderSlice","itemsCounterForPreloader","updateItemsCounterForPreloader","store","configureStore","reducer","mainImage","imageCatalog","imageCatalogReducer","modalWindow","modalWindowReducer","preloader","preloaderReducer","devTools","process","appConstants","NASA_QUERY","NASA_API_KEY","NASA_API_KEY_STRING","NASA_TARGET_DATE_STRING","NASA_START_DATE_STRING","NASA_END_DATE_STRING","MEDIA_TYPE_IMAGE","MEDIA_TYPE_VIDEO","TODAY","LOCAL_STORAGE_KEY","ITEMS_ON_PAGE","MAIN_IMAGE_ATTRIBUTE","CLASS_FOR_LOADED_ELEMENTS","ITEMS_ON_PAGE_WITH_FIRST_ITERATION","MODAL_WINDOW_IMAGE","MODAL_WINDOW_VIDEO","checkTodayDate","C","checkImageInCache","src","image","Image","complete","MainImageDataContext","createContext","ImageBlock","modalWindowShowed","todayImage","itemsFromImageCatalog","data","useContext","imageWrap","useRef","useEffect","current","classList","remove","add","changeModalWindow","attribute","targetItem","hdurl","changeStateForModalWindow","itemCounter","className","ref","data-item-counter","onClick","onLoad","connect","dispatch","mainData","type","props","ErrorComponent","thumbnailFromVideoConstants","YOUTUBE_BIG_THUMBNAIL","videoId","YOUTUBE_MEDIUM_THUMBNAIL","YOUTUBE_SMALL_THUMBNAIL","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT","VIMEO_GET_THUMBNAIL_ID","vimeoVideoId","VIMEO_GET_THUMBNAIL","imageId","VideoBlock","regExpVimeo","regExpYoutube","useState","videoThumbnail","setVideoThumbnail","stateErrorComponent","setStateErrorComponent","renderVideo","match","youtubeVideoId","pop","getThumbnailFromYoutubeVideo","getThumbnailFromVimeoVideo","checkImagesWidth","width","height","TC","bigThumbnail","Promise","resolve","onload","naturalWidth","naturalHeight","a","fetch","res","json","thumbnail_url","String","RenderingContentDependingOnTheType","ApplicationError","document","body","style","overflow","window","location","reload","readFromLocalStorage","key","localStorage","getItem","queryString","startDate","endDate","keyString","dateString","startEndDate","MainImage","changeImage","dataFromLocalStorage","JSON","parse","input","errorComponent","ajaxQuery","addEventListener","setNewDate","removeEventListener","value","Object","keys","length","stringify","setItem","selectedDate","nasaQuery","ok","Error","nasaParse","media_type","targetObj","console","log","e","target","contextObj","Provider","max","onChange","LoaderActive","LoaderEmpty","convertDateObjectToString","Date","monthIncrement","getMonth","month","day","getDate","getFullYear","ImageCatalog","imagesArray","loadImages","imagesArrayForOneIteration","loadImagesToOneIteration","dateInterval","changeDateInterval","changeLoader","todayDate","setDate","itemsCounter","reverse","item","counter","hasMore","loadMore","map","loaderShow","convertStringDateToObject","groups","removeParentClass","element","closest","ImgCreator","imgLink","href","IframeCreator","iframeLink","ModalWindow","dateObject","year","Modal","dialogClassName","show","onHide","animation","Header","closeButton","Title","Body","Footer","Preloader","App","useSelector","scroll","removeAttribute","ReactDOM","render","StrictMode","getElementById"],"mappings":"0WAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,eCYRQ,EAAoBC,YAAY,CACpCC,KAAM,eACNC,aAbuC,CACvCC,MAAO,GACPC,qBAAsB,GACtBC,KAAM,CACJC,eAAgB,KAChBC,aAAc,MAEhBC,4BAA6B,EAC7BC,QAAQ,GAMRC,SAAU,CACRC,yBADQ,SACiBC,EAA2BC,GAClDD,EAAMT,MAAQU,EAAOC,SAEvBC,wCAJQ,SAKNH,EACAC,GAEAD,EAAMR,qBAAuBS,EAAOC,SAEtCE,iCAVQ,SAWNJ,EACAC,GAEAD,EAAMP,KAAKC,eAAiBO,EAAOC,QAAQR,eAC3CM,EAAMP,KAAKE,aAAeM,EAAOC,QAAQP,cAE3CU,0BAjBQ,SAiBkBL,EAA2BC,GACnDD,EAAMJ,4BAA8BK,EAAOC,SAE7CI,qBApBQ,SAoBaN,EAA2BC,GAC9CD,EAAMH,OAASI,EAAOC,Y,EAWxBf,EAAkBoB,QALpBR,E,EAAAA,yBACAI,E,EAAAA,wCACAC,E,EAAAA,iCACAC,E,EAAAA,0BACAC,E,EAAAA,qBAGanB,IAAf,QCrCMqB,EAAiBpB,YAAY,CACjCC,KAAM,YACNC,aAnBoC,CACpCmB,UAAW,CACThB,KAAM,GACNiB,IAAK,GACLC,YAAa,GACbC,MAAO,GACPC,UAAW,IAEbC,UAAW,CACTrB,KAAM,GACNiB,IAAK,GACLC,YAAa,GACbC,MAAO,GACPC,UAAW,KAObf,SAAU,CACRiB,aADQ,SACKf,EAAwBC,GACnCD,EAAMc,UAAY,CAChBrB,KAAMQ,EAAOC,QAAQT,KACrBiB,IAAKT,EAAOC,QAAQQ,IACpBC,YAAaV,EAAOC,QAAQS,YAC5BC,MAAOX,EAAOC,QAAQU,MACtBC,UAAWZ,EAAOC,QAAQW,YAG9BG,aAVQ,SAUKhB,EAAwBC,GACnCD,EAAMS,UAAY,CAChBhB,KAAMQ,EAAOC,QAAQT,KACrBiB,IAAKT,EAAOC,QAAQQ,IACpBC,YAAaV,EAAOC,QAAQS,YAC5BC,MAAOX,EAAOC,QAAQU,MACtBC,UAAWZ,EAAOC,QAAQW,e,EAMYL,EAAeD,QAA9CQ,E,EAAAA,aAAcC,E,EAAAA,aAEdR,IAAf,QC5BMS,EAAmB7B,YAAY,CACnCC,KAAM,cACNC,aAXsC,CACtC4B,kBAAkB,EAClBC,iBAAkB,KAClBC,oBAAqB,KACrBC,gBAAiB,KACjBC,uBAAwB,KACxBC,gBAAiB,MAMjBzB,SAAU,CACR0B,uBADQ,SACexB,EAA0BC,GAC/CD,EAAMkB,iBAAmBjB,EAAOC,SAElCuB,uBAJQ,SAIezB,EAA0BC,GAC/CD,EAAMmB,iBAAmBlB,EAAOC,SAElCwB,0BAPQ,SAOkB1B,EAA0BC,GAClDD,EAAMoB,oBAAsBnB,EAAOC,SAErCyB,sBAVQ,SAUc3B,EAA0BC,GAC9CD,EAAMqB,gBAAkBpB,EAAOC,SAEjC0B,6BAbQ,SAaqB5B,EAA0BC,GACrDD,EAAMsB,uBAAyBrB,EAAOC,SAExC2B,sBAhBQ,SAgBc7B,EAA0BC,GAC9CD,EAAMuB,gBAAkBtB,EAAOC,Y,EAYjCe,EAAiBV,QANnBiB,E,EAAAA,uBACAC,E,EAAAA,uBACAC,E,EAAAA,0BACAC,E,EAAAA,sBACAC,E,EAAAA,6BACAC,E,EAAAA,sBAGaZ,IAAf,QC9CMa,EAAiB1C,YAAY,CACjCC,KAAM,YACNC,aANoC,CACpCyC,yBAA0B,GAM1BjC,SAAU,CACRkC,+BADQ,SAENhC,EACAC,GAEAD,EAAM+B,yBAA2B9B,EAAOC,YAK/B8B,EAAmCF,EAAevB,QAAlDyB,+BAEAF,IAAf,QCPeG,EAVDC,YAAe,CAC3BC,QAAS,CACPC,UAAW5B,EACX6B,aAAcC,EACdC,YAAaC,EACbC,UAAWC,GAEbC,UAAUC,I,wCCSGC,EAtBM,CACnBC,WAAY,sCACZC,aAAc,2CACdC,oBAAqB,UACrBC,wBAAyB,OACzBC,uBAAwB,aACxBC,qBAAsB,WACtBC,iBAAkB,QAClBC,iBAAkB,QAClBC,MAAO,QACPC,kBAAmB,WACnBC,cAAe,GAEfC,qBAAsB,aAEtBC,0BAA2B,UAC3BC,mCAAoC,GAEpCC,mBAAoB,QACpBC,mBAAoB,SCZPC,EALQ,SAACrE,GACpB,OAAIA,IAASsE,EAAET,OCIJU,EAPW,SAACC,GACvB,IAAMC,EAAQ,IAAIC,MAGlB,OAFAD,EAAMD,IAAMA,EAELC,EAAME,UCFJC,EAAuBC,0B,eCqFrBC,EAhFI,SAAC,GAab,IAZLC,EAYI,EAZJA,kBACAhD,EAWI,EAXJA,uBACAC,EAUI,EAVJA,uBACAC,EASI,EATJA,0BACAC,EAQI,EARJA,sBACAC,EAOI,EAPJA,6BACAC,EAMI,EANJA,sBACAO,EAKI,EALJA,UACAqC,EAII,EAJJA,WACAC,EAGI,EAHJA,sBACA3C,EAEI,EAFJA,yBACAC,EACI,EADJA,+BAEM2C,EAAOC,qBAAWP,GAClBQ,EAAYC,mBAElBC,qBAAU,WAMR,OALIf,EAAkBW,EAAKjE,KACzBmE,EAAUG,QAAQC,UAAUC,OAAOnB,EAAEL,2BAErCmB,EAAUG,QAAQC,UAAUE,IAAIpB,EAAEL,2BAE7B,kBAAMmB,EAAUG,QAAQC,UAAUC,OAAOnB,EAAEL,8BACjD,CAACiB,EAAKjE,MAET,IA6BM0E,EAAoB,WACnBZ,KA9B2B,SAACa,GACjC,OAAQA,GACN,KAAKtB,EAAEN,qBACDK,EAAe1B,EAAU3C,OAC3BgC,EAAuBgD,EAAW7D,OAClCc,EAA0B+C,EAAW/D,KACrCkB,EAA6B6C,EAAW9D,aACxCkB,EAAsBkC,EAAEH,oBACxBjC,EAAsB8C,EAAWhF,QAEjCgC,EAAuBW,EAAUxB,OACjCc,EAA0BU,EAAU1B,KACpCkB,EAA6BQ,EAAUzB,aACvCkB,EAAsBkC,EAAEH,oBACxBjC,EAAsBS,EAAU3C,OAElC,MAEF,QACE,IAAM6F,EAAaZ,EAAsBW,GACzC5D,EAAuB6D,EAAW1E,OAClCc,EAA0B4D,EAAWC,OACrC3D,EAA6B0D,EAAW3E,aACxCkB,EAAsBkC,EAAEH,oBACxBjC,EAAsB2D,EAAW7F,OAOnC+F,CAA0Bb,EAAKc,aAC/BjE,GAAuB,KAS3B,OACE,qBAAKkE,UAAS,UAAKf,EAAKe,UAAV,iBAA4B3B,EAAEL,2BAA6BiC,IAAKd,EAA9E,SACE,qBACEZ,IAAKU,EAAKjE,IACVgF,UAAWf,EAAKe,UAChBE,oBAAmBjB,EAAKc,YACxBI,QAAS,kBAAMT,KACfU,OAAQ,kBAXZjB,EAAUG,QAAQC,UAAUC,OAAOnB,EAAEL,gCACrC1B,IAAiCD,SCnBtBgE,eApCS,SAAC/F,GAAD,MAAY,CAClCwE,kBAAmBxE,EAAMuC,YAAYrB,iBACrCkB,UAAWpC,EAAMoC,UAAU3B,UAC3BgE,WAAYzE,EAAMoC,UAAUtB,UAC5B4D,sBAAuB1E,EAAMqC,aAAa9C,MAC1CwC,yBAA0B/B,EAAMyC,UAAUV,6BAGjB,SAACiE,GAAD,MAAe,CACxCxE,uBADwC,SACjBxB,GACrBgG,EAASxE,EAAuBxB,KAGlCyB,uBALwC,SAKjBb,GACrBoF,EAASvE,EAAuBb,KAGlCc,0BATwC,SASduE,GACxBD,EAAStE,EAA0BuE,KAGrCtE,sBAbwC,SAalBlC,GACpBuG,EAASrE,EAAsBlC,KAGjCmC,6BAjBwC,SAiBXjB,GAC3BqF,EAASpE,EAA6BjB,KAExCkB,sBApBwC,SAoBlBqE,GACpBF,EAASnE,EAAsBqE,KAEjClE,+BAvBwC,SAuBT2C,GAC7BqB,EAAShE,EAA+B2C,QAI7BoB,EAxCa,SAACI,GAC3B,OAAO,cAAC,EAAD,eAAgBA,OCFVC,G,MARQ,WACnB,OACI,qBAAKV,UAAU,kBAAf,SACI,4CCOGW,EAbqB,CAChCC,sBAAuB,SAACC,GAAD,2CAA4CA,EAA5C,uBACvBC,yBAA0B,SAACD,GAAD,2CAA4CA,EAA5C,mBAC1BE,wBAAyB,SAACF,GAAD,2CAA4CA,EAA5C,mBAGzBG,qCAAsC,IACtCC,sCAAuC,GAEvCC,uBAAwB,SAACC,GAAD,wEAA8EA,IACtGC,oBAAqB,SAACC,GAAD,6CAA8CA,EAA9C,UCuLVC,G,MAxLI,SAAC,GAab,IAZLxC,EAYI,EAZJA,kBACAhD,EAWI,EAXJA,uBACAC,EAUI,EAVJA,uBACAC,EASI,EATJA,0BACAC,EAQI,EARJA,sBACAC,EAOI,EAPJA,6BACAC,EAMI,EANJA,sBACAO,EAKI,EALJA,UACAqC,EAII,EAJJA,WACAC,EAGI,EAHJA,sBACA3C,EAEI,EAFJA,yBACAC,EACI,EADJA,+BAEM2C,EAAOC,qBAAWP,GAClBQ,EAAYC,mBAEZmC,EAAc,6EACdC,EACJ,iHANE,EAQwCC,qBARxC,mBAQGC,EARH,KAQmBC,EARnB,OASkDF,oBAAS,GAT3D,mBASGG,EATH,KASwBC,EATxB,KAWJxC,qBAAU,WACRyC,MACC,CAACpF,IAEJ2C,qBAAU,WAQR,OAPIqC,IACEpD,EAAkBoD,GACpBvC,EAAUG,QAAQC,UAAUC,OAAOnB,EAAEL,2BAErCmB,EAAUG,QAAQC,UAAUE,IAAIpB,EAAEL,4BAG/B,kBAAMmB,EAAUG,QAAQC,UAAUC,OAAOnB,EAAEL,8BACjD,CAAC0D,IAEJ,IAAMI,EAAc,WAClB,GAAI7C,EAAKjE,IAAI+G,MAAMP,GAAgB,CACjC,IAAMQ,EAAiB/C,EAAKjE,IAAI+G,MAAM,yCAAyCE,MAC/EC,EAA6BF,QACxB,GAAI/C,EAAKjE,IAAI+G,MAAMR,GAAc,CACtC,IAAMJ,EAAelC,EAAKjE,IAAI+G,MAAM,mBAAmBE,MACvDE,EAA2BhB,QAE3BU,GAAuB,IAIrBO,EAAmB,SAACC,EAAOC,GAC/B,OACED,IAAUE,EAAGvB,sCACbsB,IAAWC,EAAGtB,uCAQZiB,EAA+B,SAACrB,GACpC,IAQM2B,EAAe,IAAI/D,MAEzB,OAAQQ,EAAKc,aACX,KAAK1B,EAAEN,qBACL,IAAI0E,SAAQ,SAACC,GACXF,EAAajE,IAAMgE,EAAG3B,sBAAsBC,GAC5C2B,EAAaG,OAAS,WAChBP,EAAiBI,EAAaI,aAAcJ,EAAaK,eAC3DlB,EAAkBa,EAAajE,KAE/BmE,QAGHvJ,MAAK,WACN,OAAO,IAAIsJ,SAAQ,SAACC,GAClBF,EAAajE,IAAMgE,EAAGzB,yBAAyBD,GAC/C2B,EAAaG,OAAS,WAChBP,EAAiBI,EAAaI,aAAcJ,EAAaK,eAC3DlB,EAAkBa,EAAajE,KAE/BmE,QAGHvJ,MAAK,WACNqJ,EAAajE,IAAMgE,EAAGxB,wBAAwBF,GAC9C2B,EAAaG,OAAS,WAChBP,EAAiBI,EAAaI,aAAcJ,EAAaK,eAC3DlB,EAAkBa,EAAajE,KAE/BsD,GAAuB,UAK/B,MAEF,QACEW,EAAajE,IAAMgE,EAAGxB,wBAAwBF,GAC9C2B,EAAaG,OA9CW,WACtBP,EAAiBI,EAAaI,aAAcJ,EAAaK,eAC3DlB,EAAkBa,EAAajE,KAE/BsD,GAAuB,MA+CvBM,EAA0B,uCAAG,WAAOhB,GAAP,SAAA2B,EAAA,sEAC3BC,MAAMR,EAAGrB,uBAAuBC,IACnChI,MAAK,SAAC6J,GAAD,OAASA,EAAIC,UAClB9J,MAAK,SAAC6J,GAAD,OAASA,EAAIE,cAAcnB,MAAM,mBAAmBE,SACzD9I,MAAK,SAAC6J,GAAD,OAASrB,EAAkBY,EAAGnB,oBAAoB4B,OAJzB,2CAAH,sDAoC1BtD,EAAoB,WACnBZ,KA9B2B,SAACa,GACjC,OAAQA,GACN,KAAKtB,EAAEN,qBACDK,EAAe1B,EAAU3C,OAC3BgC,EAAuBgD,EAAW7D,OAClCc,EAA0B+C,EAAW/D,KACrCkB,EAA6B6C,EAAW9D,aACxCkB,EAAsBkC,EAAEF,oBACxBlC,EAAsB8C,EAAWhF,QAEjCgC,EAAuBW,EAAUxB,OACjCc,EAA0BU,EAAU1B,KACpCkB,EAA6BQ,EAAUzB,aACvCkB,EAAsBkC,EAAEF,oBACxBlC,EAAsBS,EAAU3C,OAElC,MAEF,QACE,IAAM6F,EAAaZ,EAAsBmE,OAAOxD,IAChD5D,EAAuB6D,EAAW1E,OAClCc,EAA0B4D,EAAW5E,KACrCkB,EAA6B0D,EAAW3E,aACxCkB,EAAsBkC,EAAEF,oBACxBlC,EAAsB2D,EAAW7F,OAOnC+F,CAA0Bb,EAAKc,aAC/BjE,GAAuB,KAS3B,OACE,mCACG8F,EACC,cAAC,EAAD,IAEA,qBACE5B,UAAS,UAAKf,EAAKe,UAAV,uBAAkC3B,EAAEL,2BAC7CiC,IAAKd,EAFP,SAIE,qBACEa,UAAS,UAAKf,EAAKe,UAAV,YAAuBf,EAAKe,UAA5B,UACTE,oBAAmBjB,EAAKc,YACxBI,QAAS,kBAAMT,KACfnB,IAAKmD,EACLtB,OAAQ,kBAlBhBjB,EAAUG,QAAQC,UAAUC,OAAOnB,EAAEL,gCACrC1B,IAAiCD,YCpHtBgE,eApCS,SAAC/F,GAAD,MAAY,CAClCwE,kBAAmBxE,EAAMuC,YAAYrB,iBACrCkB,UAAWpC,EAAMoC,UAAU3B,UAC3BgE,WAAYzE,EAAMoC,UAAUtB,UAC5B4D,sBAAuB1E,EAAMqC,aAAa9C,MAC1CwC,yBAA0B/B,EAAMyC,UAAUV,6BAGjB,SAACiE,GAAD,MAAe,CACxCxE,uBADwC,SACjBxB,GACrBgG,EAASxE,EAAuBxB,KAGlCyB,uBALwC,SAKjBb,GACrBoF,EAASvE,EAAuBb,KAGlCc,0BATwC,SASduE,GACxBD,EAAStE,EAA0BuE,KAGrCtE,sBAbwC,SAalBlC,GACpBuG,EAASrE,EAAsBlC,KAGjCmC,6BAjBwC,SAiBXjB,GAC3BqF,EAASpE,EAA6BjB,KAExCkB,sBApBwC,SAoBlBqE,GACpBF,EAASnE,EAAsBqE,KAEjClE,+BAvBwC,SAuBT2C,GAC7BqB,EAAShE,EAA+B2C,QAI7BoB,EAxCa,SAACI,GAC3B,OAAO,cAAC,EAAD,eAAgBA,OCWV2C,EAjB4B,SAAC,GACxC,OAD0D,EAAhBjI,WAEtC,KAAKkD,EAAEX,iBACH,OAAO,cAAC,EAAD,IAEX,KAAKW,EAAEV,iBACH,OAAO,cAAC,EAAD,IAEX,QACI,OAAO,cAAC,EAAD,MCMJ0F,G,MAnBU,WAGrB,OAFAC,SAASC,KAAKC,MAAMC,SAAW,SAG3B,yBAASzD,UAAU,oBAAnB,SACI,sBAAKA,UAAU,gCAAf,UACI,oBAAIA,UAAU,4BAAd,2BACA,oBAAIA,UAAU,4BAAd,qCACA,wBACIA,UAAU,mCACVG,QAAS,kBAAMuD,OAAOC,SAASC,UAFnC,gCCPHC,GAAuB,SAACC,GACjC,OAAOC,aAAaC,QAAQF,ICSjBG,GAZK,WAA8C,IAA7ClK,EAA4C,uDAArC,GAAImK,EAAiC,uDAArB,GAAIC,EAAiB,uDAAP,GAChDC,EAAS,UAAM/F,EAAEf,oBAAR,YAA+Be,EAAEhB,cAC1CgH,EAAatK,EAAI,WAAOsE,EAAEd,wBAAT,YAAoCxD,GAAS,GAC9DuK,EAAeJ,GAAaC,EAAb,WACX9F,EAAEb,uBADS,YACiB0G,EADjB,YAC8B7F,EAAEZ,qBADhC,YACwD0G,GACvE,GAEN,MAAM,GAAN,OACO9F,EAAEjB,WADT,YACuBgH,GADvB,OACmCC,GADnC,OACgDC,ICwHrCC,I,MAxHG,SAAC,GAMZ,IALH7H,EAKE,EALFA,UACA3B,EAIE,EAJFA,UACAyJ,EAGE,EAHFA,YACApJ,EAEE,EAFFA,UACAC,EACE,EADFA,aAEMoJ,EAAuBC,KAAKC,MAAMd,GAAqBxF,EAAER,oBAEzD+G,EAAQxF,mBAHZ,EAI+CqC,oBAAS,GAJxD,mBAIKoD,EAJL,KAIqBhD,EAJrB,KAMFxC,qBAAU,WAIN,OAHAyF,IACAF,EAAMtF,QAAQyF,iBAAiB,SAAUC,GAElC,kBAAMJ,EAAMtF,QAAQ2F,oBAAoB,SAAUD,MAC1D,IAEH3F,qBAAU,WF7BqB,IAACyE,EAAKoB,EE8B5B9J,EAAUrB,OAEXqB,EAAUrB,OAASgB,EAAUhB,OACzB8J,GAAqBxF,EAAER,oBACnB4G,GACGU,OAAOC,KAAKX,GAAsBY,QAClCZ,EAAqB1J,UAAUhB,KAElCyK,EAAYC,EAAqB1J,WAKrCyJ,EAAYpJ,IAIhBL,EAAUhB,OAASqB,EAAUrB,MAAMyK,EAAY,2BAAKpJ,GAAN,IAAiBrB,KAAMsE,EAAET,SF/C/CkG,EEiDRzF,EAAER,kBFjDWqH,EEiDQR,KAAKY,UAAL,eAAoB5I,IFhDjEqH,aAAawB,QAAQzB,EAAKoB,MEiDvB,CAACxI,IAEJ,IAAMoI,EAAS,uCAAG,0DAAAhC,EAAA,6DAAO0C,EAAP,+BAAsB,GAAtB,kBAEczC,MAAMkB,GAAYuB,IAFhC,WAEJC,EAFI,QAGKC,GAHL,sBAGe,IAAIC,MAAM,uBAHzB,uBAKcF,EAAUxC,OALxB,OAKJ2C,EALI,OAOJ7L,EAAO6L,EAAU7L,KACjBoB,EAAYyK,EAAUC,WACtB7K,EAAMG,IAAckD,EAAEX,iBAAmBkI,EAAU/F,MAAQ+F,EAAU5K,IACrEC,EAAc2K,EAAU3K,YACxBC,EAAQ0K,EAAU1K,MAClB4K,EAAY,CAAE/L,OAAMiB,MAAKC,cAAaC,QAAOC,aAE/CqK,EACAhB,EAAYsB,GAEZzK,EAAayK,GAjBP,kDAoBVC,QAAQC,IAAI,UAAZ,MAEAnE,GAAuB,GAEjBiE,EAAY,CACd/L,KAAMyL,EACNxK,IAAK,KACLC,YAAa,KACbC,MAAO,KACPC,UAAW,MAGXqK,EACAhB,EAAYsB,GAEZzK,EAAayK,GAnCP,0DAAH,qDAwCTd,EAAa,SAACiB,GAChB,IAAMf,EAAQe,EAAEC,OAAOhB,MACvBJ,EAAUI,IAGRiB,EAAa,CACfnG,UAAW,oBACXhF,IAAKoD,EAAerD,EAAUhB,MAAQqB,EAAUJ,IAAMD,EAAUC,IAEhE+E,YAAa1B,EAAEN,sBAGnB,OACI,qCACK8G,GAAkB,cAAC,EAAD,IAEnB,0BAAS7E,UAAU,aAAnB,UACI,cAACrB,EAAqByH,SAAtB,CAA+BlB,MAAOiB,EAAtC,SACI,cAAC,EAAD,CACIhL,UAAWiD,EAAerD,EAAUhB,MAAQqB,EAAUD,UAAYJ,EAAUI,cAIpF,oBAAI6E,UAAU,oBAAd,sDAEA,uBACIA,UAAU,oBACVQ,KAAK,OACL6F,IAAKjL,EAAUrB,KACfmL,MAAO9G,EAAerD,EAAUhB,MAAQqB,EAAUrB,KAAQgB,EAAUhB,MAAQ,GAC5EkG,IAAK2E,EACL0B,SAAU,kBAAM9B,EAAY,2BAAKzJ,GAAN,IAAiBhB,KAAM6K,EAAMtF,QAAQ4F,oBCpGrE7E,gBAfS,SAAC/F,GAAD,MAAY,CAClCoC,UAAWpC,EAAMoC,UACjB3B,UAAWT,EAAMoC,UAAU3B,UAC3BK,UAAWd,EAAMoC,UAAUtB,cAGF,SAACkF,GAAD,MAAe,CACxCjF,aADwC,SAC3B4D,GACXqB,EAASjF,EAAa4D,KAExBuF,YAJwC,SAI5BvF,GACVqB,EAAShF,EAAa2D,QAIXoB,EAnBY,SAACI,GAC1B,OAAO,cAAC,GAAD,eAAeA,O,6BCHX8F,I,MAAe,WAC1B,OACE,sBAAKvG,UAAU,gBAAf,UACE,qBAAKA,UAAU,0BACf,gDAKOwG,GAAc,WACzB,OACE,sBAAKxG,UAAU,eAAf,UACE,qBAAKA,UAAU,yBACf,+CCPSyG,GARmB,WAAwB,IAAvB1M,EAAsB,uDAAf,IAAI2M,KACpCC,EAAiB5M,EAAK6M,WAAa,EACnCC,EAAQF,EAAiB,GAAjB,WAA0BA,GAAmBA,EACrDG,EAAM/M,EAAKgN,UAAY,GAAjB,WAA0BhN,EAAKgN,WAAchN,EAAKgN,UAE9D,MAAM,GAAN,OAAUhN,EAAKiN,cAAf,YAAgCH,EAAhC,YAAyCC,ICoI9BG,I,MA9HM,SAAC,GAYf,IACD/C,EAAWC,EAZf+C,EAWI,EAXJA,YACAC,EAUI,EAVJA,WACAC,EASI,EATJA,2BACAC,EAQI,EARJA,yBACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,mBACArN,EAKI,EALJA,4BACAS,EAII,EAJJA,0BACAR,EAGI,EAHJA,OACAqN,EAEI,EAFJA,aACAC,EACI,EADJA,UACI,EAG6ChG,oBAAS,GAHtD,mBAGGoD,EAHH,KAGmBhD,EAHnB,KAKJxC,qBAAU,WAEJnF,EAA8BmE,EAAEP,eAAiD,IAAhC5D,IACnDgK,EAAY,IAAIwC,KAAKY,EAAatN,iBAClCmK,EAAU,IAAIuC,KAAKY,EAAatN,iBAExB0N,QAAQvD,EAAQ4C,UAAY,GACpC7C,EAAUwD,QAAQxD,EAAU6C,WAAa1I,EAAEP,cAAgB5D,IAE3D4K,EACE2B,GAA0BvC,GAC1BuC,GAA0BtC,GAC1BjK,GAGFqN,EAAmB,GAAD,OACbrD,EAAU8C,cADG,YACc9C,EAAU0C,WAAa,EADrC,YAC0C1C,EAAU6C,WADpD,UAEb5C,EAAQ6C,cAFK,YAEY7C,EAAQyC,WAAa,EAFjC,YAEsCzC,EAAQ4C,eAGjE,CAAC7M,IAEJmF,qBAAU,WACH6H,EAAY7B,QACjBmC,GAAa,KACZ,CAACN,IAEJ7H,qBAAU,WAER8H,EAAW,GAAD,oBAAKD,GAAL,aAAqBE,OAC9B,CAACA,IAEJ/H,qBAAU,WACHoI,KAGLvD,EAAY,IAAIwC,MACNgB,QAAQxD,EAAU6C,UAAY1I,EAAEP,gBAC1CqG,EAAU,IAAIuC,KAAKe,IACXC,QAAQvD,EAAQ4C,UAAY,GAEpCjC,EAAU2B,GAA0BvC,GAAYuC,GAA0BtC,IAC1EoD,EAAmB,GAAD,OACbrD,EAAU8C,cADG,YACc9C,EAAU0C,WAAa,EADrC,YAC0C1C,EAAU6C,WADpD,UAEb5C,EAAQ6C,cAFK,YAEY7C,EAAQyC,WAAa,EAFjC,YAEsCzC,EAAQ4C,eAE/D,CAACU,IAEJ,IAAM3C,EAAS,uCAAG,WAAOZ,EAAWC,GAAlB,+BAAArB,EAAA,6DAA2B6E,EAA3B,+BAA0C,EAA1C,kBAEU5E,MAAMkB,GAAY,KAAMC,EAAWC,IAF7C,cAERsB,EAFQ,gBAGUA,EAAUxC,OAHpB,OAGR2C,EAHQ,OAKdyB,EAAyB,aAAIzB,EAAUgC,YACvCjN,EAA0BiL,EAAUP,OAASsC,GAN/B,kDAQd5B,QAAQC,IAAR,MAEAnE,GAAuB,GAVT,0DAAH,wDAgCTsE,EAAa,SAAC0B,EAAMC,GAAP,MAAoB,CACrC9H,UAAW,uBACXhF,IAAK6M,EAAK7M,IAEV+E,YAAa+H,IAGf,OACE,qCACGjD,GAAkB,cAAC,EAAD,IAEnB,yBAAS7E,UAAU,gBAAnB,SACE,eAAC,KAAD,CAAgB+H,SAAS,EAAMC,SA9BX,WACxBR,GAAa,GAETF,EAAatN,gBAAkBsN,EAAarN,eAE9CiK,EAAY,IAAIwC,KAAKY,EAAatN,iBAClCmK,EAAU,IAAIuC,KAAKY,EAAatN,iBACxB0N,QAAQvD,EAAQ4C,UAAY,GACpC7C,EAAUwD,QAAQxD,EAAU6C,UAAY1I,EAAEP,eAE1CgH,EAAU2B,GAA0BvC,GAAYuC,GAA0BtC,IAC1EoD,EAAmB,GAAD,OACbrD,EAAU8C,cADG,YACc9C,EAAU0C,WAAa,EADrC,YAC0C1C,EAAU6C,WADpD,UAEb5C,EAAQ6C,cAFK,YAEY7C,EAAQyC,WAAa,EAFjC,YAEsCzC,EAAQ4C,cAiB9D,UACE,oBAAI/G,UAAU,sBAAd,SACGkH,EAAYe,KAAI,SAACJ,EAAMC,GAAP,OACf,6BACE,cAACnJ,EAAqByH,SAAtB,CAA+BlB,MAAOiB,EAAW0B,EAAMC,GAAvD,SACE,cAAC,EAAD,CAAoC3M,UAAW0M,EAAKhC,gBAF/CgC,EAAK9N,WAOjBI,EAAS,cAAC,GAAD,IAAmB,cAAC,GAAD,cCzFxBkG,gBA3BS,SAAC/F,GAAD,MAAY,CAClC4M,YAAa5M,EAAMqC,aAAa9C,MAChCuN,2BAA4B9M,EAAMqC,aAAa7C,qBAC/CwN,aAAchN,EAAMqC,aAAa5C,KACjCG,4BAA6BI,EAAMqC,aAAazC,4BAChDC,OAAQG,EAAMqC,aAAaxC,OAC3BsN,UAAWnN,EAAMoC,UAAUtB,UAAUrB,SAGZ,SAACuG,GAAD,MAAe,CACxC6G,WADwC,SAC7BtN,GACTyG,EAASjG,EAAyBR,KAEpCwN,yBAJwC,SAIfxN,GACvByG,EAAS7F,EAAwCZ,KAEnD0N,mBAPwC,SAOrBvN,EAAgBC,GACjCqG,EAAS5F,EAAiC,CAAEV,iBAAgBC,mBAE9DU,0BAVwC,SAUdd,GACxByG,EAAS3F,EAA0Bd,KAErC2N,aAbwC,SAa3BU,GACX5H,EAAS1F,EAAqBsN,QAInB7H,EA/Be,SAACI,GAC7B,OAAO,cAAC,GAAD,eAAkBA,O,kBCPZ0H,GAJmB,SAACpO,GAAD,OAC9BA,EAAKgI,MAAL,aAAW,yCAAX,yBAAoEqG,QCOzDC,GANW,SAACC,GACvBA,EACKC,QADL,WACiBlK,EAAEL,4BACduB,UAAUC,OAAOnB,EAAEL,4BCCtBwK,I,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mBAAGC,KAAMD,EAASvC,OAAO,SAASlG,UAAW3B,EAAEL,0BAA/C,SACE,qBACEgC,UAAU,0BACVzB,IAAKkK,EACLrI,OAAQ,SAAC6F,GAAD,OAAOoC,GAAkBpC,EAAEC,eAKnCyC,GAAgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAH,OACpB,qBAAK5I,UAAS,oCAA+B3B,EAAEL,2BAA/C,SACE,wBACEgC,UAAU,wDACVzB,IAAKqK,EACLxI,OAAQ,SAAC6F,GAAD,OAAOoC,GAAkBpC,EAAEC,cA6C1B2C,GAxCK,SAAC,GAQd,IAPL/J,EAOI,EAPJA,kBACAhD,EAMI,EANJA,uBACAL,EAKI,EALJA,iBACAC,EAII,EAJJA,oBACAC,EAGI,EAHJA,gBACAC,EAEI,EAFJA,uBACAC,EACI,EADJA,gBAEMiN,EAAanN,EACfwM,GAA0BxM,GAC1B,CAAEmL,IAAK,GAAID,MAAO,GAAIkC,KAAM,IAEhC,OACE,eAACC,GAAA,EAAD,CACEC,gBAAgB,eAChBC,KAAMpK,EACNqK,OAAQ,kBAAMrN,GAAuB,IACrCsN,WAAW,EAJb,UAME,cAACJ,GAAA,EAAMK,OAAP,CAAcrJ,UAAU,uBAAuBsJ,aAAW,EAA1D,SACE,cAACN,GAAA,EAAMO,MAAP,UACE,oBAAIvJ,UAAU,sBAAd,SAAqCvE,QAGzC,eAACuN,GAAA,EAAMQ,KAAP,CAAYxJ,UAAU,qBAAtB,UACGnE,IAAoBwC,EAAEF,mBACrB,cAAC,GAAD,CAAeyK,WAAYlN,IAE3B,cAAC,GAAD,CAAY+M,QAAS/M,IAEvB,4BAAIE,OAEN,cAACoN,GAAA,EAAMS,OAAP,UACE,sCAAOX,EAAWhC,IAAlB,YAAyBgC,EAAWjC,MAApC,YAA6CiC,EAAWC,cCrCjD1I,gBAfS,SAAC/F,GAAD,MAAY,CAClCwE,kBAAmBxE,EAAMuC,YAAYrB,iBACrCC,iBAAkBnB,EAAMuC,YAAYpB,iBACpCC,oBAAqBpB,EAAMuC,YAAYnB,oBACvCC,gBAAiBrB,EAAMuC,YAAYlB,gBACnCC,uBAAwBtB,EAAMuC,YAAYjB,uBAC1CC,gBAAiBvB,EAAMuC,YAAYhB,oBAGV,SAACyE,GAAD,MAAe,CACxCxE,uBADwC,SACjBxB,GACrBgG,EAASxE,EAAuBxB,QAIrB+F,EAnBc,SAACI,GAC5B,OAAO,cAAC,GAAD,eAAiBA,OCYXiJ,I,MAdG,SAAC,GAAmB,IAAjB1J,EAAgB,EAAhBA,UACjB,OACI,yBAASA,UAAS,oBAAeA,GAAjC,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAEnB,mBAAGA,UAAU,kBAAb,yBC4BD2J,GA9BH,WACV,IAAMtN,EAAmCuN,aACvC,SAACtP,GAAD,OAAsBA,EAAMyC,UAAUV,4BAgBxC,OAZAgD,qBAAU,WAKqB,KAA7BhD,GAAmCqH,OAAOmG,OAAO,EAAG,KACnD,CAACxN,IAEJA,EAA2BgC,EAAEJ,mCACxBqF,SAASC,KAAKC,MAAMC,SAAW,SAChCH,SAASC,KAAKuG,gBAAgB,SAGhC,qCACE,cAAC,GAAD,CACE9J,UAAW3D,EAA2BgC,EAAEJ,mCAAqC,GAAK,SAEpF,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,MC1BN8L,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU1N,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJ+G,SAAS4G,eAAe,SAM1BlR,M","file":"static/js/main.7fc6bbd9.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice } from '@reduxjs/toolkit'\nimport { IImageCatalogState } from '@/store/types/state'\nimport {\n  IChangeDataIntervalInImageCatalog,\n  ICountItemsForOneIteration,\n  ILoaderInImageCatalog,\n  ILoadImagesForOneIterationToImageCatalog,\n  ILoadImagesToImageCatalog,\n} from '@/store/types/actions'\n\nconst initialState: IImageCatalogState = {\n  items: [],\n  itemsForOneIteration: [],\n  date: {\n    startDateValue: null,\n    endDateValue: null,\n  },\n  itemsCounterForOneIteration: 0,\n  loader: true,\n}\n\nconst imageCatalogSlice = createSlice({\n  name: 'imageCatalog',\n  initialState,\n  reducers: {\n    loadImagesToImageCatalog(state: IImageCatalogState, action: ILoadImagesToImageCatalog) {\n      state.items = action.payload\n    },\n    loadImagesForOneIterationToImageCatalog(\n      state: IImageCatalogState,\n      action: ILoadImagesForOneIterationToImageCatalog\n    ) {\n      state.itemsForOneIteration = action.payload\n    },\n    changeDateIntervalInImageCatalog(\n      state: IImageCatalogState,\n      action: IChangeDataIntervalInImageCatalog\n    ) {\n      state.date.startDateValue = action.payload.startDateValue\n      state.date.endDateValue = action.payload.endDateValue\n    },\n    countItemsForOneIteration(state: IImageCatalogState, action: ICountItemsForOneIteration) {\n      state.itemsCounterForOneIteration = action.payload\n    },\n    loaderInImageCatalog(state: IImageCatalogState, action: ILoaderInImageCatalog) {\n      state.loader = action.payload\n    },\n  },\n})\n\nexport const {\n  loadImagesToImageCatalog,\n  loadImagesForOneIterationToImageCatalog,\n  changeDateIntervalInImageCatalog,\n  countItemsForOneIteration,\n  loaderInImageCatalog,\n} = imageCatalogSlice.actions\n\nexport default imageCatalogSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { ISetMainImage, ISetTodayData } from '@/store/types/actions'\nimport { IMainImageState } from '@/store/types/state'\n\nconst initialState: IMainImageState = {\n  imageData: {\n    date: '',\n    url: '',\n    explanation: '',\n    title: '',\n    mediaType: '',\n  },\n  todayData: {\n    date: '',\n    url: '',\n    explanation: '',\n    title: '',\n    mediaType: '',\n  },\n}\n\nconst mainImageSlice = createSlice({\n  name: 'mainImage',\n  initialState,\n  reducers: {\n    setTodayData(state: IMainImageState, action: ISetTodayData) {\n      state.todayData = {\n        date: action.payload.date,\n        url: action.payload.url,\n        explanation: action.payload.explanation,\n        title: action.payload.title,\n        mediaType: action.payload.mediaType,\n      }\n    },\n    setMainImage(state: IMainImageState, action: ISetMainImage) {\n      state.imageData = {\n        date: action.payload.date,\n        url: action.payload.url,\n        explanation: action.payload.explanation,\n        title: action.payload.title,\n        mediaType: action.payload.mediaType,\n      }\n    },\n  },\n})\n\nexport const { setTodayData, setMainImage } = mainImageSlice.actions\n\nexport default mainImageSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { IModalWindowState } from '@/store/types/state'\nimport {\n  ISetDateForModalWindow,\n  ISetExplanationForModalWindow,\n  ISetMainDataForModalWindow,\n  ISetTypeModalWindow,\n  ISetStateForModalWindow,\n  ISetTitleForModalWindow,\n} from '@/store/types/actions'\n\nconst initialState: IModalWindowState = {\n  modalWindowState: false,\n  modalWindowTitle: null,\n  modalWindowMainData: null,\n  modalWindowDate: null,\n  modalWindowExplanation: null,\n  modalWindowType: null,\n}\n\nconst modalWindowSlice = createSlice({\n  name: 'modalWindow',\n  initialState,\n  reducers: {\n    setStateForModalWindow(state: IModalWindowState, action: ISetStateForModalWindow) {\n      state.modalWindowState = action.payload\n    },\n    setTitleForModalWindow(state: IModalWindowState, action: ISetTitleForModalWindow) {\n      state.modalWindowTitle = action.payload\n    },\n    setMainDataForModalWindow(state: IModalWindowState, action: ISetMainDataForModalWindow) {\n      state.modalWindowMainData = action.payload\n    },\n    setDateForModalWindow(state: IModalWindowState, action: ISetDateForModalWindow) {\n      state.modalWindowDate = action.payload\n    },\n    setExplanationForModalWindow(state: IModalWindowState, action: ISetExplanationForModalWindow) {\n      state.modalWindowExplanation = action.payload\n    },\n    setTypeForModalWindow(state: IModalWindowState, action: ISetTypeModalWindow) {\n      state.modalWindowType = action.payload\n    },\n  },\n})\n\nexport const {\n  setStateForModalWindow,\n  setTitleForModalWindow,\n  setMainDataForModalWindow,\n  setDateForModalWindow,\n  setExplanationForModalWindow,\n  setTypeForModalWindow,\n} = modalWindowSlice.actions\n\nexport default modalWindowSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport { IPreloaderState } from '@/store/types/state'\nimport { IUpdateItemsCounterForPreloader } from '@/store/types/actions'\n\nconst initialState: IPreloaderState = {\n  itemsCounterForPreloader: 0,\n}\n\nconst preloaderSlice = createSlice({\n  name: 'preloader',\n  initialState,\n  reducers: {\n    updateItemsCounterForPreloader(\n      state: IPreloaderState,\n      action: IUpdateItemsCounterForPreloader\n    ) {\n      state.itemsCounterForPreloader = action.payload\n    },\n  },\n})\n\nexport const { updateItemsCounterForPreloader } = preloaderSlice.actions\n\nexport default preloaderSlice.reducer\n","import { configureStore } from '@reduxjs/toolkit'\nimport imageCatalogReducer from './slices/imageCatalogSlice'\nimport mainImageSlice from './slices/mainImageSlice'\nimport modalWindowReducer from './slices/modalWindowSlice'\nimport preloaderReducer from './slices/preloaderSlice'\n\nconst store = configureStore({\n  reducer: {\n    mainImage: mainImageSlice,\n    imageCatalog: imageCatalogReducer,\n    modalWindow: modalWindowReducer,\n    preloader: preloaderReducer,\n  },\n  devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport default store\n","const appConstants = {\n  NASA_QUERY: 'https://api.nasa.gov/planetary/apod',\n  NASA_API_KEY: '3zbRNQCuSrdOsHV2LsGKVGzEPuecszavgkAo7mYo',\n  NASA_API_KEY_STRING: 'api_key',\n  NASA_TARGET_DATE_STRING: 'date',\n  NASA_START_DATE_STRING: 'start_date',\n  NASA_END_DATE_STRING: 'end_date',\n  MEDIA_TYPE_IMAGE: 'image',\n  MEDIA_TYPE_VIDEO: 'video',\n  TODAY: 'today',\n  LOCAL_STORAGE_KEY: 'all-data',\n  ITEMS_ON_PAGE: 24,\n\n  MAIN_IMAGE_ATTRIBUTE: 'main-image',\n\n  CLASS_FOR_LOADED_ELEMENTS: 'loading',\n  ITEMS_ON_PAGE_WITH_FIRST_ITERATION: 25,\n\n  MODAL_WINDOW_IMAGE: 'image',\n  MODAL_WINDOW_VIDEO: 'video',\n}\n\nexport default appConstants\n","import C from '@/constants/appConstants'\n\nconst checkTodayDate = (date) => {\n    if (date === C.TODAY) return true\n    else return false\n}\n\nexport default checkTodayDate\n","const checkImageInCache = (src) => {\n    const image = new Image()\n    image.src = src\n\n    return image.complete\n}\n\nexport default checkImageInCache\n","import { createContext } from 'react'\n\nexport const MainImageDataContext = createContext();\n","import { useEffect, useContext, useRef } from 'react'\nimport C from '@/constants/appConstants'\nimport checkTodayDate from '@/helpers/checkTodayDate'\nimport checkImageInCache from '@/helpers/checkImageInCache'\nimport { MainImageDataContext } from '@/helpers/context'\nimport './ImageBlock.scss'\n\nconst ImageBlock = ({\n  modalWindowShowed,\n  setStateForModalWindow,\n  setTitleForModalWindow,\n  setMainDataForModalWindow,\n  setDateForModalWindow,\n  setExplanationForModalWindow,\n  setTypeForModalWindow,\n  mainImage,\n  todayImage,\n  itemsFromImageCatalog,\n  itemsCounterForPreloader,\n  updateItemsCounterForPreloader,\n}) => {\n  const data = useContext(MainImageDataContext)\n  const imageWrap = useRef()\n\n  useEffect(() => {\n    if (checkImageInCache(data.url)) {\n      imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n    } else {\n      imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\n    }\n    return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n  }, [data.url])\n\n  const changeStateForModalWindow = (attribute) => {\n    switch (attribute) {\n      case C.MAIN_IMAGE_ATTRIBUTE:\n        if (checkTodayDate(mainImage.date)) {\n          setTitleForModalWindow(todayImage.title)\n          setMainDataForModalWindow(todayImage.url)\n          setExplanationForModalWindow(todayImage.explanation)\n          setTypeForModalWindow(C.MODAL_WINDOW_IMAGE)\n          setDateForModalWindow(todayImage.date)\n        } else {\n          setTitleForModalWindow(mainImage.title)\n          setMainDataForModalWindow(mainImage.url)\n          setExplanationForModalWindow(mainImage.explanation)\n          setTypeForModalWindow(C.MODAL_WINDOW_IMAGE)\n          setDateForModalWindow(mainImage.date)\n        }\n        break\n\n      default:\n        const targetItem = itemsFromImageCatalog[attribute]\n        setTitleForModalWindow(targetItem.title)\n        setMainDataForModalWindow(targetItem.hdurl)\n        setExplanationForModalWindow(targetItem.explanation)\n        setTypeForModalWindow(C.MODAL_WINDOW_IMAGE)\n        setDateForModalWindow(targetItem.date)\n        break\n    }\n  }\n\n  const changeModalWindow = () => {\n    if (!modalWindowShowed) {\n      changeStateForModalWindow(data.itemCounter)\n      setStateForModalWindow(true)\n    }\n  }\n\n  const imageLoaded = () => {\n    imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n    updateItemsCounterForPreloader(++itemsCounterForPreloader)\n  }\n\n  return (\n    <div className={`${data.className}-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`} ref={imageWrap}>\n      <img\n        src={data.url}\n        className={data.className}\n        data-item-counter={data.itemCounter}\n        onClick={() => changeModalWindow()}\n        onLoad={() => imageLoaded()}\n      />\n    </div>\n  )\n}\n\nexport default ImageBlock\n","import { connect } from 'react-redux'\nimport {\n  setStateForModalWindow,\n  setTitleForModalWindow,\n  setMainDataForModalWindow,\n  setDateForModalWindow,\n  setExplanationForModalWindow,\n  setTypeForModalWindow,\n} from '@/store/slices/modalWindowSlice'\nimport { updateItemsCounterForPreloader } from '@/store/slices/preloaderSlice'\nimport ImageBlock from './ImageBlock'\n\nconst ImageBlockContainer = (props) => {\n  return <ImageBlock {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n  modalWindowShowed: state.modalWindow.modalWindowState,\n  mainImage: state.mainImage.imageData,\n  todayImage: state.mainImage.todayData,\n  itemsFromImageCatalog: state.imageCatalog.items,\n  itemsCounterForPreloader: state.preloader.itemsCounterForPreloader,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setStateForModalWindow(state) {\n    dispatch(setStateForModalWindow(state))\n  },\n\n  setTitleForModalWindow(title) {\n    dispatch(setTitleForModalWindow(title))\n  },\n\n  setMainDataForModalWindow(mainData) {\n    dispatch(setMainDataForModalWindow(mainData))\n  },\n\n  setDateForModalWindow(date) {\n    dispatch(setDateForModalWindow(date))\n  },\n\n  setExplanationForModalWindow(explanation) {\n    dispatch(setExplanationForModalWindow(explanation))\n  },\n  setTypeForModalWindow(type) {\n    dispatch(setTypeForModalWindow(type))\n  },\n  updateItemsCounterForPreloader(data) {\n    dispatch(updateItemsCounterForPreloader(data))\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageBlockContainer)\n","import React from 'react'\nimport './ErrorComponent.scss'\n\nconst ErrorComponent = () => {\n    return (\n        <div className='error-component'>\n            <p>No data</p>\n        </div>\n    )\n}\n\nexport default ErrorComponent\n","const thumbnailFromVideoConstants = {\n    YOUTUBE_BIG_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`),\n    YOUTUBE_MEDIUM_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/sddefault.jpg`),\n    YOUTUBE_SMALL_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/hqdefault.jpg`),\n    // if we want get thumbnail and youtube respons error\n    // we get default thumbnail with this sizes\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH: 120,\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT: 90,\n\n    VIMEO_GET_THUMBNAIL_ID: (vimeoVideoId) => (`https://vimeo.com/api/oembed.json?url=https://vimeo.com/${vimeoVideoId}`),\n    VIMEO_GET_THUMBNAIL: (imageId) => (`https://i.vimeocdn.com/video/${imageId}.jpg`)\n}\n\nexport default thumbnailFromVideoConstants\n","import { useState, useEffect, useContext, useRef } from 'react'\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\nimport { MainImageDataContext } from '@/helpers/context'\nimport checkImageInCache from '@/helpers/checkImageInCache'\nimport checkTodayDate from '@/helpers/checkTodayDate'\nimport C from '@/constants/appConstants'\nimport TC from '@/constants/thumbnailFromVideoConstants'\nimport './VideoBlock.scss'\n\nconst VideoBlock = ({\n  modalWindowShowed,\n  setStateForModalWindow,\n  setTitleForModalWindow,\n  setMainDataForModalWindow,\n  setDateForModalWindow,\n  setExplanationForModalWindow,\n  setTypeForModalWindow,\n  mainImage,\n  todayImage,\n  itemsFromImageCatalog,\n  itemsCounterForPreloader,\n  updateItemsCounterForPreloader,\n}) => {\n  const data = useContext(MainImageDataContext)\n  const imageWrap = useRef()\n\n  const regExpVimeo = /(http|https)?:\\/\\/(www\\.)?(vimeo.com\\/|player.vimeo.com\\/video\\/)([0-9]+)/g\n  const regExpYoutube =\n    /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/g\n\n  const [videoThumbnail, setVideoThumbnail] = useState()\n  const [stateErrorComponent, setStateErrorComponent] = useState(false)\n\n  useEffect(() => {\n    renderVideo()\n  }, [mainImage])\n\n  useEffect(() => {\n    if (videoThumbnail) {\n      if (checkImageInCache(videoThumbnail)) {\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n      } else {\n        imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\n      }\n    }\n    return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n  }, [videoThumbnail])\n\n  const renderVideo = () => {\n    if (data.url.match(regExpYoutube)) {\n      const youtubeVideoId = data.url.match(/youtube\\.com.*(\\?v=|\\/embed\\/)(.{11})/).pop()\n      getThumbnailFromYoutubeVideo(youtubeVideoId)\n    } else if (data.url.match(regExpVimeo)) {\n      const vimeoVideoId = data.url.match(/vimeo.*\\/(\\d+)/i).pop()\n      getThumbnailFromVimeoVideo(vimeoVideoId)\n    } else {\n      setStateErrorComponent(true)\n    }\n  }\n\n  const checkImagesWidth = (width, height) => {\n    if (\n      width !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH &&\n      height !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT\n    ) {\n      return true\n    } else {\n      return false\n    }\n  }\n\n  const getThumbnailFromYoutubeVideo = (videoId) => {\n    const drawImageActualSize = () => {\n      if (checkImagesWidth(bigThumbnail.naturalWidth, bigThumbnail.naturalHeight)) {\n        setVideoThumbnail(bigThumbnail.src)\n      } else {\n        setStateErrorComponent(true)\n      }\n    }\n\n    const bigThumbnail = new Image()\n\n    switch (data.itemCounter) {\n      case C.MAIN_IMAGE_ATTRIBUTE:\n        new Promise((resolve) => {\n          bigThumbnail.src = TC.YOUTUBE_BIG_THUMBNAIL(videoId)\n          bigThumbnail.onload = () => {\n            if (checkImagesWidth(bigThumbnail.naturalWidth, bigThumbnail.naturalHeight)) {\n              setVideoThumbnail(bigThumbnail.src)\n            } else {\n              resolve()\n            }\n          }\n        }).then(() => {\n          return new Promise((resolve) => {\n            bigThumbnail.src = TC.YOUTUBE_MEDIUM_THUMBNAIL(videoId)\n            bigThumbnail.onload = () => {\n              if (checkImagesWidth(bigThumbnail.naturalWidth, bigThumbnail.naturalHeight)) {\n                setVideoThumbnail(bigThumbnail.src)\n              } else {\n                resolve()\n              }\n            }\n          }).then(() => {\n            bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\n            bigThumbnail.onload = () => {\n              if (checkImagesWidth(bigThumbnail.naturalWidth, bigThumbnail.naturalHeight)) {\n                setVideoThumbnail(bigThumbnail.src)\n              } else {\n                setStateErrorComponent(true)\n              }\n            }\n          })\n        })\n        break\n\n      default:\n        bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\n        bigThumbnail.onload = drawImageActualSize\n        break\n    }\n  }\n\n  const getThumbnailFromVimeoVideo = async (vimeoVideoId) => {\n    await fetch(TC.VIMEO_GET_THUMBNAIL_ID(vimeoVideoId))\n      .then((res) => res.json())\n      .then((res) => res.thumbnail_url.match(/vimeo.*\\/(\\d+)/i).pop())\n      .then((res) => setVideoThumbnail(TC.VIMEO_GET_THUMBNAIL(res)))\n  }\n\n  const changeStateForModalWindow = (attribute) => {\n    switch (attribute) {\n      case C.MAIN_IMAGE_ATTRIBUTE:\n        if (checkTodayDate(mainImage.date)) {\n          setTitleForModalWindow(todayImage.title)\n          setMainDataForModalWindow(todayImage.url)\n          setExplanationForModalWindow(todayImage.explanation)\n          setTypeForModalWindow(C.MODAL_WINDOW_VIDEO)\n          setDateForModalWindow(todayImage.date)\n        } else {\n          setTitleForModalWindow(mainImage.title)\n          setMainDataForModalWindow(mainImage.url)\n          setExplanationForModalWindow(mainImage.explanation)\n          setTypeForModalWindow(C.MODAL_WINDOW_VIDEO)\n          setDateForModalWindow(mainImage.date)\n        }\n        break\n\n      default:\n        const targetItem = itemsFromImageCatalog[String(attribute)]\n        setTitleForModalWindow(targetItem.title)\n        setMainDataForModalWindow(targetItem.url)\n        setExplanationForModalWindow(targetItem.explanation)\n        setTypeForModalWindow(C.MODAL_WINDOW_VIDEO)\n        setDateForModalWindow(targetItem.date)\n        break\n    }\n  }\n\n  const changeModalWindow = () => {\n    if (!modalWindowShowed) {\n      changeStateForModalWindow(data.itemCounter)\n      setStateForModalWindow(true)\n    }\n  }\n\n  const imageLoaded = () => {\n    imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n    updateItemsCounterForPreloader(++itemsCounterForPreloader)\n  }\n\n  return (\n    <>\n      {stateErrorComponent ? (\n        <ErrorComponent />\n      ) : (\n        <div\n          className={`${data.className}_video-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\n          ref={imageWrap}\n        >\n          <img\n            className={`${data.className} ${data.className}_video`}\n            data-item-counter={data.itemCounter}\n            onClick={() => changeModalWindow()}\n            src={videoThumbnail}\n            onLoad={() => imageLoaded()}\n          />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default VideoBlock\n","import { connect } from 'react-redux'\nimport {\n  setStateForModalWindow,\n  setTitleForModalWindow,\n  setMainDataForModalWindow,\n  setDateForModalWindow,\n  setExplanationForModalWindow,\n  setTypeForModalWindow,\n} from '@/store/slices/modalWindowSlice'\nimport { updateItemsCounterForPreloader } from '@/store/slices/preloaderSlice'\nimport VideoBlock from './VideoBlock'\n\nconst VideoBlockContainer = (props) => {\n  return <VideoBlock {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n  modalWindowShowed: state.modalWindow.modalWindowState,\n  mainImage: state.mainImage.imageData,\n  todayImage: state.mainImage.todayData,\n  itemsFromImageCatalog: state.imageCatalog.items,\n  itemsCounterForPreloader: state.preloader.itemsCounterForPreloader,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setStateForModalWindow(state) {\n    dispatch(setStateForModalWindow(state))\n  },\n\n  setTitleForModalWindow(title) {\n    dispatch(setTitleForModalWindow(title))\n  },\n\n  setMainDataForModalWindow(mainData) {\n    dispatch(setMainDataForModalWindow(mainData))\n  },\n\n  setDateForModalWindow(date) {\n    dispatch(setDateForModalWindow(date))\n  },\n\n  setExplanationForModalWindow(explanation) {\n    dispatch(setExplanationForModalWindow(explanation))\n  },\n  setTypeForModalWindow(type) {\n    dispatch(setTypeForModalWindow(type))\n  },\n  updateItemsCounterForPreloader(data) {\n    dispatch(updateItemsCounterForPreloader(data))\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VideoBlockContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ImageBlockContainer from '../ImageBlock/ImageBlockContainer'\nimport VideoBlockContainer from './../VideoBlock/VideoBlockContainer'\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\nimport C from '@/constants/appConstants'\n\nconst RenderingContentDependingOnTheType = ({ mediaType }) => {\n    switch (mediaType) {\n        case C.MEDIA_TYPE_IMAGE:\n            return <ImageBlockContainer />\n\n        case C.MEDIA_TYPE_VIDEO:\n            return <VideoBlockContainer />\n\n        default:\n            return <ErrorComponent />\n    }\n}\n\nRenderingContentDependingOnTheType.propTypes = {\n    mediaType: PropTypes.string\n}\n\nexport default RenderingContentDependingOnTheType\n","import React from 'react'\nimport './ApplicationError.scss'\n\nconst ApplicationError = () => {\n    document.body.style.overflow = 'hidden'\n\n    return (\n        <section className='application-error'>\n            <div className='application-error__items-wrap'>\n                <h2 className='application-error__header'>Some troubles</h2>\n                <h2 className='application-error__header'>Please, try again later</h2>\n                <button\n                    className='application-error__reload-button'\n                    onClick={() => window.location.reload()}\n                >\n                    Reload page\n                </button>\n            </div>\n        </section>\n    )\n}\n\nexport default ApplicationError\n","export const writeToLocalStorage = (key, value) => {\n    localStorage.setItem(key, value);\n}\n\nexport const readFromLocalStorage = (key) => {\n    return localStorage.getItem(key);\n}\n","import C from '@/constants/appConstants'\n\nconst queryString = (date = '', startDate = '', endDate = '') => {\n    const keyString = `${C.NASA_API_KEY_STRING}=${C.NASA_API_KEY}`\n    const dateString = date ? `&${C.NASA_TARGET_DATE_STRING}=${date}` : ''\n    const startEndDate = startDate && endDate\n        ? `&${C.NASA_START_DATE_STRING}=${startDate}&${C.NASA_END_DATE_STRING}=${endDate}`\n        : ''\n\n    return (\n        `${C.NASA_QUERY}?${keyString}${dateString}${startEndDate}`\n    )\n}\n\nexport default queryString\n","import React, { useState, useEffect, useRef } from 'react'\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\nimport ApplicationError from './../ApplicationError/ApplicationError'\nimport { writeToLocalStorage, readFromLocalStorage } from '@/helpers/workWithLocalStorage'\nimport queryString from '@/helpers/queryString'\nimport C from '@/constants/appConstants'\nimport { MainImageDataContext } from '@/helpers/context'\nimport checkTodayDate from '@/helpers/checkTodayDate'\nimport './MainImage.scss'\n\nconst MainImage = ({\n    mainImage,\n    imageData,\n    changeImage,\n    todayData,\n    setTodayData\n}) => {\n    const dataFromLocalStorage = JSON.parse(readFromLocalStorage(C.LOCAL_STORAGE_KEY))\n\n    const input = useRef();\n    const [errorComponent, setStateErrorComponent] = useState(false)\n\n    useEffect(() => {\n        ajaxQuery()\n        input.current.addEventListener('change', setNewDate)\n\n        return () => input.current.removeEventListener('change', setNewDate)\n    }, [])\n\n    useEffect(() => {\n        if (!todayData.date) return\n\n        if (todayData.date && !imageData.date) {\n            if (readFromLocalStorage(C.LOCAL_STORAGE_KEY)) {\n                if (dataFromLocalStorage\n                    && Object.keys(dataFromLocalStorage).length\n                    && dataFromLocalStorage.imageData.date\n                ) {\n                    changeImage(dataFromLocalStorage.imageData)\n                } else {\n                    changeImage(todayData)\n                }\n            } else {\n                changeImage(todayData)\n            }\n        }\n\n        if (imageData.date === todayData.date) changeImage({ ...todayData, date: C.TODAY })\n\n        writeToLocalStorage(C.LOCAL_STORAGE_KEY, JSON.stringify({ ...mainImage }))\n    }, [mainImage])\n\n    const ajaxQuery = async (selectedDate = '') => {\n        try {\n            const nasaQuery = await fetch(queryString(selectedDate))\n            if (!nasaQuery.ok) throw new Error('Some internal error')\n\n            const nasaParse = await nasaQuery.json()\n\n            const date = nasaParse.date\n            const mediaType = nasaParse.media_type\n            const url = mediaType === C.MEDIA_TYPE_IMAGE ? nasaParse.hdurl : nasaParse.url\n            const explanation = nasaParse.explanation\n            const title = nasaParse.title\n            const targetObj = { date, url, explanation, title, mediaType }\n\n            if (selectedDate) {\n                changeImage(targetObj)\n            } else {\n                setTodayData(targetObj)\n            }\n        } catch (error) {\n            console.log('Error: ', error)\n\n            setStateErrorComponent(true)\n\n            const targetObj = {\n                date: selectedDate,\n                url: null,\n                explanation: null,\n                title: null,\n                mediaType: null\n            }\n\n            if (selectedDate) {\n                changeImage(targetObj)\n            } else {\n                setTodayData(targetObj)\n            }\n        }\n    }\n\n    const setNewDate = (e) => {\n        const value = e.target.value\n        ajaxQuery(value)\n    }\n\n    const contextObj = {\n        className: 'main-image__image',\n        url: checkTodayDate(imageData.date) ? todayData.url : imageData.url,\n        // itemCounter used for get data from state and set to ModalWindow\n        itemCounter: C.MAIN_IMAGE_ATTRIBUTE\n    }\n\n    return (\n        <>\n            {errorComponent && <ApplicationError />}\n\n            <section className='main-image'>\n                <MainImageDataContext.Provider value={contextObj}>\n                    <RenderingContentDependingOnTheType\n                        mediaType={checkTodayDate(imageData.date) ? todayData.mediaType : imageData.mediaType}\n                    />\n                </MainImageDataContext.Provider>\n\n                <h1 className='main-image__title'>NASA. APOD: Astronomy Picture of the Day</h1>\n\n                <input\n                    className='main-image__input'\n                    type=\"date\"\n                    max={todayData.date}\n                    value={checkTodayDate(imageData.date) ? todayData.date : (imageData.date || '')}\n                    ref={input}\n                    onChange={() => changeImage({ ...imageData, date: input.current.value })}\n                />\n            </section>\n        </>\n    )\n}\n\nexport default MainImage\n","import { connect } from 'react-redux'\nimport { setTodayData, setMainImage } from '@/store/slices/mainImageSlice'\nimport MainImage from './MainImage'\n\nconst MainImageContainer = (props) => {\n  return <MainImage {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n  mainImage: state.mainImage,\n  imageData: state.mainImage.imageData,\n  todayData: state.mainImage.todayData,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setTodayData(data) {\n    dispatch(setTodayData(data))\n  },\n  changeImage(data) {\n    dispatch(setMainImage(data))\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainImageContainer)\n","import './loaders.scss'\n\nexport const LoaderActive = () => {\n  return (\n    <div className=\"loader-active\">\n      <div className=\"loader-active__ellips\" />\n      <p>Loading...</p>\n    </div>\n  )\n}\n\nexport const LoaderEmpty = () => {\n  return (\n    <div className=\"loader-empty\">\n      <div className=\"loader-empty__ellips\" />\n      <p>Loading...</p>\n    </div>\n  )\n}\n","const convertDateObjectToString = (date = new Date()) => {\n    const monthIncrement = date.getMonth() + 1\n    const month = monthIncrement < 10 ? `0${monthIncrement}` : monthIncrement\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\n    \n    return `${date.getFullYear()}-${month}-${day}`\n}\n\nexport default convertDateObjectToString\n","import { useState, useEffect } from 'react'\nimport InfiniteScroll from '@alexcambose/react-infinite-scroll'\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType'\nimport { LoaderActive, LoaderEmpty } from './../loaders/loaders'\nimport ApplicationError from './../ApplicationError/ApplicationError'\nimport queryString from '@/helpers/queryString'\nimport convertDateObjectToString from '@/helpers/convertDateObjectToString'\nimport { MainImageDataContext } from '@/helpers/context'\nimport C from '@/constants/appConstants'\nimport './ImageCatalog.scss'\n\nconst ImageCatalog = ({\n  imagesArray,\n  loadImages,\n  imagesArrayForOneIteration,\n  loadImagesToOneIteration,\n  dateInterval,\n  changeDateInterval,\n  itemsCounterForOneIteration,\n  countItemsForOneIteration,\n  loader,\n  changeLoader,\n  todayDate,\n}) => {\n  let startDate, endDate\n\n  const [errorComponent, setStateErrorComponent] = useState(false)\n\n  useEffect(() => {\n    // if we have less them 24 items\n    if (itemsCounterForOneIteration < C.ITEMS_ON_PAGE && itemsCounterForOneIteration !== 0) {\n      startDate = new Date(dateInterval.startDateValue)\n      endDate = new Date(dateInterval.startDateValue)\n\n      endDate.setDate(endDate.getDate() - 1)\n      startDate.setDate(startDate.getDate() - (C.ITEMS_ON_PAGE - itemsCounterForOneIteration))\n\n      ajaxQuery(\n        convertDateObjectToString(startDate),\n        convertDateObjectToString(endDate),\n        itemsCounterForOneIteration\n      )\n\n      changeDateInterval(\n        `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`,\n        `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`\n      )\n    }\n  }, [itemsCounterForOneIteration])\n\n  useEffect(() => {\n    if (!imagesArray.length) return\n    changeLoader(false)\n  }, [imagesArray])\n\n  useEffect(() => {\n    // fix bug. sometimes load second iteration instead of first\n    loadImages([...imagesArray, ...imagesArrayForOneIteration])\n  }, [imagesArrayForOneIteration])\n\n  useEffect(() => {\n    if (!todayDate) return\n\n    // first load images\n    startDate = new Date()\n    startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\n    endDate = new Date(todayDate)\n    endDate.setDate(endDate.getDate() - 1)\n\n    ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\n    changeDateInterval(\n      `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`,\n      `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`\n    )\n  }, [todayDate])\n\n  const ajaxQuery = async (startDate, endDate, itemsCounter = 0) => {\n    try {\n      const nasaQuery = await fetch(queryString(null, startDate, endDate))\n      const nasaParse = await nasaQuery.json()\n\n      loadImagesToOneIteration([...nasaParse.reverse()])\n      countItemsForOneIteration(nasaParse.length + itemsCounter)\n    } catch (error) {\n      console.log(error)\n\n      setStateErrorComponent(true)\n    }\n  }\n\n  const checkScrollScreen = () => {\n    changeLoader(true)\n\n    if (dateInterval.startDateValue && dateInterval.endDateValue) {\n      // next load images\n      startDate = new Date(dateInterval.startDateValue)\n      endDate = new Date(dateInterval.startDateValue)\n      endDate.setDate(endDate.getDate() - 1)\n      startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\n\n      ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\n      changeDateInterval(\n        `${startDate.getFullYear()}-${startDate.getMonth() + 1}-${startDate.getDate()}`,\n        `${endDate.getFullYear()}-${endDate.getMonth() + 1}-${endDate.getDate()}`\n      )\n    }\n  }\n\n  const contextObj = (item, counter) => ({\n    className: 'image-catalog__image',\n    url: item.url,\n    // itemCounter used for get data from state and set to ModalWindow\n    itemCounter: counter,\n  })\n\n  return (\n    <>\n      {errorComponent && <ApplicationError />}\n\n      <section className=\"image-catalog\">\n        <InfiniteScroll hasMore={true} loadMore={checkScrollScreen}>\n          <ul className=\"image-catalog__wrap\">\n            {imagesArray.map((item, counter) => (\n              <li key={item.date}>\n                <MainImageDataContext.Provider value={contextObj(item, counter)}>\n                  <RenderingContentDependingOnTheType mediaType={item.media_type} />\n                </MainImageDataContext.Provider>\n              </li>\n            ))}\n          </ul>\n          {loader ? <LoaderActive /> : <LoaderEmpty />}\n        </InfiniteScroll>\n      </section>\n    </>\n  )\n}\n\nexport default ImageCatalog\n","import { connect } from 'react-redux'\nimport {\n  loadImagesToImageCatalog,\n  loadImagesForOneIterationToImageCatalog,\n  changeDateIntervalInImageCatalog,\n  countItemsForOneIteration,\n  loaderInImageCatalog,\n} from '@/store/slices/imageCatalogSlice'\nimport ImageCatalog from './ImageCatalog'\n\nconst ImageCatalogContainer = (props) => {\n  return <ImageCatalog {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n  imagesArray: state.imageCatalog.items,\n  imagesArrayForOneIteration: state.imageCatalog.itemsForOneIteration,\n  dateInterval: state.imageCatalog.date,\n  itemsCounterForOneIteration: state.imageCatalog.itemsCounterForOneIteration,\n  loader: state.imageCatalog.loader,\n  todayDate: state.mainImage.todayData.date,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  loadImages(items) {\n    dispatch(loadImagesToImageCatalog(items))\n  },\n  loadImagesToOneIteration(items) {\n    dispatch(loadImagesForOneIterationToImageCatalog(items))\n  },\n  changeDateInterval(startDateValue, endDateValue) {\n    dispatch(changeDateIntervalInImageCatalog({ startDateValue, endDateValue }))\n  },\n  countItemsForOneIteration(items) {\n    dispatch(countItemsForOneIteration(items))\n  },\n  changeLoader(loaderShow) {\n    dispatch(loaderInImageCatalog(loaderShow))\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ImageCatalogContainer)\n","const convertStringDateToObject = (date) => (\n    date.match(/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/).groups\n)\n\nexport default convertStringDateToObject\n","import C from '@/constants/appConstants'\n\nconst removeParentClass = (element) => {\n    element\n        .closest(`.${C.CLASS_FOR_LOADED_ELEMENTS}`)\n        .classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n}\n\nexport default removeParentClass\n","import { Modal } from 'react-bootstrap'\nimport C from '@/constants/appConstants'\nimport convertStringDateToObject from '@/helpers/convertStringDateToObject'\nimport removeParentClass from '@/helpers/removeParentClass'\nimport './ModalWindow.scss'\n\nconst ImgCreator = ({ imgLink }) => (\n  <a href={imgLink} target=\"_blank\" className={C.CLASS_FOR_LOADED_ELEMENTS}>\n    <img\n      className=\"modal-window__main-data\"\n      src={imgLink}\n      onLoad={(e) => removeParentClass(e.target)}\n    />\n  </a>\n)\n\nconst IframeCreator = ({ iframeLink }) => (\n  <div className={`modal-window__iframe-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}>\n    <iframe\n      className=\"modal-window__main-data modal-window__main-data_video\"\n      src={iframeLink}\n      onLoad={(e) => removeParentClass(e.target)}\n    />\n  </div>\n)\n\nconst ModalWindow = ({\n  modalWindowShowed,\n  setStateForModalWindow,\n  modalWindowTitle,\n  modalWindowMainData,\n  modalWindowDate,\n  modalWindowExplanation,\n  modalWindowType,\n}) => {\n  const dateObject = modalWindowDate\n    ? convertStringDateToObject(modalWindowDate)\n    : { day: '', month: '', year: '' }\n\n  return (\n    <Modal\n      dialogClassName=\"modal-window\"\n      show={modalWindowShowed}\n      onHide={() => setStateForModalWindow(false)}\n      animation={false}\n    >\n      <Modal.Header className=\"modal-window__header\" closeButton>\n        <Modal.Title>\n          <h2 className=\"modal-window__title\">{modalWindowTitle}</h2>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body className=\"modal-window__body\">\n        {modalWindowType === C.MODAL_WINDOW_VIDEO ? (\n          <IframeCreator iframeLink={modalWindowMainData} />\n        ) : (\n          <ImgCreator imgLink={modalWindowMainData} />\n        )}\n        <p>{modalWindowExplanation}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <p>{`${dateObject.day}.${dateObject.month}.${dateObject.year}`}</p>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default ModalWindow\n","import { connect } from 'react-redux'\nimport { setStateForModalWindow } from '@/store/slices/modalWindowSlice'\nimport ModalWindow from './ModalWindow'\n\nconst ModalWindowContainer = (props) => {\n  return <ModalWindow {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n  modalWindowShowed: state.modalWindow.modalWindowState,\n  modalWindowTitle: state.modalWindow.modalWindowTitle,\n  modalWindowMainData: state.modalWindow.modalWindowMainData,\n  modalWindowDate: state.modalWindow.modalWindowDate,\n  modalWindowExplanation: state.modalWindow.modalWindowExplanation,\n  modalWindowType: state.modalWindow.modalWindowType,\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n  setStateForModalWindow(state) {\n    dispatch(setStateForModalWindow(state))\n  },\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalWindowContainer)\n","import React from 'react'\nimport './Preloader.scss'\n\nconst Preloader = ({ className }) => {\n    return (\n        <section className={`preloader ${className}`}>\n            <div className='preloader__content'>\n                <div className='loader-circle'></div>\n                <div className='loader-line-mask'>\n                    <div className='loader-line'></div>\n                </div>\n                <p className='preloader__text'>NASA</p>\n            </div>\n        </section>\n    )\n}\n\nexport default Preloader\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport MainImageContainer from './components/MainImage/MainImageContainer'\nimport ImageCatalogContainer from './components/ImageCatalog/ImageCatalogContainer'\nimport ModalWindowContainer from './components/ModalWindow/ModalWindowContainer'\nimport Preloader from './components/Preloader/Preloader'\nimport C from '@/constants/appConstants'\nimport { IAppState } from './store/types/state'\n\nconst App = () => {\n  const itemsCounterForPreloader: number = useSelector(\n    (state: IAppState) => state.preloader.itemsCounterForPreloader\n  )\n\n  // if user reload page (like f5) he may not be at the top of the page\n  useEffect(() => {\n    // 10 - this random number (not more all items in first iteration, 25)\n    // it helps to delay the user's movement to the top of the page\n    // necessary for the user to move after the browser event fires\n    // (moving the user to the place where he reloaded the page)\n    itemsCounterForPreloader === 10 && window.scroll(0, 0)\n  }, [itemsCounterForPreloader])\n\n  itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\n    ? (document.body.style.overflow = 'hidden')\n    : document.body.removeAttribute('style')\n\n  return (\n    <>\n      <Preloader\n        className={itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION ? '' : 'hide'}\n      />\n      <MainImageContainer />\n      <ImageCatalogContainer />\n      <ModalWindowContainer />\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport App from './App'\nimport '@/assets/styles/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}