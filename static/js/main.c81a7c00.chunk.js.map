{"version":3,"sources":["reportWebVitals.ts","constants/actionsConstants.js","store/reducers/mainImageReducer.js","store/reducers/imageCatalogReducer.js","store/reducers/modalWindowReducer.js","store/reducers/preloaderReducer.js","store/reducers/index.js","store/store.js","store/actions/modalWindowActions.js","store/actions/preloaderActions.js","constants/appConstants.js","helpers/checkTodayDate.js","helpers/checkImageInCache.js","helpers/removeParentClass.js","helpers/context.js","components/ImageBlock/ImageBlock.js","components/ImageBlock/ImageBlockContainer.js","components/ErrorComponent/ErrorComponent.js","constants/thumbnailFromVideoConstants.js","components/VideoBlock/VideoBlock.js","components/VideoBlock/VideoBlockContainer.js","components/RenderingContentDependingOnTheType/RenderingContentDependingOnTheType.js","components/ApplicationError/ApplicationError.js","helpers/workWithLocalStorage.js","helpers/queryString.js","components/MainImage/MainImage.js","components/MainImage/MainImageContainer.js","store/actions/mainImageActions.js","components/loaders/loaders.js","helpers/convertDateObjectToString.js","components/ImageCatalog/ImageCatalog.js","components/ImageCatalog/ImageCatalogContainer.js","store/actions/imageCatalogActions.js","helpers/convertStringDateToObject.js","components/ModalWindow/ModalWindow.js","components/ModalWindow/ModalWindowContainer.js","components/Preloader/Preloader.js","components/App.js","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionsConstants","SET_TODAY_DATA","CHANGE_MAIN_IMAGE","LOAD_IMAGES_TO_IMAGE_CATALOG","LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG","CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG","ITEMS_COUNTER_FOR_ONE_ITERATION","LOADER_IN_IMAGE_CATALOG","SET_STATE_FOR_MODAL_WINDOW","SET_TITLE_FOR_MODAL_WINDOW","SET_MAIN_DATA_FOR_MODAL_WINDOW","SET_DATE_FOR_MODAL_WINDOW","SET_EXPLANATION_FOR_MODAL_WINDOW","UPDATE_ITEM_COUNTER_FOR_PRELOADER","mainImageReducer","state","action","type","AC","todayData","date","url","explanation","title","mediaType","imageData","imageCatalogReducer","items","itemsForOneIteration","startDateValue","endDateValue","itemsCounterForOneIteration","counter","loader","modalWindowReducer","modalWindowState","modalWindowTitle","modalWindowMainData","mainData","modalWindowDate","modalWindowExplanation","preloaderReducer","itemsCounterForPreloader","combineReducers","mainImage","imageCatalog","modalWindow","preloader","store","createStore","reducer","initialState","setStateForModalWindow","setTitleForModalWindow","setMainDataForModalWindow","setDateForModalWindow","setExplanationForModalWindow","updateItemsCounterForPreloader","appConstants","NASA_QUERY","NASA_API_KEY","NASA_API_KEY_STRING","NASA_TARGET_DATE_STRING","NASA_START_DATE_STRING","NASA_END_DATE_STRING","MEDIA_TYPE_IMAGE","MEDIA_TYPE_VIDEO","TODAY","LOCAL_STORAGE_KEY","ITEMS_ON_PAGE","MAIN_IMAGE_ATTRIBUTE","CLASS_FOR_LOADED_ELEMENTS","ITEMS_ON_PAGE_WITH_FIRST_ITERATION","checkTodayDate","C","checkImageInCache","src","image","Image","complete","removeParentClass","element","closest","classList","remove","MainImageDataContext","createContext","ImageBlock","modalWindowShowed","todayImage","itemsFromImageCatalog","data","useContext","imageWrap","useRef","useEffect","current","add","imgCreator","imgLink","href","target","className","onLoad","e","changeModalWindow","attribute","targetItem","hdurl","changeStateForModalWindow","itemCounter","ref","data-item-counter","onClick","connect","dispatch","props","ErrorComponent","thumbnailFromVideoConstants","YOUTUBE_BIG_THUMBNAIL","videoId","YOUTUBE_MEDIUM_THUMBNAIL","YOUTUBE_SMALL_THUMBNAIL","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT","VIMEO_GET_THUMBNAIL_ID","vimeoVideoId","VIMEO_GET_THUMBNAIL","imageId","VideoBlock","regExpVimeo","regExpYoutube","useState","videoThumbnail","setVideoThumbnail","stateErrorComponent","setStateErrorComponent","renderVideo","iframeCreator","iframeLink","match","youtubeVideoId","pop","getThumbnailFromYoutubeVideo","getThumbnailFromVimeoVideo","checkImagesWidth","width","height","TC","bigThumbnail","Promise","resolve","onload","naturalWidth","naturalHeight","a","fetch","res","json","thumbnail_url","String","RenderingContentDependingOnTheType","ApplicationError","document","body","style","overflow","window","location","reload","readFromLocalStorage","key","localStorage","getItem","queryString","startDate","endDate","keyString","dateString","startEndDate","MainImage","changeImage","setTodayData","dataFromLocalStorage","JSON","parse","input","errorComponent","ajaxQuery","addEventListener","setNewDate","removeEventListener","value","Object","keys","length","stringify","setItem","selectedDate","nasaQuery","ok","Error","nasaParse","media_type","targetObj","console","log","contextObj","Provider","max","onChange","setMainImage","LoaderActive","LoaderEmpty","convertDateObjectToString","Date","monthIncrement","getMonth","month","day","getDate","getFullYear","ImageCatalog","imagesArray","loadImages","imagesArrayForOneIteration","loadImagesToOneIteration","dataInterval","changeDataInterval","countItemsForOneIteration","changeLoader","todayDate","setDate","itemsCounter","reverse","item","hasMore","loadMore","map","loadImagesToImageCatalog","loadImagesForOneIterationToImageCatalog","loaderShow","convertStringDateToObject","groups","ModalWindow","dateObject","year","Modal","dialogClassName","show","onHide","animation","Header","closeButton","Title","Body","Footer","Preloader","scroll","removeAttribute","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c81a7c00.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const actionsConstants = {\r\n    SET_TODAY_DATA: 'SET_TODAY_DATA',\r\n    CHANGE_MAIN_IMAGE: 'CHANGE_MAIN_IMAGE',\r\n\r\n    LOAD_IMAGES_TO_IMAGE_CATALOG: 'LOAD_IMAGE_TO_IMAGE_CATALOG',\r\n    LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG: 'LOAD_IMAGE_FOR_ONE_ITERATION_TO_IMAGE_CATALOG',\r\n    CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG: 'CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG',\r\n    ITEMS_COUNTER_FOR_ONE_ITERATION: 'ITEMS_COUNTER_FOR_ONE_ITERATION',\r\n    LOADER_IN_IMAGE_CATALOG: 'LOADER_IN_IMAGE_CATALOG',\r\n\r\n    SET_STATE_FOR_MODAL_WINDOW: 'SET_STATE_FOR_MODAL_WINDOW',\r\n    SET_TITLE_FOR_MODAL_WINDOW: 'SET_TITLE_FOR_MODAL_WINDOW',\r\n    SET_MAIN_DATA_FOR_MODAL_WINDOW: 'SET_MAIN_DATA_FOR_MODAL_WINDOW',\r\n    SET_DATE_FOR_MODAL_WINDOW: 'SET_DATE_FOR_MODAL_WINDOW',\r\n    SET_EXPLANATION_FOR_MODAL_WINDOW: 'SET_EXPLANATION_FOR_MODAL_WINDOW',\r\n\r\n    UPDATE_ITEM_COUNTER_FOR_PRELOADER: 'UPDATE_ITEM_COUNTER_FOR_PRELOADER'\r\n}\r\n\r\nexport default actionsConstants\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nconst mainImageReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case AC.SET_TODAY_DATA:\r\n            return {\r\n                ...state,\r\n                todayData: {\r\n                    date: action.date,\r\n                    url: action.url,\r\n                    explanation: action.explanation,\r\n                    title: action.title,\r\n                    mediaType: action.mediaType\r\n                }\r\n            }\r\n\r\n        case AC.CHANGE_MAIN_IMAGE:\r\n            return {\r\n                ...state,\r\n                imageData: {\r\n                    date: action.date,\r\n                    url: action.url,\r\n                    explanation: action.explanation,\r\n                    title: action.title,\r\n                    mediaType: action.mediaType\r\n                }\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default mainImageReducer\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nconst imageCatalogReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case AC.LOAD_IMAGES_TO_IMAGE_CATALOG:\r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            }\r\n\r\n        case AC.LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG:\r\n            return {\r\n                ...state,\r\n                itemsForOneIteration: action.items\r\n            }\r\n\r\n        case AC.CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG:\r\n            return {\r\n                ...state,\r\n                date: {\r\n                    startDateValue: action.startDateValue,\r\n                    endDateValue: action.endDateValue\r\n                }\r\n            }\r\n\r\n        case AC.ITEMS_COUNTER_FOR_ONE_ITERATION:\r\n            return {\r\n                ...state,\r\n                itemsCounterForOneIteration: action.counter\r\n            }\r\n\r\n        case AC.LOADER_IN_IMAGE_CATALOG:\r\n            return {\r\n                ...state,\r\n                loader: action.loader\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default imageCatalogReducer\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nconst modalWindowReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case AC.SET_STATE_FOR_MODAL_WINDOW:\r\n            return {\r\n                ...state,\r\n                modalWindowState: action.state\r\n            }\r\n\r\n        case AC.SET_TITLE_FOR_MODAL_WINDOW:\r\n            return {\r\n                ...state,\r\n                modalWindowTitle: action.title\r\n            }\r\n\r\n        case AC.SET_MAIN_DATA_FOR_MODAL_WINDOW:\r\n            return {\r\n                ...state,\r\n                modalWindowMainData: action.mainData\r\n            }\r\n\r\n        case AC.SET_DATE_FOR_MODAL_WINDOW:\r\n            return {\r\n                ...state,\r\n                modalWindowDate: action.date\r\n            }\r\n\r\n        case AC.SET_EXPLANATION_FOR_MODAL_WINDOW:\r\n            return {\r\n                ...state,\r\n                modalWindowExplanation: action.explanation\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default modalWindowReducer\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nconst preloaderReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case AC.UPDATE_ITEM_COUNTER_FOR_PRELOADER:\r\n            return {\r\n                ...state,\r\n                itemsCounterForPreloader: action.counter\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default preloaderReducer\r\n","import { combineReducers } from 'redux'\r\nimport mainImage from './mainImageReducer'\r\nimport imageCatalog from './imageCatalogReducer'\r\nimport modalWindow from './modalWindowReducer'\r\nimport preloader from './preloaderReducer'\r\n\r\nexport default combineReducers({\r\n    mainImage,\r\n    imageCatalog,\r\n    modalWindow,\r\n    preloader\r\n})\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducers/index'\r\nimport initialState from './initialState.json'\r\n\r\nconst store = createStore(reducer, initialState)\r\n\r\nexport default store\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nexport const setStateForModalWindow = (state) => ({\r\n    type: AC.SET_STATE_FOR_MODAL_WINDOW,\r\n    state\r\n})\r\n\r\nexport const setTitleForModalWindow = (title) => ({\r\n    type: AC.SET_TITLE_FOR_MODAL_WINDOW,\r\n    title\r\n})\r\n\r\nexport const setMainDataForModalWindow = (mainData) => ({\r\n    type: AC.SET_MAIN_DATA_FOR_MODAL_WINDOW,\r\n    mainData\r\n})\r\n\r\nexport const setDateForModalWindow = (date) => ({\r\n    type: AC.SET_DATE_FOR_MODAL_WINDOW,\r\n    date\r\n})\r\n\r\nexport const setExplanationForModalWindow = (explanation) => ({\r\n    type: AC.SET_EXPLANATION_FOR_MODAL_WINDOW,\r\n    explanation\r\n})\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nexport const updateItemsCounterForPreloader = (counter) => ({\r\n    type: AC.UPDATE_ITEM_COUNTER_FOR_PRELOADER,\r\n    counter\r\n})\r\n","const appConstants = {\r\n    NASA_QUERY: 'https://api.nasa.gov/planetary/apod',\r\n    NASA_API_KEY: '3zbRNQCuSrdOsHV2LsGKVGzEPuecszavgkAo7mYo',\r\n    NASA_API_KEY_STRING: 'api_key',\r\n    NASA_TARGET_DATE_STRING: 'date',\r\n    NASA_START_DATE_STRING: 'start_date',\r\n    NASA_END_DATE_STRING: 'end_date',\r\n    MEDIA_TYPE_IMAGE: 'image',\r\n    MEDIA_TYPE_VIDEO: 'video',\r\n    TODAY: 'today',\r\n    LOCAL_STORAGE_KEY: 'all-data',\r\n    ITEMS_ON_PAGE: 24,\r\n\r\n    MAIN_IMAGE_ATTRIBUTE: 'main-image',\r\n\r\n    CLASS_FOR_LOADED_ELEMENTS: 'loading',\r\n    ITEMS_ON_PAGE_WITH_FIRST_ITERATION: 25\r\n}\r\n\r\nexport default appConstants\r\n","import C from '@/constants/appConstants'\r\n\r\nconst checkTodayDate = (date) => {\r\n    if (date === C.TODAY) return true\r\n    else return false\r\n}\r\n\r\nexport default checkTodayDate\r\n","const checkImageInCache = (src) => {\r\n    const image = new Image()\r\n    image.src = src\r\n\r\n    return image.complete\r\n}\r\n\r\nexport default checkImageInCache\r\n","import C from '@/constants/appConstants'\r\n\r\nconst removeParentClass = (element) => {\r\n    element\r\n        .closest(`.${C.CLASS_FOR_LOADED_ELEMENTS}`)\r\n        .classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n}\r\n\r\nexport default removeParentClass\r\n","import { createContext } from 'react'\r\n\r\nexport const MainImageDataContext = createContext();\r\n","import React, { useEffect, useContext, useRef } from 'react'\r\nimport C from '@/constants/appConstants'\r\nimport checkTodayDate from '@/helpers/checkTodayDate'\r\nimport checkImageInCache from '@/helpers/checkImageInCache'\r\nimport removeParentClass from '@/helpers/removeParentClass'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport './ImageBlock.scss'\r\n\r\nconst ImageBlock = ({\r\n    modalWindowShowed,\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow,\r\n    mainImage,\r\n    todayImage,\r\n    itemsFromImageCatalog,\r\n    itemsCounterForPreloader,\r\n    updateItemsCounterForPreloader\r\n}) => {\r\n    const data = useContext(MainImageDataContext)\r\n    const imageWrap = useRef()\r\n\r\n    useEffect(() => {\r\n        if (checkImageInCache(data.url)) {\r\n            imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        } else {\r\n            imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        }\r\n        return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n    }, [data.url])\r\n\r\n    const imgCreator = (imgLink) => (\r\n        <a href={imgLink} target='_blank' className={C.CLASS_FOR_LOADED_ELEMENTS}>\r\n            <img\r\n                className='modal-window__main-data'\r\n                src={imgLink}\r\n                onLoad={(e) => removeParentClass(e.target)}\r\n            />\r\n        </a>\r\n    )\r\n\r\n    const changeStateForModalWindow = (attribute) => {\r\n        switch (attribute) {\r\n            case C.MAIN_IMAGE_ATTRIBUTE:\r\n                if (checkTodayDate(mainImage.date)) {\r\n                    setTitleForModalWindow(todayImage.title)\r\n                    setMainDataForModalWindow(imgCreator(todayImage.url))\r\n                    setExplanationForModalWindow(todayImage.explanation)\r\n                    setDateForModalWindow(todayImage.date)\r\n                } else {\r\n                    setTitleForModalWindow(mainImage.title)\r\n                    setMainDataForModalWindow(imgCreator(mainImage.url))\r\n                    setExplanationForModalWindow(mainImage.explanation)\r\n                    setDateForModalWindow(mainImage.date)\r\n                }\r\n                break\r\n\r\n            default:\r\n                const targetItem = itemsFromImageCatalog[attribute]\r\n                setTitleForModalWindow(targetItem.title)\r\n                setMainDataForModalWindow(imgCreator(targetItem.hdurl))\r\n                setExplanationForModalWindow(targetItem.explanation)\r\n                setDateForModalWindow(targetItem.date)\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeModalWindow = () => {\r\n        if (!modalWindowShowed) {\r\n            changeStateForModalWindow(data.itemCounter)\r\n            setStateForModalWindow(true)\r\n        }\r\n    }\r\n\r\n    const imageLoaded = () => {\r\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        updateItemsCounterForPreloader(++itemsCounterForPreloader)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`${data.className}-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\r\n            ref={imageWrap}\r\n        >\r\n            <img\r\n                src={data.url}\r\n                className={data.className}\r\n                data-item-counter={data.itemCounter}\r\n                onClick={() => changeModalWindow()}\r\n                onLoad={() => imageLoaded()}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageBlock\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow\r\n} from '@/store/actions/modalWindowActions'\r\nimport { updateItemsCounterForPreloader } from '@/store/actions/preloaderActions'\r\nimport ImageBlock from './ImageBlock'\r\n\r\nconst ImageBlockContainer = (props) => {\r\n    return <ImageBlock {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    modalWindowShowed: state.modalWindow.modalWindowState,\r\n    mainImage: state.mainImage.imageData,\r\n    todayImage: state.mainImage.todayData,\r\n    itemsFromImageCatalog: state.imageCatalog.items,\r\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStateForModalWindow(state) {\r\n        dispatch(setStateForModalWindow(state))\r\n    },\r\n\r\n    setTitleForModalWindow(title) {\r\n        dispatch(setTitleForModalWindow(title))\r\n    },\r\n\r\n    setMainDataForModalWindow(mainData) {\r\n        dispatch(setMainDataForModalWindow(mainData))\r\n    },\r\n\r\n    setDateForModalWindow(date) {\r\n        dispatch(setDateForModalWindow(date))\r\n    },\r\n\r\n    setExplanationForModalWindow(explanation) {\r\n        dispatch(setExplanationForModalWindow(explanation))\r\n    },\r\n    updateItemsCounterForPreloader(data) {\r\n        dispatch(updateItemsCounterForPreloader(data))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageBlockContainer)\r\n","import React from 'react'\r\nimport './ErrorComponent.scss'\r\n\r\nconst ErrorComponent = () => {\r\n    return (\r\n        <div className='error-component'>\r\n            <p>No data</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorComponent\r\n","const thumbnailFromVideoConstants = {\r\n    YOUTUBE_BIG_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`),\r\n    YOUTUBE_MEDIUM_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/sddefault.jpg`),\r\n    YOUTUBE_SMALL_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/hqdefault.jpg`),\r\n    // if we want get thumbnail and youtube respons error\r\n    // we get default thumbnail with this sizes\r\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH: 120,\r\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT: 90,\r\n\r\n    VIMEO_GET_THUMBNAIL_ID: (vimeoVideoId) => (`https://vimeo.com/api/oembed.json?url=https://vimeo.com/${vimeoVideoId}`),\r\n    VIMEO_GET_THUMBNAIL: (imageId) => (`https://i.vimeocdn.com/video/${imageId}.jpg`)\r\n}\r\n\r\nexport default thumbnailFromVideoConstants\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport checkImageInCache from '@/helpers/checkImageInCache'\r\nimport checkTodayDate from '@/helpers/checkTodayDate'\r\nimport removeParentClass from '@/helpers/removeParentClass'\r\nimport C from '@/constants/appConstants'\r\nimport TC from '@/constants/thumbnailFromVideoConstants'\r\nimport './VideoBlock.scss'\r\n\r\nconst VideoBlock = ({\r\n    modalWindowShowed,\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow,\r\n    mainImage,\r\n    todayImage,\r\n    itemsFromImageCatalog,\r\n    itemsCounterForPreloader,\r\n    updateItemsCounterForPreloader\r\n}) => {\r\n    const data = useContext(MainImageDataContext)\r\n    const imageWrap = useRef()\r\n\r\n    const regExpVimeo = /(http|https)?:\\/\\/(www\\.)?(vimeo.com\\/|player.vimeo.com\\/video\\/)([0-9]+)/g\r\n    const regExpYoutube = /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/g\r\n\r\n    const [videoThumbnail, setVideoThumbnail] = useState()\r\n    const [stateErrorComponent, setStateErrorComponent] = useState(false)\r\n\r\n    useEffect(() => {\r\n        renderVideo()\r\n    }, [mainImage])\r\n\r\n    useEffect(() => {\r\n        if (videoThumbnail) {\r\n            if (checkImageInCache(videoThumbnail)) {\r\n                imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n            } else {\r\n                imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\r\n            }\r\n        }\r\n        return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n    }, [videoThumbnail])\r\n\r\n    const iframeCreator = (iframeLink) => (\r\n        <div className={`modal-window__iframe-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}>\r\n            <iframe\r\n                className='modal-window__main-data modal-window__main-data_video'\r\n                src={iframeLink}\r\n                onLoad={(e) => removeParentClass(e.target)}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    const renderVideo = () => {\r\n        if (data.url.match(regExpYoutube)) {\r\n            const youtubeVideoId = data.url.match(/youtube\\.com.*(\\?v=|\\/embed\\/)(.{11})/).pop()\r\n            getThumbnailFromYoutubeVideo(youtubeVideoId)\r\n        } else if (data.url.match(regExpVimeo)) {\r\n            const vimeoVideoId = data.url.match(/vimeo.*\\/(\\d+)/i).pop()\r\n            getThumbnailFromVimeoVideo(vimeoVideoId)\r\n        } else {\r\n            setStateErrorComponent(true)\r\n        }\r\n    }\r\n\r\n    const checkImagesWidth = (width, height) => {\r\n        if (\r\n            width !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH\r\n            && height !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT\r\n        ) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const getThumbnailFromYoutubeVideo = (videoId) => {\r\n        const drawImageActualSize = () => {\r\n            if (checkImagesWidth(\r\n                bigThumbnail.naturalWidth,\r\n                bigThumbnail.naturalHeight\r\n            )) {\r\n                setVideoThumbnail(bigThumbnail.src)\r\n            } else {\r\n                setStateErrorComponent(true)\r\n            }\r\n        }\r\n\r\n        const bigThumbnail = new Image()\r\n\r\n        switch (data.itemCounter) {\r\n            case C.MAIN_IMAGE_ATTRIBUTE:\r\n                new Promise((resolve) => {\r\n                    bigThumbnail.src = TC.YOUTUBE_BIG_THUMBNAIL(videoId)\r\n                    bigThumbnail.onload = () => {\r\n                        if (checkImagesWidth(\r\n                            bigThumbnail.naturalWidth,\r\n                            bigThumbnail.naturalHeight\r\n                        )) {\r\n                            setVideoThumbnail(bigThumbnail.src)\r\n                        } else {\r\n                            resolve()\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    return new Promise((resolve) => {\r\n                        bigThumbnail.src = TC.YOUTUBE_MEDIUM_THUMBNAIL(videoId)\r\n                        bigThumbnail.onload = () => {\r\n                            if (checkImagesWidth(\r\n                                bigThumbnail.naturalWidth,\r\n                                bigThumbnail.naturalHeight\r\n                            )) {\r\n                                setVideoThumbnail(bigThumbnail.src)\r\n                            } else {\r\n                                resolve()\r\n                            }\r\n                        }\r\n                    }).then(() => {\r\n                        bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\r\n                        bigThumbnail.onload = () => {\r\n                            if (checkImagesWidth(\r\n                                bigThumbnail.naturalWidth,\r\n                                bigThumbnail.naturalHeight\r\n                            )) {\r\n                                setVideoThumbnail(bigThumbnail.src)\r\n                            } else {\r\n                                setStateErrorComponent(true)\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n                break\r\n\r\n            default:\r\n                bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\r\n                bigThumbnail.onload = drawImageActualSize\r\n                break\r\n        }\r\n    }\r\n\r\n    const getThumbnailFromVimeoVideo = async (vimeoVideoId) => {\r\n        await fetch(TC.VIMEO_GET_THUMBNAIL_ID(vimeoVideoId))\r\n            .then(res => res.json())\r\n            .then(res => res.thumbnail_url.match(/vimeo.*\\/(\\d+)/i).pop())\r\n            .then(res => setVideoThumbnail(TC.VIMEO_GET_THUMBNAIL(res)))\r\n    }\r\n\r\n    const changeStateForModalWindow = (attribute) => {\r\n        switch (attribute) {\r\n            case C.MAIN_IMAGE_ATTRIBUTE:\r\n                if (checkTodayDate(mainImage.date)) {\r\n                    setTitleForModalWindow(todayImage.title)\r\n                    setMainDataForModalWindow(iframeCreator(todayImage.url))\r\n                    setExplanationForModalWindow(todayImage.explanation)\r\n                    setDateForModalWindow(todayImage.date)\r\n                } else {\r\n                    setTitleForModalWindow(mainImage.title)\r\n                    setMainDataForModalWindow(iframeCreator(mainImage.url))\r\n                    setExplanationForModalWindow(mainImage.explanation)\r\n                    setDateForModalWindow(mainImage.date)\r\n                }\r\n                break\r\n\r\n            default:\r\n                const targetItem = itemsFromImageCatalog[String(attribute)]\r\n                setTitleForModalWindow(targetItem.title)\r\n                setMainDataForModalWindow(iframeCreator(targetItem.url))\r\n                setExplanationForModalWindow(targetItem.explanation)\r\n                setDateForModalWindow(targetItem.date)\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeModalWindow = () => {\r\n        if (!modalWindowShowed) {\r\n            changeStateForModalWindow(data.itemCounter)\r\n            setStateForModalWindow(true)\r\n        }\r\n    }\r\n\r\n    const imageLoaded = () => {\r\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        updateItemsCounterForPreloader(++itemsCounterForPreloader)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                stateErrorComponent\r\n                    ? <ErrorComponent />\r\n                    : <div\r\n                        className={`${data.className}_video-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\r\n                        ref={imageWrap}\r\n                    >\r\n                        <img\r\n                            className={`${data.className} ${data.className}_video`}\r\n                            data-item-counter={data.itemCounter}\r\n                            onClick={() => changeModalWindow()}\r\n                            src={videoThumbnail}\r\n                            onLoad={() => imageLoaded()}\r\n                        />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoBlock\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow\r\n} from '@/store/actions/modalWindowActions'\r\nimport { updateItemsCounterForPreloader } from '@/store/actions/preloaderActions'\r\nimport VideoBlock from './VideoBlock'\r\n\r\nconst VideoBlockContainer = (props) => {\r\n    return <VideoBlock {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    modalWindowShowed: state.modalWindow.modalWindowState,\r\n    mainImage: state.mainImage.imageData,\r\n    todayImage: state.mainImage.todayData,\r\n    itemsFromImageCatalog: state.imageCatalog.items,\r\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStateForModalWindow(state) {\r\n        dispatch(setStateForModalWindow(state))\r\n    },\r\n\r\n    setTitleForModalWindow(title) {\r\n        dispatch(setTitleForModalWindow(title))\r\n    },\r\n\r\n    setMainDataForModalWindow(mainData) {\r\n        dispatch(setMainDataForModalWindow(mainData))\r\n    },\r\n\r\n    setDateForModalWindow(date) {\r\n        dispatch(setDateForModalWindow(date))\r\n    },\r\n\r\n    setExplanationForModalWindow(explanation) {\r\n        dispatch(setExplanationForModalWindow(explanation))\r\n    },\r\n    updateItemsCounterForPreloader(data) {\r\n        dispatch(updateItemsCounterForPreloader(data))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(VideoBlockContainer)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ImageBlockContainer from '../ImageBlock/ImageBlockContainer'\r\nimport VideoBlockContainer from './../VideoBlock/VideoBlockContainer'\r\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\r\nimport C from '@/constants/appConstants'\r\n\r\nconst RenderingContentDependingOnTheType = ({ mediaType }) => {\r\n    switch (mediaType) {\r\n        case C.MEDIA_TYPE_IMAGE:\r\n            return <ImageBlockContainer />\r\n\r\n        case C.MEDIA_TYPE_VIDEO:\r\n            return <VideoBlockContainer />\r\n\r\n        default:\r\n            return <ErrorComponent />\r\n    }\r\n}\r\n\r\nRenderingContentDependingOnTheType.propTypes = {\r\n    mediaType: PropTypes.string\r\n}\r\n\r\nexport default RenderingContentDependingOnTheType\r\n","import React from 'react'\r\nimport './ApplicationError.scss'\r\n\r\nconst ApplicationError = () => {\r\n    document.body.style.overflow = 'hidden'\r\n\r\n    return (\r\n        <section className='application-error'>\r\n            <div className='application-error__items-wrap'>\r\n                <h2 className='application-error__header'>Some troubles</h2>\r\n                <h2 className='application-error__header'>Please, try again later</h2>\r\n                <button\r\n                    className='application-error__reload-button'\r\n                    onClick={() => window.location.reload()}\r\n                >\r\n                    Reload page\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ApplicationError\r\n","export const writeToLocalStorage = (key, value) => {\r\n    localStorage.setItem(key, value);\r\n}\r\n\r\nexport const readFromLocalStorage = (key) => {\r\n    return localStorage.getItem(key);\r\n}\r\n","import C from '@/constants/appConstants'\r\n\r\nconst queryString = (date = '', startDate = '', endDate = '') => {\r\n    const keyString = `${C.NASA_API_KEY_STRING}=${C.NASA_API_KEY}`\r\n    const dateString = date ? `&${C.NASA_TARGET_DATE_STRING}=${date}` : ''\r\n    const startEndDate = startDate && endDate\r\n        ? `&${C.NASA_START_DATE_STRING}=${startDate}&${C.NASA_END_DATE_STRING}=${endDate}`\r\n        : ''\r\n\r\n    return (\r\n        `${C.NASA_QUERY}?${keyString}${dateString}${startEndDate}`\r\n    )\r\n}\r\n\r\nexport default queryString\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\r\nimport ApplicationError from './../ApplicationError/ApplicationError'\r\nimport { writeToLocalStorage, readFromLocalStorage } from '@/helpers/workWithLocalStorage'\r\nimport queryString from '@/helpers/queryString'\r\nimport C from '@/constants/appConstants'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport checkTodayDate from '@/helpers/checkTodayDate'\r\nimport './MainImage.scss'\r\n\r\nconst MainImage = ({\r\n    mainImage,\r\n    imageData,\r\n    changeImage,\r\n    todayData,\r\n    setTodayData\r\n}) => {\r\n    const dataFromLocalStorage = JSON.parse(readFromLocalStorage(C.LOCAL_STORAGE_KEY))\r\n\r\n    const input = useRef();\r\n    const [errorComponent, setStateErrorComponent] = useState(false)\r\n\r\n    useEffect(() => {\r\n        ajaxQuery()\r\n        input.current.addEventListener('change', setNewDate)\r\n\r\n        return () => input.current.removeEventListener('change', setNewDate)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!todayData.date) return\r\n\r\n        if (todayData.date && !imageData.date) {\r\n            if (readFromLocalStorage(C.LOCAL_STORAGE_KEY)) {\r\n                if (dataFromLocalStorage\r\n                    && Object.keys(dataFromLocalStorage).length\r\n                    && dataFromLocalStorage.imageData.date\r\n                ) {\r\n                    changeImage(dataFromLocalStorage.imageData)\r\n                } else {\r\n                    changeImage(todayData)\r\n                }\r\n            } else {\r\n                changeImage(todayData)\r\n            }\r\n        }\r\n\r\n        if (imageData.date === todayData.date) changeImage({ ...todayData, date: C.TODAY })\r\n\r\n        writeToLocalStorage(C.LOCAL_STORAGE_KEY, JSON.stringify({ ...mainImage }))\r\n    }, [mainImage])\r\n\r\n    const ajaxQuery = async (selectedDate = '') => {\r\n        try {\r\n            const nasaQuery = await fetch(queryString(selectedDate))\r\n            if (!nasaQuery.ok) throw new Error('Some internal error')\r\n\r\n            const nasaParse = await nasaQuery.json()\r\n\r\n            const date = nasaParse.date\r\n            const mediaType = nasaParse.media_type\r\n            const url = mediaType === C.MEDIA_TYPE_IMAGE ? nasaParse.hdurl : nasaParse.url\r\n            const explanation = nasaParse.explanation\r\n            const title = nasaParse.title\r\n            const targetObj = { date, url, explanation, title, mediaType }\r\n\r\n            if (selectedDate) {\r\n                changeImage(targetObj)\r\n            } else {\r\n                setTodayData(targetObj)\r\n            }\r\n        } catch (error) {\r\n            console.log('Error: ', error)\r\n\r\n            setStateErrorComponent(true)\r\n\r\n            const targetObj = {\r\n                date: selectedDate,\r\n                url: null,\r\n                explanation: null,\r\n                title: null,\r\n                mediaType: null\r\n            }\r\n\r\n            if (selectedDate) {\r\n                changeImage(targetObj)\r\n            } else {\r\n                setTodayData(targetObj)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setNewDate = (e) => {\r\n        const value = e.target.value\r\n        ajaxQuery(value)\r\n    }\r\n\r\n    const contextObj = {\r\n        className: 'main-image__image',\r\n        url: checkTodayDate(imageData.date) ? todayData.url : imageData.url,\r\n        // itemCounter used for get data from state and set to ModalWindow\r\n        itemCounter: C.MAIN_IMAGE_ATTRIBUTE\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {errorComponent && <ApplicationError />}\r\n\r\n            <section className='main-image'>\r\n                <MainImageDataContext.Provider value={contextObj}>\r\n                    <RenderingContentDependingOnTheType\r\n                        mediaType={checkTodayDate(imageData.date) ? todayData.mediaType : imageData.mediaType}\r\n                    />\r\n                </MainImageDataContext.Provider>\r\n\r\n                <h1 className='main-image__title'>NASA. APOD: Astronomy Picture of the Day</h1>\r\n\r\n                <input\r\n                    className='main-image__input'\r\n                    type=\"date\"\r\n                    max={todayData.date}\r\n                    value={checkTodayDate(imageData.date) ? todayData.date : (imageData.date || '')}\r\n                    ref={input}\r\n                    onChange={() => changeImage({ ...imageData, date: input.current.value })}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setTodayData, setMainImage } from '@/store/actions/mainImageActions'\r\nimport MainImage from './MainImage'\r\n\r\nconst MainImageContainer = (props) => {\r\n    return <MainImage {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mainImage: state.mainImage,\r\n    imageData: state.mainImage.imageData,\r\n    todayData: state.mainImage.todayData\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTodayData(data) {\r\n        dispatch(setTodayData(data))\r\n    },\r\n    changeImage(data) {\r\n        dispatch(setMainImage(data))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainImageContainer)\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nexport const setTodayData = (data) => ({\r\n    type: AC.SET_TODAY_DATA,\r\n    date: data.date,\r\n    url: data.url,\r\n    explanation: data.explanation,\r\n    title: data.title,\r\n    mediaType: data.mediaType\r\n})\r\n\r\nexport const setMainImage = (data) => ({\r\n    type: AC.CHANGE_MAIN_IMAGE,\r\n    date: data.date,\r\n    url: data.url,\r\n    explanation: data.explanation,\r\n    title: data.title,\r\n    mediaType: data.mediaType\r\n})\r\n","import React from 'react'\r\nimport './loaders.scss'\r\n\r\nexport const LoaderActive = () => {\r\n    return (\r\n        <div className='loader-active'>\r\n            <div className='loader-active__ellips' />\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoaderEmpty = () => {\r\n    return (\r\n        <div className='loader-empty'>\r\n            <div className='loader-empty__ellips' />\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n","const convertDateObjectToString = (date = new Date()) => {\r\n    const monthIncrement = date.getMonth() + 1\r\n    const month = monthIncrement < 10 ? `0${monthIncrement}` : monthIncrement\r\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\r\n    \r\n    return `${date.getFullYear()}-${month}-${day}`\r\n}\r\n\r\nexport default convertDateObjectToString\r\n","import React, { useState, useEffect } from 'react'\r\nimport InfiniteScroll from '@alexcambose/react-infinite-scroll';\r\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\r\nimport { LoaderActive, LoaderEmpty } from './../loaders/loaders'\r\nimport ApplicationError from './../ApplicationError/ApplicationError'\r\nimport queryString from '@/helpers/queryString'\r\nimport convertDateObjectToString from '@/helpers/convertDateObjectToString'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport C from '@/constants/appConstants'\r\nimport './ImageCatalog.scss'\r\n\r\nconst ImageCatalog = ({\r\n    imagesArray,\r\n    loadImages,\r\n    imagesArrayForOneIteration,\r\n    loadImagesToOneIteration,\r\n    dataInterval,\r\n    changeDataInterval,\r\n    itemsCounterForOneIteration,\r\n    countItemsForOneIteration,\r\n    loader,\r\n    changeLoader,\r\n    todayDate\r\n}) => {\r\n    let startDate, endDate\r\n\r\n    const [errorComponent, setStateErrorComponent] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // if we have less them 24 items\r\n        if (itemsCounterForOneIteration < C.ITEMS_ON_PAGE && itemsCounterForOneIteration !== 0) {\r\n            startDate = new Date(dataInterval.startDateValue)\r\n            endDate = new Date(dataInterval.startDateValue)\r\n\r\n            endDate.setDate(endDate.getDate() - 1)\r\n            startDate.setDate(startDate.getDate() - (C.ITEMS_ON_PAGE - itemsCounterForOneIteration))\r\n\r\n            ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate), itemsCounterForOneIteration)\r\n\r\n            changeDataInterval(startDate, endDate)\r\n        }\r\n    }, [itemsCounterForOneIteration])\r\n\r\n    useEffect(() => {\r\n        if (!imagesArray.length) return\r\n        changeLoader(false)\r\n    }, [imagesArray])\r\n\r\n    useEffect(() => {\r\n        // fix bug. sometimes load second iteration instead of first\r\n        loadImages([...imagesArray, ...imagesArrayForOneIteration])\r\n    }, [imagesArrayForOneIteration])\r\n\r\n    useEffect(() => {\r\n        if (!todayDate) return\r\n\r\n        // first load images\r\n        startDate = new Date()\r\n        startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\r\n        endDate = new Date(todayDate)\r\n        endDate.setDate(endDate.getDate() - 1)\r\n\r\n        ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\r\n        changeDataInterval(startDate, endDate)\r\n    }, [todayDate])\r\n\r\n    const ajaxQuery = async (startDate, endDate, itemsCounter = 0) => {\r\n        try {\r\n            const nasaQuery = await fetch(queryString(null, startDate, endDate))\r\n            const nasaParse = await nasaQuery.json()\r\n\r\n            loadImagesToOneIteration([...nasaParse.reverse()])\r\n            countItemsForOneIteration(nasaParse.length + itemsCounter)\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n            setStateErrorComponent(true)\r\n        }\r\n    }\r\n\r\n    const checkScrollScreen = () => {\r\n        changeLoader(true)\r\n\r\n        if (dataInterval.startDateValue && dataInterval.endDateValue) {\r\n            // next load images\r\n            startDate = new Date(dataInterval.startDateValue)\r\n            endDate = new Date(dataInterval.startDateValue)\r\n            endDate.setDate(endDate.getDate() - 1)\r\n            startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\r\n\r\n            ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\r\n            changeDataInterval(startDate, endDate)\r\n        }\r\n    };\r\n\r\n    const contextObj = (item, counter) => ({\r\n        className: 'image-catalog__image',\r\n        url: item.url,\r\n        // itemCounter used for get data from state and set to ModalWindow\r\n        itemCounter: counter\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {errorComponent && <ApplicationError />}\r\n\r\n            <section className='image-catalog'>\r\n                <InfiniteScroll\r\n                    hasMore={true}\r\n                    loadMore={checkScrollScreen}\r\n                >\r\n                    <ul className='image-catalog__wrap'>\r\n                        {imagesArray.map((item, counter) => (\r\n                            <li key={item.date}>\r\n                                <MainImageDataContext.Provider\r\n                                    value={contextObj(item, counter)}\r\n                                >\r\n                                    <RenderingContentDependingOnTheType\r\n                                        mediaType={item.media_type}\r\n                                    />\r\n                                </MainImageDataContext.Provider>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    {loader ? <LoaderActive /> : <LoaderEmpty />}\r\n                </InfiniteScroll>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageCatalog\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    loadImagesToImageCatalog,\r\n    loadImagesForOneIterationToImageCatalog,\r\n    changeDataIntervalInImageCatalog,\r\n    countItemsForOneIteration,\r\n    loaderInImageCatalog\r\n} from '@/store/actions/imageCatalogActions'\r\nimport ImageCatalog from './ImageCatalog'\r\n\r\nconst ImageCatalogContainer = (props) => {\r\n    return <ImageCatalog {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    imagesArray: state.imageCatalog.items,\r\n    imagesArrayForOneIteration: state.imageCatalog.itemsForOneIteration,\r\n    dataInterval: state.imageCatalog.date,\r\n    itemsCounterForOneIteration: state.imageCatalog.itemsCounterForOneIteration,\r\n    loader: state.imageCatalog.loader,\r\n    todayDate: state.mainImage.todayData.date\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadImages(items) {\r\n        dispatch(loadImagesToImageCatalog(items))\r\n    },\r\n    loadImagesToOneIteration(items) {\r\n        dispatch(loadImagesForOneIterationToImageCatalog(items))\r\n    },\r\n    changeDataInterval(startDate, endDate) {\r\n        dispatch(changeDataIntervalInImageCatalog(startDate, endDate))\r\n    },\r\n    countItemsForOneIteration(items) {\r\n        dispatch(countItemsForOneIteration(items))\r\n    },\r\n    changeLoader(loaderShow) {\r\n        dispatch(loaderInImageCatalog(loaderShow))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageCatalogContainer)\r\n","import AC from '@/constants/actionsConstants'\r\n\r\nexport const loadImagesToImageCatalog = (items) => ({\r\n    type: AC.LOAD_IMAGES_TO_IMAGE_CATALOG,\r\n    items\r\n})\r\n\r\nexport const loadImagesForOneIterationToImageCatalog = (items) => ({\r\n    type: AC.LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG,\r\n    items\r\n})\r\n\r\nexport const changeDataIntervalInImageCatalog = (startDateValue, endDateValue) => ({\r\n    type: AC.CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG,\r\n    startDateValue,\r\n    endDateValue\r\n})\r\n\r\nexport const countItemsForOneIteration = (counter) => ({\r\n    type: AC.ITEMS_COUNTER_FOR_ONE_ITERATION,\r\n    counter\r\n})\r\n\r\nexport const loaderInImageCatalog = (loader) => ({\r\n    type: AC.LOADER_IN_IMAGE_CATALOG,\r\n    loader\r\n})\r\n","const convertStringDateToObject = (date) => (\r\n    date.match(/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/).groups\r\n)\r\n\r\nexport default convertStringDateToObject\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport convertStringDateToObject from '@/helpers/convertStringDateToObject'\r\nimport './ModalWindow.scss'\r\n\r\nconst ModalWindow = ({\r\n    modalWindowShowed,\r\n    setStateForModalWindow,\r\n    modalWindowTitle,\r\n    modalWindowMainData,\r\n    modalWindowDate,\r\n    modalWindowExplanation\r\n}) => {\r\n    const dateObject = modalWindowDate\r\n        ? convertStringDateToObject(modalWindowDate)\r\n        : { day: '', month: '', year: '' }\r\n\r\n    return (\r\n        <Modal\r\n            dialogClassName='modal-window'\r\n            show={modalWindowShowed}\r\n            onHide={() => setStateForModalWindow(false)}\r\n            animation={false}\r\n        >\r\n            <Modal.Header className='modal-window__header' closeButton>\r\n                <Modal.Title>\r\n                    <h2 className='modal-window__title'>{modalWindowTitle}</h2>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modal-window__body'>\r\n                {modalWindowMainData}\r\n                <p>{modalWindowExplanation}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>{`${dateObject.day}.${dateObject.month}.${dateObject.year}`}</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalWindow\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStateForModalWindow } from '@/store/actions/modalWindowActions'\r\nimport ModalWindow from './ModalWindow'\r\n\r\nconst ModalWindowContainer = (props) => {\r\n    return <ModalWindow {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    modalWindowShowed: state.modalWindow.modalWindowState,\r\n    modalWindowTitle: state.modalWindow.modalWindowTitle,\r\n    modalWindowMainData: state.modalWindow.modalWindowMainData,\r\n    modalWindowDate: state.modalWindow.modalWindowDate,\r\n    modalWindowExplanation: state.modalWindow.modalWindowExplanation\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStateForModalWindow(state) {\r\n        dispatch(setStateForModalWindow(state))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ModalWindowContainer)\r\n","import React from 'react'\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = ({ className }) => {\r\n    return (\r\n        <section className={`preloader ${className}`}>\r\n            <div className='preloader__content'>\r\n                <div className='loader-circle'></div>\r\n                <div className='loader-line-mask'>\r\n                    <div className='loader-line'></div>\r\n                </div>\r\n                <p className='preloader__text'>NASA</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport MainImageContainer from './MainImage/MainImageContainer'\r\nimport ImageCatalogContainer from './ImageCatalog/ImageCatalogContainer'\r\nimport ModalWindowContainer from './ModalWindow/ModalWindowContainer'\r\nimport Preloader from './Preloader/Preloader'\r\nimport C from '@/constants/appConstants'\r\n\r\nconst App = ({ itemsCounterForPreloader }) => {\r\n    // if user reload page (like f5) he may not be at the top of the page\r\n    useEffect(() => {\r\n        // 10 - this random number (not more all items in first iteration, 25)\r\n        // it helps to delay the user's movement to the top of the page\r\n        // necessary for the user to move after the browser event fires\r\n        // (moving the user to the place where he reloaded the page)\r\n        itemsCounterForPreloader === 10 && window.scroll(0, 0)\r\n    }, [itemsCounterForPreloader])\r\n\r\n    itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\r\n        ? document.body.style.overflow = 'hidden'\r\n        : document.body.removeAttribute('style')\r\n\r\n    return (\r\n        <>\r\n            <Preloader className={\r\n                itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\r\n                    ? ''\r\n                    : 'hide'\r\n            } />\r\n            <MainImageContainer />\r\n            <ImageCatalogContainer />\r\n            <ModalWindowContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps\r\n)(App)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport App from './components/App.js'\nimport '@/assets/styles/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}