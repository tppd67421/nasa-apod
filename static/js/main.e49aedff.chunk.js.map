{"version":3,"sources":["reportWebVitals.ts","constants/actionsConstants.js","store/actions/mainImageActions.ts","store/reducers/mainImageReducer.ts","store/actions/imageCatalogActions.ts","store/reducers/imageCatalogReducer.ts","store/actions/modalWindowActions.ts","store/reducers/modalWindowReducer.ts","store/actions/preloaderActions.ts","store/reducers/preloaderReducer.ts","store/reducers/index.ts","store/store.ts","constants/appConstants.js","helpers/checkTodayDate.js","helpers/checkImageInCache.js","helpers/removeParentClass.js","helpers/context.js","components/ImageBlock/ImageBlock.js","components/ImageBlock/ImageBlockContainer.js","components/ErrorComponent/ErrorComponent.js","constants/thumbnailFromVideoConstants.js","components/VideoBlock/VideoBlock.js","components/VideoBlock/VideoBlockContainer.js","components/RenderingContentDependingOnTheType/RenderingContentDependingOnTheType.js","components/ApplicationError/ApplicationError.js","helpers/workWithLocalStorage.js","helpers/queryString.js","components/MainImage/MainImage.js","components/MainImage/MainImageContainer.js","components/loaders/loaders.js","helpers/convertDateObjectToString.js","components/ImageCatalog/ImageCatalog.js","components/ImageCatalog/ImageCatalogContainer.js","helpers/convertStringDateToObject.js","components/ModalWindow/ModalWindow.js","components/ModalWindow/ModalWindowContainer.js","components/Preloader/Preloader.js","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionsConstants","SET_TODAY_DATA","CHANGE_MAIN_IMAGE","LOAD_IMAGES_TO_IMAGE_CATALOG","LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG","CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG","ITEMS_COUNTER_FOR_ONE_ITERATION","LOADER_IN_IMAGE_CATALOG","SET_STATE_FOR_MODAL_WINDOW","SET_TITLE_FOR_MODAL_WINDOW","SET_MAIN_DATA_FOR_MODAL_WINDOW","SET_DATE_FOR_MODAL_WINDOW","SET_EXPLANATION_FOR_MODAL_WINDOW","UPDATE_ITEM_COUNTER_FOR_PRELOADER","setTodayData","createAction","AC","data","date","url","explanation","title","mediaType","setMainImage","mainImageReducer","createReducer","imageData","todayData","on","state","action","loadImagesToImageCatalog","items","loadImagesForOneIterationToImageCatalog","changeDataIntervalInImageCatalog","startDateValue","endDateValue","countItemsForOneIteration","counter","loaderInImageCatalog","loader","imageCatalogReducer","itemsForOneIteration","itemsCounterForOneIteration","setStateForModalWindow","setTitleForModalWindow","setMainDataForModalWindow","mainData","setDateForModalWindow","setExplanationForModalWindow","modalWindowReducer","modalWindowState","modalWindowTitle","modalWindowMainData","modalWindowDate","modalWindowExplanation","updateItemsCounterForPreloader","preloaderReducer","itemsCounterForPreloader","combineReducers","mainImage","imageCatalog","modalWindow","preloader","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","appConstants","NASA_QUERY","NASA_API_KEY","NASA_API_KEY_STRING","NASA_TARGET_DATE_STRING","NASA_START_DATE_STRING","NASA_END_DATE_STRING","MEDIA_TYPE_IMAGE","MEDIA_TYPE_VIDEO","TODAY","LOCAL_STORAGE_KEY","ITEMS_ON_PAGE","MAIN_IMAGE_ATTRIBUTE","CLASS_FOR_LOADED_ELEMENTS","ITEMS_ON_PAGE_WITH_FIRST_ITERATION","checkTodayDate","C","checkImageInCache","src","image","Image","complete","removeParentClass","element","closest","classList","remove","MainImageDataContext","createContext","ImageBlock","modalWindowShowed","todayImage","itemsFromImageCatalog","useContext","imageWrap","useRef","useEffect","current","add","imgCreator","imgLink","href","target","className","onLoad","e","changeModalWindow","attribute","targetItem","hdurl","changeStateForModalWindow","itemCounter","ref","data-item-counter","onClick","connect","dispatch","props","ErrorComponent","thumbnailFromVideoConstants","YOUTUBE_BIG_THUMBNAIL","videoId","YOUTUBE_MEDIUM_THUMBNAIL","YOUTUBE_SMALL_THUMBNAIL","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT","VIMEO_GET_THUMBNAIL_ID","vimeoVideoId","VIMEO_GET_THUMBNAIL","imageId","VideoBlock","regExpVimeo","regExpYoutube","useState","videoThumbnail","setVideoThumbnail","stateErrorComponent","setStateErrorComponent","renderVideo","iframeCreator","iframeLink","match","youtubeVideoId","pop","getThumbnailFromYoutubeVideo","getThumbnailFromVimeoVideo","checkImagesWidth","width","height","TC","bigThumbnail","Promise","resolve","onload","naturalWidth","naturalHeight","a","fetch","res","json","thumbnail_url","String","RenderingContentDependingOnTheType","ApplicationError","document","body","style","overflow","location","reload","readFromLocalStorage","key","localStorage","getItem","queryString","startDate","endDate","keyString","dateString","startEndDate","MainImage","changeImage","dataFromLocalStorage","JSON","parse","input","errorComponent","ajaxQuery","addEventListener","setNewDate","removeEventListener","value","Object","keys","length","stringify","setItem","selectedDate","nasaQuery","ok","Error","nasaParse","media_type","targetObj","console","log","contextObj","Provider","type","max","onChange","LoaderActive","LoaderEmpty","convertDateObjectToString","Date","monthIncrement","getMonth","month","day","getDate","getFullYear","ImageCatalog","imagesArray","loadImages","imagesArrayForOneIteration","loadImagesToOneIteration","dataInterval","changeDataInterval","changeLoader","todayDate","setDate","itemsCounter","reverse","item","hasMore","loadMore","map","loaderShow","convertStringDateToObject","groups","ModalWindow","dateObject","year","Modal","dialogClassName","show","onHide","animation","Header","closeButton","Title","Body","Footer","Preloader","App","useSelector","scroll","removeAttribute","ReactDOM","render","StrictMode","getElementById"],"mappings":"2WAceA,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,6BCUCQ,EAnBU,CACrBC,eAAgB,iBAChBC,kBAAmB,oBAEnBC,6BAA8B,8BAC9BC,+CAAgD,gDAChDC,sCAAuC,wCACvCC,gCAAiC,kCACjCC,wBAAyB,0BAEzBC,2BAA4B,6BAC5BC,2BAA4B,6BAC5BC,+BAAgC,iCAChCC,0BAA2B,4BAC3BC,iCAAkC,mCAElCC,kCAAmC,qCCX1BC,EAAeC,YACxBC,EAAGf,gBACH,SAACgB,GAAD,MAA2B,CACvBC,KAAMD,EAAKC,KACXC,IAAKF,EAAKE,IACVC,YAAaH,EAAKG,YAClBC,MAAOJ,EAAKI,MACZC,UAAWL,EAAKK,cAIXC,EAAeR,YACxBC,EAAGd,mBACH,SAACe,GAAD,MAA2B,CACvBC,KAAMD,EAAKC,KACXC,IAAKF,EAAKE,IACVC,YAAaH,EAAKG,YAClBC,MAAOJ,EAAKI,MACZC,UAAWL,EAAKK,cCDlBE,EAAmBC,YAA+B,GAjBlB,CAClCC,UAAW,CACPR,KAAM,GACNC,IAAK,GACLC,YAAa,GACbC,MAAO,GACPC,UAAW,IAEfK,UAAW,CACPT,KAAM,GACNC,IAAK,GACLC,YAAa,GACbC,MAAO,GACPC,UAAW,MAgCnBE,EAAiBI,GAAGd,GA1BQ,SACxBe,EAAwBC,GADA,mBAAC,eAGtBD,GAHqB,IAIxBF,UAAW,CACPT,KAAMY,EAAOZ,KACbC,IAAKW,EAAOX,IACZC,YAAaU,EAAOV,YACpBC,MAAOS,EAAOT,MACdC,UAAWQ,EAAOR,gBAkB1BE,EAAiBI,GAAGL,GAdQ,SACxBM,EAAwBC,GADA,mBAAC,eAGtBD,GAHqB,IAIxBH,UAAW,CACPR,KAAMY,EAAOZ,KACbC,IAAKW,EAAOX,IACZC,YAAaU,EAAOV,YACpBC,MAAOS,EAAOT,MACdC,UAAWQ,EAAOR,gBAQXE,QC1CFO,EAA2BhB,YACpCC,EAAGb,8BACH,SAAC6B,GAAD,MAAiC,CAC7BA,YAIKC,EAA0ClB,YACnDC,EAAGZ,gDACH,SAAC4B,GAAD,MAAiC,CAC7BA,YAIKE,EAAmCnB,YAC5CC,EAAGX,uCACH,SAAC8B,EAA+BC,GAAhC,MAAiE,CAC7DD,iBACAC,mBAIKC,EAA4BtB,YACrCC,EAAGV,iCACH,SAACgC,GAAD,MAAsB,CAClBA,cAIKC,EAAuBxB,YAChCC,EAAGT,yBACH,SAACiC,GAAD,MAAsB,CAClBA,aCfFC,EAAsBhB,YAAkC,GAXrB,CACrCO,MAAO,GACPU,qBAAsB,GACtBxB,KAAM,CACFiB,eAAgB,KAChBC,aAAc,MAElBO,4BAA6B,EAC7BH,QAAQ,IA2CZC,EAAoBb,GAAGG,GAtCiB,SACpCF,EAA2BC,GADS,mBAAC,eAGlCD,GAHiC,IAIpCG,MAAOF,EAAOE,WAmClBS,EAAoBb,GAAGK,GAhCgC,SACnDJ,EAA2BC,GADwB,mBAAC,eAGjDD,GAHgD,IAInDa,qBAAsBZ,EAAOE,WA6BjCS,EAAoBb,GAAGM,GA1ByB,SAC5CL,EAA2BC,GADiB,mBAAC,eAG1CD,GAHyC,IAI5CX,KAAM,CACFiB,eAAgBL,EAAOK,eACvBC,aAAcN,EAAOM,mBAqB7BK,EAAoBb,GAAGS,GAjBkB,SACrCR,EAA2BC,GADU,mBAAC,eAGnCD,GAHkC,IAIrCc,4BAA6Bb,EAAOQ,aAcxCG,EAAoBb,GAAGW,GAXa,SAChCV,EAA2BC,GADK,mBAAC,eAG9BD,GAH6B,IAIhCW,OAAQV,EAAOU,YAUJC,QChEFG,EAAyB7B,YAClCC,EAAGR,4BACH,SAACqB,GAAD,MAAqB,CACjBA,YAIKgB,EAAyB9B,YAClCC,EAAGP,4BACH,SAACY,GAAD,MAA2B,CACvBA,YAIKyB,EAA4B/B,YACrCC,EAAGN,gCACH,SAACqC,GAAD,MAAgC,CAC5BA,eAIKC,EAAwBjC,YACjCC,EAAGL,2BACH,SAACO,GAAD,MAA0B,CACtBA,WAIK+B,EAA+BlC,YACxCC,EAAGJ,kCACH,SAACQ,GAAD,MAAiC,CAC7BA,kBCjBF8B,EAAqBzB,YAAiC,GARpB,CACpC0B,kBAAkB,EAClBC,iBAAkB,KAClBC,oBAAqB,KACrBC,gBAAiB,KACjBC,uBAAwB,OAwC5BL,EAAmBtB,GAAGgB,GAnCgB,SAClCf,EAA0BC,GADQ,mBAAC,eAGhCD,GAH+B,IAIlCsB,iBAAkBrB,EAAOD,WAgC7BqB,EAAmBtB,GAAGiB,GA7BgB,SAClChB,EAA0BC,GADQ,mBAAC,eAGhCD,GAH+B,IAIlCuB,iBAAkBtB,EAAOT,WA0B7B6B,EAAmBtB,GAAGkB,GAvBmB,SACrCjB,EAA0BC,GADW,mBAAC,eAGnCD,GAHkC,IAIrCwB,oBAAqBvB,EAAOiB,cAoBhCG,EAAmBtB,GAAGoB,GAjBe,SACjCnB,EAA0BC,GADO,mBAAC,eAG/BD,GAH8B,IAIjCyB,gBAAiBxB,EAAOZ,UAc5BgC,EAAmBtB,GAAGqB,GAXsB,SACxCpB,EAA0BC,GADc,mBAAC,eAGtCD,GAHqC,IAIxC0B,uBAAwBzB,EAAOV,iBAUpB8B,QClEFM,EAAiCzC,YAC1CC,EAAGH,mCACH,SAACyB,GAAD,MAAsB,CAClBA,cCEFmB,EAAmBhC,YAA+B,GAJlB,CAClCiC,yBAA0B,IAY9BD,EAAiB7B,GAAG4B,GAP0B,SAC1C3B,EAAwBC,GADkB,mBAAC,eAGxCD,GAHuC,IAI1C6B,yBAA0B5B,EAAOQ,aAMtBmB,QCfAE,cAAgB,CAC3BC,YACAC,eACAC,cACAC,cCFWC,EALDC,YACVC,EACCC,OAAeC,8BAAiCD,OAAeC,gC,iCCcrDC,EAnBM,CACjBC,WAAY,sCACZC,aAAc,2CACdC,oBAAqB,UACrBC,wBAAyB,OACzBC,uBAAwB,aACxBC,qBAAsB,WACtBC,iBAAkB,QAClBC,iBAAkB,QAClBC,MAAO,QACPC,kBAAmB,WACnBC,cAAe,GAEfC,qBAAsB,aAEtBC,0BAA2B,UAC3BC,mCAAoC,ICTzBC,EALQ,SAAClE,GACpB,OAAIA,IAASmE,EAAEP,OCIJQ,EAPW,SAACC,GACvB,IAAMC,EAAQ,IAAIC,MAGlB,OAFAD,EAAMD,IAAMA,EAELC,EAAME,UCIFC,EANW,SAACC,GACvBA,EACKC,QADL,WACiBR,EAAEH,4BACdY,UAAUC,OAAOV,EAAEH,4BCHfc,EAAuBC,0B,eC+FrBC,EAzFI,SAAC,GAYb,IAXHC,EAWE,EAXFA,kBACAvD,EAUE,EAVFA,uBACAC,EASE,EATFA,uBACAC,EAQE,EARFA,0BACAE,EAOE,EAPFA,sBACAC,EAME,EANFA,6BACAW,EAKE,EALFA,UACAwC,EAIE,EAJFA,WACAC,EAGE,EAHFA,sBACA3C,EAEE,EAFFA,yBACAF,EACE,EADFA,+BAEMvC,EAAOqF,qBAAWN,GAClBO,EAAYC,mBAElBC,qBAAU,WAMN,OALInB,EAAkBrE,EAAKE,KACvBoF,EAAUG,QAAQZ,UAAUC,OAAOV,EAAEH,2BAErCqB,EAAUG,QAAQZ,UAAUa,IAAItB,EAAEH,2BAE/B,kBAAMqB,EAAUG,QAAQZ,UAAUC,OAAOV,EAAEH,8BACnD,CAACjE,EAAKE,MAET,IAAMyF,EAAa,SAACC,GAAD,OACf,mBAAGC,KAAMD,EAASE,OAAO,SAASC,UAAW3B,EAAEH,0BAA/C,SACI,qBACI8B,UAAU,0BACVzB,IAAKsB,EACLI,OAAQ,SAACC,GAAD,OAAOvB,EAAkBuB,EAAEH,cA+BzCI,EAAoB,WACjBhB,KA3ByB,SAACiB,GAC/B,OAAQA,GACJ,KAAK/B,EAAEJ,qBACCG,EAAexB,EAAU1C,OACzB2B,EAAuBuD,EAAW/E,OAClCyB,EAA0B8D,EAAWR,EAAWjF,MAChD8B,EAA6BmD,EAAWhF,aACxC4B,EAAsBoD,EAAWlF,QAEjC2B,EAAuBe,EAAUvC,OACjCyB,EAA0B8D,EAAWhD,EAAUzC,MAC/C8B,EAA6BW,EAAUxC,aACvC4B,EAAsBY,EAAU1C,OAEpC,MAEJ,QACI,IAAMmG,EAAahB,EAAsBe,GACzCvE,EAAuBwE,EAAWhG,OAClCyB,EAA0B8D,EAAWS,EAAWC,QAChDrE,EAA6BoE,EAAWjG,aACxC4B,EAAsBqE,EAAWnG,OAOrCqG,CAA0BtG,EAAKuG,aAC/B5E,GAAuB,KAS/B,OACI,qBACIoE,UAAS,UAAK/F,EAAK+F,UAAV,iBAA4B3B,EAAEH,2BACvCuC,IAAKlB,EAFT,SAII,qBACIhB,IAAKtE,EAAKE,IACV6F,UAAW/F,EAAK+F,UAChBU,oBAAmBzG,EAAKuG,YACxBG,QAAS,kBAAMR,KACfF,OAAQ,kBAdhBV,EAAUG,QAAQZ,UAAUC,OAAOV,EAAEH,gCACrC1B,IAAiCE,SC7B1BkE,eAjCS,SAAC/F,GAAD,MAAY,CAChCsE,kBAAmBtE,EAAMiC,YAAYX,iBACrCS,UAAW/B,EAAM+B,UAAUlC,UAC3B0E,WAAYvE,EAAM+B,UAAUjC,UAC5B0E,sBAAuBxE,EAAMgC,aAAa7B,MAC1C0B,yBAA0B7B,EAAMkC,UAAUL,6BAGnB,SAACmE,GAAD,MAAe,CACtCjF,uBADsC,SACff,GACnBgG,EAASjF,EAAuBf,KAGpCgB,uBALsC,SAKfxB,GACnBwG,EAAShF,EAAuBxB,KAGpCyB,0BATsC,SASZC,GACtB8E,EAAS/E,EAA0BC,KAGvCC,sBAbsC,SAahB9B,GAClB2G,EAAS7E,EAAsB9B,KAGnC+B,6BAjBsC,SAiBT7B,GACzByG,EAAS5E,EAA6B7B,KAE1CoC,+BApBsC,SAoBPvC,GAC3B4G,EAASrE,EAA+BvC,QAIjC2G,EArCa,SAACE,GACzB,OAAO,cAAC,EAAD,eAAgBA,OCFZC,G,MARQ,WACnB,OACI,qBAAKf,UAAU,kBAAf,SACI,4CCOGgB,EAbqB,CAChCC,sBAAuB,SAACC,GAAD,2CAA4CA,EAA5C,uBACvBC,yBAA0B,SAACD,GAAD,2CAA4CA,EAA5C,mBAC1BE,wBAAyB,SAACF,GAAD,2CAA4CA,EAA5C,mBAGzBG,qCAAsC,IACtCC,sCAAuC,GAEvCC,uBAAwB,SAACC,GAAD,wEAA8EA,IACtGC,oBAAqB,SAACC,GAAD,6CAA8CA,EAA9C,UCyMVC,G,MAzMI,SAAC,GAYb,IAXHxC,EAWE,EAXFA,kBACAvD,EAUE,EAVFA,uBACAC,EASE,EATFA,uBACAC,EAQE,EARFA,0BACAE,EAOE,EAPFA,sBACAC,EAME,EANFA,6BACAW,EAKE,EALFA,UACAwC,EAIE,EAJFA,WACAC,EAGE,EAHFA,sBACA3C,EAEE,EAFFA,yBACAF,EACE,EADFA,+BAEMvC,EAAOqF,qBAAWN,GAClBO,EAAYC,mBAEZoC,EAAc,6EACdC,EAAgB,iHAEtB,EAA4CC,qBAA5C,mBAAOC,EAAP,KAAuBC,EAAvB,KACA,EAAsDF,oBAAS,GAA/D,mBAAOG,EAAP,KAA4BC,EAA5B,KAEAzC,qBAAU,WACN0C,MACD,CAACvF,IAEJ6C,qBAAU,WAQN,OAPIsC,IACIzD,EAAkByD,GAClBxC,EAAUG,QAAQZ,UAAUC,OAAOV,EAAEH,2BAErCqB,EAAUG,QAAQZ,UAAUa,IAAItB,EAAEH,4BAGnC,kBAAMqB,EAAUG,QAAQZ,UAAUC,OAAOV,EAAEH,8BACnD,CAAC6D,IAEJ,IAAMK,EAAgB,SAACC,GAAD,OAClB,qBAAKrC,UAAS,oCAA+B3B,EAAEH,2BAA/C,SACI,wBACI8B,UAAU,wDACVzB,IAAK8D,EACLpC,OAAQ,SAACC,GAAD,OAAOvB,EAAkBuB,EAAEH,cAKzCoC,EAAc,WAChB,GAAIlI,EAAKE,IAAImI,MAAMT,GAAgB,CAC/B,IAAMU,EAAiBtI,EAAKE,IAAImI,MAAM,yCAAyCE,MAC/EC,EAA6BF,QAC1B,GAAItI,EAAKE,IAAImI,MAAMV,GAAc,CACpC,IAAMJ,EAAevH,EAAKE,IAAImI,MAAM,mBAAmBE,MACvDE,EAA2BlB,QAE3BU,GAAuB,IAIzBS,EAAmB,SAACC,EAAOC,GAC7B,OACID,IAAUE,EAAGzB,sCACVwB,IAAWC,EAAGxB,uCAQnBmB,EAA+B,SAACvB,GAClC,IAWM6B,EAAe,IAAItE,MAEzB,OAAQxE,EAAKuG,aACT,KAAKnC,EAAEJ,qBACH,IAAI+E,SAAQ,SAACC,GACTF,EAAaxE,IAAMuE,EAAG7B,sBAAsBC,GAC5C6B,EAAaG,OAAS,WACdP,EACAI,EAAaI,aACbJ,EAAaK,eAEbpB,EAAkBe,EAAaxE,KAE/B0E,QAGTvK,MAAK,WACJ,OAAO,IAAIsK,SAAQ,SAACC,GAChBF,EAAaxE,IAAMuE,EAAG3B,yBAAyBD,GAC/C6B,EAAaG,OAAS,WACdP,EACAI,EAAaI,aACbJ,EAAaK,eAEbpB,EAAkBe,EAAaxE,KAE/B0E,QAGTvK,MAAK,WACJqK,EAAaxE,IAAMuE,EAAG1B,wBAAwBF,GAC9C6B,EAAaG,OAAS,WACdP,EACAI,EAAaI,aACbJ,EAAaK,eAEbpB,EAAkBe,EAAaxE,KAE/B2D,GAAuB,UAKvC,MAEJ,QACIa,EAAaxE,IAAMuE,EAAG1B,wBAAwBF,GAC9C6B,EAAaG,OA1DO,WACpBP,EACAI,EAAaI,aACbJ,EAAaK,eAEbpB,EAAkBe,EAAaxE,KAE/B2D,GAAuB,MAwD7BQ,EAA0B,uCAAG,WAAOlB,GAAP,SAAA6B,EAAA,sEACzBC,MAAMR,EAAGvB,uBAAuBC,IACjC9I,MAAK,SAAA6K,GAAG,OAAIA,EAAIC,UAChB9K,MAAK,SAAA6K,GAAG,OAAIA,EAAIE,cAAcnB,MAAM,mBAAmBE,SACvD9J,MAAK,SAAA6K,GAAG,OAAIvB,EAAkBc,EAAGrB,oBAAoB8B,OAJ3B,2CAAH,sDAiC1BpD,EAAoB,WACjBhB,KA3ByB,SAACiB,GAC/B,OAAQA,GACJ,KAAK/B,EAAEJ,qBACCG,EAAexB,EAAU1C,OACzB2B,EAAuBuD,EAAW/E,OAClCyB,EAA0BsG,EAAchD,EAAWjF,MACnD8B,EAA6BmD,EAAWhF,aACxC4B,EAAsBoD,EAAWlF,QAEjC2B,EAAuBe,EAAUvC,OACjCyB,EAA0BsG,EAAcxF,EAAUzC,MAClD8B,EAA6BW,EAAUxC,aACvC4B,EAAsBY,EAAU1C,OAEpC,MAEJ,QACI,IAAMmG,EAAahB,EAAsBqE,OAAOtD,IAChDvE,EAAuBwE,EAAWhG,OAClCyB,EAA0BsG,EAAc/B,EAAWlG,MACnD8B,EAA6BoE,EAAWjG,aACxC4B,EAAsBqE,EAAWnG,OAOrCqG,CAA0BtG,EAAKuG,aAC/B5E,GAAuB,KAS/B,OACI,mCAEQqG,EACM,cAAC,EAAD,IACA,qBACEjC,UAAS,UAAK/F,EAAK+F,UAAV,uBAAkC3B,EAAEH,2BAC7CuC,IAAKlB,EAFP,SAIE,qBACIS,UAAS,UAAK/F,EAAK+F,UAAV,YAAuB/F,EAAK+F,UAA5B,UACTU,oBAAmBzG,EAAKuG,YACxBG,QAAS,kBAAMR,KACf5B,IAAKwD,EACL9B,OAAQ,kBAlB5BV,EAAUG,QAAQZ,UAAUC,OAAOV,EAAEH,gCACrC1B,IAAiCE,YCzI1BkE,eAjCS,SAAC/F,GAAD,MAAY,CAChCsE,kBAAmBtE,EAAMiC,YAAYX,iBACrCS,UAAW/B,EAAM+B,UAAUlC,UAC3B0E,WAAYvE,EAAM+B,UAAUjC,UAC5B0E,sBAAuBxE,EAAMgC,aAAa7B,MAC1C0B,yBAA0B7B,EAAMkC,UAAUL,6BAGnB,SAACmE,GAAD,MAAe,CACtCjF,uBADsC,SACff,GACnBgG,EAASjF,EAAuBf,KAGpCgB,uBALsC,SAKfxB,GACnBwG,EAAShF,EAAuBxB,KAGpCyB,0BATsC,SASZC,GACtB8E,EAAS/E,EAA0BC,KAGvCC,sBAbsC,SAahB9B,GAClB2G,EAAS7E,EAAsB9B,KAGnC+B,6BAjBsC,SAiBT7B,GACzByG,EAAS5E,EAA6B7B,KAE1CoC,+BApBsC,SAoBPvC,GAC3B4G,EAASrE,EAA+BvC,QAIjC2G,EArCa,SAACE,GACzB,OAAO,cAAC,EAAD,eAAgBA,OCWZ6C,EAjB4B,SAAC,GACxC,OAD0D,EAAhBrJ,WAEtC,KAAK+D,EAAET,iBACH,OAAO,cAAC,EAAD,IAEX,KAAKS,EAAER,iBACH,OAAO,cAAC,EAAD,IAEX,QACI,OAAO,cAAC,EAAD,MCMJ+F,G,MAnBU,WAGrB,OAFAC,SAASC,KAAKC,MAAMC,SAAW,SAG3B,yBAAShE,UAAU,oBAAnB,SACI,sBAAKA,UAAU,gCAAf,UACI,oBAAIA,UAAU,4BAAd,2BACA,oBAAIA,UAAU,4BAAd,qCACA,wBACIA,UAAU,mCACVW,QAAS,kBAAMxD,OAAO8G,SAASC,UAFnC,gCCPHC,GAAuB,SAACC,GACjC,OAAOC,aAAaC,QAAQF,ICSjBG,GAZK,WAA8C,IAA7CrK,EAA4C,uDAArC,GAAIsK,EAAiC,uDAArB,GAAIC,EAAiB,uDAAP,GAChDC,EAAS,UAAMrG,EAAEb,oBAAR,YAA+Ba,EAAEd,cAC1CoH,EAAazK,EAAI,WAAOmE,EAAEZ,wBAAT,YAAoCvD,GAAS,GAC9D0K,EAAeJ,GAAaC,EAAb,WACXpG,EAAEX,uBADS,YACiB8G,EADjB,YAC8BnG,EAAEV,qBADhC,YACwD8G,GACvE,GAEN,MAAM,GAAN,OACOpG,EAAEf,WADT,YACuBoH,GADvB,OACmCC,GADnC,OACgDC,ICwHrCC,I,MAxHG,SAAC,GAMZ,IALHjI,EAKE,EALFA,UACAlC,EAIE,EAJFA,UACAoK,EAGE,EAHFA,YACAnK,EAEE,EAFFA,UACAb,EACE,EADFA,aAEMiL,EAAuBC,KAAKC,MAAMd,GAAqB9F,EAAEN,oBAEzDmH,EAAQ1F,mBACd,EAAiDsC,oBAAS,GAA1D,mBAAOqD,EAAP,KAAuBjD,EAAvB,KAEAzC,qBAAU,WAIN,OAHA2F,IACAF,EAAMxF,QAAQ2F,iBAAiB,SAAUC,GAElC,kBAAMJ,EAAMxF,QAAQ6F,oBAAoB,SAAUD,MAC1D,IAEH7F,qBAAU,WF7BqB,IAAC2E,EAAKoB,EE8B5B7K,EAAUT,OAEXS,EAAUT,OAASQ,EAAUR,OACzBiK,GAAqB9F,EAAEN,oBACnBgH,GACGU,OAAOC,KAAKX,GAAsBY,QAClCZ,EAAqBrK,UAAUR,KAElC4K,EAAYC,EAAqBrK,WAKrCoK,EAAYnK,IAIhBD,EAAUR,OAASS,EAAUT,MAAM4K,EAAY,2BAAKnK,GAAN,IAAiBT,KAAMmE,EAAEP,SF/C/CsG,EEiDR/F,EAAEN,kBFjDWyH,EEiDQR,KAAKY,UAAL,eAAoBhJ,IFhDjEyH,aAAawB,QAAQzB,EAAKoB,MEiDvB,CAAC5I,IAEJ,IAAMwI,EAAS,uCAAG,0DAAA/B,EAAA,6DAAOyC,EAAP,+BAAsB,GAAtB,kBAEcxC,MAAMiB,GAAYuB,IAFhC,WAEJC,EAFI,QAGKC,GAHL,sBAGe,IAAIC,MAAM,uBAHzB,uBAKcF,EAAUvC,OALxB,OAKJ0C,EALI,OAOJhM,EAAOgM,EAAUhM,KACjBI,EAAY4L,EAAUC,WACtBhM,EAAMG,IAAc+D,EAAET,iBAAmBsI,EAAU5F,MAAQ4F,EAAU/L,IACrEC,EAAc8L,EAAU9L,YACxBC,EAAQ6L,EAAU7L,MAClB+L,EAAY,CAAElM,OAAMC,MAAKC,cAAaC,QAAOC,aAE/CwL,EACAhB,EAAYsB,GAEZtM,EAAasM,GAjBP,kDAoBVC,QAAQC,IAAI,UAAZ,MAEApE,GAAuB,GAEjBkE,EAAY,CACdlM,KAAM4L,EACN3L,IAAK,KACLC,YAAa,KACbC,MAAO,KACPC,UAAW,MAGXwL,EACAhB,EAAYsB,GAEZtM,EAAasM,GAnCP,0DAAH,qDAwCTd,EAAa,SAACpF,GAChB,IAAMsF,EAAQtF,EAAEH,OAAOyF,MACvBJ,EAAUI,IAGRe,EAAa,CACfvG,UAAW,oBACX7F,IAAKiE,EAAe1D,EAAUR,MAAQS,EAAUR,IAAMO,EAAUP,IAEhEqG,YAAanC,EAAEJ,sBAGnB,OACI,qCACKkH,GAAkB,cAAC,EAAD,IAEnB,0BAASnF,UAAU,aAAnB,UACI,cAAChB,EAAqBwH,SAAtB,CAA+BhB,MAAOe,EAAtC,SACI,cAAC,EAAD,CACIjM,UAAW8D,EAAe1D,EAAUR,MAAQS,EAAUL,UAAYI,EAAUJ,cAIpF,oBAAI0F,UAAU,oBAAd,sDAEA,uBACIA,UAAU,oBACVyG,KAAK,OACLC,IAAK/L,EAAUT,KACfsL,MAAOpH,EAAe1D,EAAUR,MAAQS,EAAUT,KAAQQ,EAAUR,MAAQ,GAC5EuG,IAAKyE,EACLyB,SAAU,kBAAM7B,EAAY,2BAAKpK,GAAN,IAAiBR,KAAMgL,EAAMxF,QAAQ8F,oBCnGrE5E,gBAfS,SAAC/F,GAAD,MAAY,CAChC+B,UAAW/B,EAAM+B,UACjBlC,UAAWG,EAAM+B,UAAUlC,UAC3BC,UAAWE,EAAM+B,UAAUjC,cAGJ,SAACkG,GAAD,MAAe,CACtC/G,aADsC,SACzBG,GACT4G,EAAS/G,EAAaG,KAE1B6K,YAJsC,SAI1B7K,GACR4G,EAAStG,EAAaN,QAIf2G,EAnBY,SAACE,GACxB,OAAO,cAAC,GAAD,eAAeA,O,6BCHb8F,I,MAAe,WACxB,OACI,sBAAK5G,UAAU,gBAAf,UACI,qBAAKA,UAAU,0BACf,gDAKC6G,GAAc,WACvB,OACI,sBAAK7G,UAAU,eAAf,UACI,qBAAKA,UAAU,yBACf,+CCRG8G,GARmB,WAAwB,IAAvB5M,EAAsB,uDAAf,IAAI6M,KACpCC,EAAiB9M,EAAK+M,WAAa,EACnCC,EAAQF,EAAiB,GAAjB,WAA0BA,GAAmBA,EACrDG,EAAMjN,EAAKkN,UAAY,GAAjB,WAA0BlN,EAAKkN,WAAclN,EAAKkN,UAE9D,MAAM,GAAN,OAAUlN,EAAKmN,cAAf,YAAgCH,EAAhC,YAAyCC,IC8H9BG,I,MAxHM,SAAC,GAYf,IACC9C,EAAWC,EAZf8C,EAWE,EAXFA,YACAC,EAUE,EAVFA,WACAC,EASE,EATFA,2BACAC,EAQE,EARFA,yBACAC,EAOE,EAPFA,aACAC,EAME,EANFA,mBACAjM,EAKE,EALFA,4BACAN,EAIE,EAJFA,0BACAG,EAGE,EAHFA,OACAqM,EAEE,EAFFA,aACAC,EACE,EADFA,UAIA,EAAiDhG,oBAAS,GAA1D,mBAAOqD,EAAP,KAAuBjD,EAAvB,KAEAzC,qBAAU,WAEF9D,EAA8B0C,EAAEL,eAAiD,IAAhCrC,IACjD6I,EAAY,IAAIuC,KAAKY,EAAaxM,iBAClCsJ,EAAU,IAAIsC,KAAKY,EAAaxM,iBAExB4M,QAAQtD,EAAQ2C,UAAY,GACpC5C,EAAUuD,QAAQvD,EAAU4C,WAAa/I,EAAEL,cAAgBrC,IAE3DyJ,EAAU0B,GAA0BtC,GAAYsC,GAA0BrC,GAAU9I,GAEpFiM,EAAmBpD,EAAWC,MAEnC,CAAC9I,IAEJ8D,qBAAU,WACD8H,EAAY5B,QACjBkC,GAAa,KACd,CAACN,IAEJ9H,qBAAU,WAEN+H,EAAW,GAAD,oBAAKD,GAAL,aAAqBE,OAChC,CAACA,IAEJhI,qBAAU,WACDqI,KAGLtD,EAAY,IAAIuC,MACNgB,QAAQvD,EAAU4C,UAAY/I,EAAEL,gBAC1CyG,EAAU,IAAIsC,KAAKe,IACXC,QAAQtD,EAAQ2C,UAAY,GAEpChC,EAAU0B,GAA0BtC,GAAYsC,GAA0BrC,IAC1EmD,EAAmBpD,EAAWC,MAC/B,CAACqD,IAEJ,IAAM1C,EAAS,uCAAG,WAAOZ,EAAWC,GAAlB,+BAAApB,EAAA,6DAA2B2E,EAA3B,+BAA0C,EAA1C,kBAEc1E,MAAMiB,GAAY,KAAMC,EAAWC,IAFjD,cAEJsB,EAFI,gBAGcA,EAAUvC,OAHxB,OAGJ0C,EAHI,OAKVwB,EAAyB,aAAIxB,EAAU+B,YACvC5M,EAA0B6K,EAAUP,OAASqC,GANnC,kDAQV3B,QAAQC,IAAR,MAEApE,GAAuB,GAVb,0DAAH,wDA6BTqE,EAAa,SAAC2B,EAAM5M,GAAP,MAAoB,CACnC0E,UAAW,uBACX7F,IAAK+N,EAAK/N,IAEVqG,YAAalF,IAGjB,OACI,qCACK6J,GAAkB,cAAC,EAAD,IAEnB,yBAASnF,UAAU,gBAAnB,SACI,eAAC,KAAD,CACImI,SAAS,EACTC,SA7BU,WACtBP,GAAa,GAETF,EAAaxM,gBAAkBwM,EAAavM,eAE5CoJ,EAAY,IAAIuC,KAAKY,EAAaxM,iBAClCsJ,EAAU,IAAIsC,KAAKY,EAAaxM,iBACxB4M,QAAQtD,EAAQ2C,UAAY,GACpC5C,EAAUuD,QAAQvD,EAAU4C,UAAY/I,EAAEL,eAE1CoH,EAAU0B,GAA0BtC,GAAYsC,GAA0BrC,IAC1EmD,EAAmBpD,EAAWC,KAgB1B,UAII,oBAAIzE,UAAU,sBAAd,SACKuH,EAAYc,KAAI,SAACH,EAAM5M,GAAP,OACb,6BACI,cAAC0D,EAAqBwH,SAAtB,CACIhB,MAAOe,EAAW2B,EAAM5M,GAD5B,SAGI,cAAC,EAAD,CACIhB,UAAW4N,EAAK/B,gBALnB+B,EAAKhO,WAWrBsB,EAAS,cAAC,GAAD,IAAmB,cAAC,GAAD,cClFlCoF,gBA3BS,SAAC/F,GAAD,MAAY,CAChC0M,YAAa1M,EAAMgC,aAAa7B,MAChCyM,2BAA4B5M,EAAMgC,aAAanB,qBAC/CiM,aAAc9M,EAAMgC,aAAa3C,KACjCyB,4BAA6Bd,EAAMgC,aAAalB,4BAChDH,OAAQX,EAAMgC,aAAarB,OAC3BsM,UAAWjN,EAAM+B,UAAUjC,UAAUT,SAGd,SAAC2G,GAAD,MAAe,CACtC2G,WADsC,SAC3BxM,GACP6F,EAAS9F,EAAyBC,KAEtC0M,yBAJsC,SAIb1M,GACrB6F,EAAS5F,EAAwCD,KAErD4M,mBAPsC,SAOnBpD,EAAWC,GAC1B5D,EAAS3F,EAAiCsJ,EAAWC,KAEzDpJ,0BAVsC,SAUZL,GACtB6F,EAASxF,EAA0BL,KAEvC6M,aAbsC,SAazBS,GACTzH,EAAStF,EAAqB+M,QAIvB1H,EA/Be,SAACE,GAC3B,OAAO,cAAC,GAAD,eAAkBA,O,kBCRdyH,GAJmB,SAACrO,GAAD,OAC9BA,EAAKoI,MAAL,aAAW,yCAAX,yBAAoEkG,QCuCzDC,I,MAnCK,SAAC,GAOd,IANHtJ,EAME,EANFA,kBACAvD,EAKE,EALFA,uBACAQ,EAIE,EAJFA,iBACAC,EAGE,EAHFA,oBACAC,EAEE,EAFFA,gBACAC,EACE,EADFA,uBAEMmM,EAAapM,EACbiM,GAA0BjM,GAC1B,CAAE6K,IAAK,GAAID,MAAO,GAAIyB,KAAM,IAElC,OACI,eAACC,GAAA,EAAD,CACIC,gBAAgB,eAChBC,KAAM3J,EACN4J,OAAQ,kBAAMnN,GAAuB,IACrCoN,WAAW,EAJf,UAMI,cAACJ,GAAA,EAAMK,OAAP,CAAcjJ,UAAU,uBAAuBkJ,aAAW,EAA1D,SACI,cAACN,GAAA,EAAMO,MAAP,UACI,oBAAInJ,UAAU,sBAAd,SAAqC5D,QAG7C,eAACwM,GAAA,EAAMQ,KAAP,CAAYpJ,UAAU,qBAAtB,UACK3D,EACD,4BAAIE,OAER,cAACqM,GAAA,EAAMS,OAAP,UACI,sCAAOX,EAAWvB,IAAlB,YAAyBuB,EAAWxB,MAApC,YAA6CwB,EAAWC,eCXzD/H,gBAdS,SAAC/F,GAAD,MAAY,CAChCsE,kBAAmBtE,EAAMiC,YAAYX,iBACrCC,iBAAkBvB,EAAMiC,YAAYV,iBACpCC,oBAAqBxB,EAAMiC,YAAYT,oBACvCC,gBAAiBzB,EAAMiC,YAAYR,gBACnCC,uBAAwB1B,EAAMiC,YAAYP,2BAGnB,SAACsE,GAAD,MAAe,CACtCjF,uBADsC,SACff,GACnBgG,EAASjF,EAAuBf,QAIzB+F,EAlBc,SAACE,GAC1B,OAAO,cAAC,GAAD,eAAiBA,OCWbwI,I,MAdG,SAAC,GAAmB,IAAjBtJ,EAAgB,EAAhBA,UACjB,OACI,yBAASA,UAAS,oBAAeA,GAAjC,SACI,sBAAKA,UAAU,qBAAf,UACI,qBAAKA,UAAU,kBACf,qBAAKA,UAAU,mBAAf,SACI,qBAAKA,UAAU,kBAEnB,mBAAGA,UAAU,kBAAb,yBC8BDuJ,GAhCH,WACV,IAAM7M,EAAmC8M,aAAY,SAAC3O,GAAD,OACnDA,EAAMkC,UAAUL,4BAelB,OAZA+C,qBAAU,WAKqB,KAA7B/C,GAAmCS,OAAOsM,OAAO,EAAG,KACnD,CAAC/M,IAEJA,EAA2B2B,EAAEF,mCACzB0F,SAASC,KAAKC,MAAMC,SAAW,SAC/BH,SAASC,KAAK4F,gBAAgB,SAGhC,qCACE,cAAC,GAAD,CAAW1J,UACTtD,EAA2B2B,EAAEF,mCACzB,GACA,SAEN,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,MC3BNwL,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAU7M,MAAOA,EAAjB,SACE,cAAC,GAAD,QAGJ6G,SAASiG,eAAe,SAM1BvR,M","file":"static/js/main.e49aedff.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","const actionsConstants = {\r\n    SET_TODAY_DATA: 'SET_TODAY_DATA',\r\n    CHANGE_MAIN_IMAGE: 'CHANGE_MAIN_IMAGE',\r\n\r\n    LOAD_IMAGES_TO_IMAGE_CATALOG: 'LOAD_IMAGE_TO_IMAGE_CATALOG',\r\n    LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG: 'LOAD_IMAGE_FOR_ONE_ITERATION_TO_IMAGE_CATALOG',\r\n    CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG: 'CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG',\r\n    ITEMS_COUNTER_FOR_ONE_ITERATION: 'ITEMS_COUNTER_FOR_ONE_ITERATION',\r\n    LOADER_IN_IMAGE_CATALOG: 'LOADER_IN_IMAGE_CATALOG',\r\n\r\n    SET_STATE_FOR_MODAL_WINDOW: 'SET_STATE_FOR_MODAL_WINDOW',\r\n    SET_TITLE_FOR_MODAL_WINDOW: 'SET_TITLE_FOR_MODAL_WINDOW',\r\n    SET_MAIN_DATA_FOR_MODAL_WINDOW: 'SET_MAIN_DATA_FOR_MODAL_WINDOW',\r\n    SET_DATE_FOR_MODAL_WINDOW: 'SET_DATE_FOR_MODAL_WINDOW',\r\n    SET_EXPLANATION_FOR_MODAL_WINDOW: 'SET_EXPLANATION_FOR_MODAL_WINDOW',\r\n\r\n    UPDATE_ITEM_COUNTER_FOR_PRELOADER: 'UPDATE_ITEM_COUNTER_FOR_PRELOADER'\r\n}\r\n\r\nexport default actionsConstants\r\n","import { createAction } from 'redux-act'\r\nimport AC from '@/constants/actionsConstants'\r\nimport { ISetMainImage, ISetTodayData } from '@/types/actions'\r\nimport { IMainImageItem } from '@/types/imageItems'\r\n\r\nexport const setTodayData = createAction<ISetTodayData>(\r\n    AC.SET_TODAY_DATA,\r\n    (data: IMainImageItem) => ({\r\n        date: data.date,\r\n        url: data.url,\r\n        explanation: data.explanation,\r\n        title: data.title,\r\n        mediaType: data.mediaType\r\n    })\r\n)\r\n\r\nexport const setMainImage = createAction<ISetMainImage>(\r\n    AC.CHANGE_MAIN_IMAGE,\r\n    (data: IMainImageItem) => ({\r\n        date: data.date,\r\n        url: data.url,\r\n        explanation: data.explanation,\r\n        title: data.title,\r\n        mediaType: data.mediaType\r\n    })\r\n)\r\n","import { createReducer } from 'redux-act'\r\nimport { ISetMainImage, ISetTodayData } from '@/types/actions'\r\nimport { IMainImageState } from '@/types/state'\r\nimport { setMainImage, setTodayData } from '../actions/mainImageActions'\r\n\r\nconst initialState: IMainImageState = {\r\n    imageData: {\r\n        date: '',\r\n        url: '',\r\n        explanation: '',\r\n        title: '',\r\n        mediaType: ''\r\n    },\r\n    todayData: {\r\n        date: '',\r\n        url: '',\r\n        explanation: '',\r\n        title: '',\r\n        mediaType: ''\r\n    }\r\n}\r\n\r\nconst mainImageReducer = createReducer<IMainImageState>({}, initialState)\r\n\r\nconst setTodayDataReducer = (\r\n    state: IMainImageState, action: ISetTodayData\r\n) => ({\r\n    ...state,\r\n    todayData: {\r\n        date: action.date,\r\n        url: action.url,\r\n        explanation: action.explanation,\r\n        title: action.title,\r\n        mediaType: action.mediaType\r\n    }\r\n})\r\n\r\nconst setMainImageReducer = (\r\n    state: IMainImageState, action: ISetMainImage\r\n) => ({\r\n    ...state,\r\n    imageData: {\r\n        date: action.date,\r\n        url: action.url,\r\n        explanation: action.explanation,\r\n        title: action.title,\r\n        mediaType: action.mediaType\r\n    }\r\n})\r\n\r\nmainImageReducer.on(setTodayData, setTodayDataReducer)\r\nmainImageReducer.on(setMainImage, setMainImageReducer)\r\n\r\n\r\nexport default mainImageReducer\r\n","import { createAction } from 'redux-act'\r\nimport AC from '@/constants/actionsConstants'\r\nimport {\r\n    ILoadImagesToImageCatalog,\r\n    ILoadImagesForOneIterationToImageCatalog,\r\n    IChangeDataIntervalInImageCatalog,\r\n    ICountItemsForOneIteration,\r\n    ILoaderInImageCatalog,\r\n} from '@/types/actions'\r\nimport { IImageCatalogItem } from '@/types/imageItems'\r\n\r\n\r\nexport const loadImagesToImageCatalog = createAction<ILoadImagesToImageCatalog>(\r\n    AC.LOAD_IMAGES_TO_IMAGE_CATALOG,\r\n    (items: IImageCatalogItem[]) => ({\r\n        items\r\n    })\r\n)\r\n\r\nexport const loadImagesForOneIterationToImageCatalog = createAction<ILoadImagesForOneIterationToImageCatalog>(\r\n    AC.LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG,\r\n    (items: IImageCatalogItem[]) => ({\r\n        items\r\n    })\r\n)\r\n\r\nexport const changeDataIntervalInImageCatalog = createAction<IChangeDataIntervalInImageCatalog>(\r\n    AC.CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG,\r\n    (startDateValue: string | null, endDateValue: string | null) => ({\r\n        startDateValue,\r\n        endDateValue\r\n    })\r\n)\r\n\r\nexport const countItemsForOneIteration = createAction<ICountItemsForOneIteration>(\r\n    AC.ITEMS_COUNTER_FOR_ONE_ITERATION,\r\n    (counter: number) => ({\r\n        counter\r\n    })\r\n)\r\n\r\nexport const loaderInImageCatalog = createAction<ILoaderInImageCatalog>(\r\n    AC.LOADER_IN_IMAGE_CATALOG,\r\n    (loader: boolean) => ({\r\n        loader\r\n    })\r\n)\r\n","import { createReducer } from 'redux-act'\r\nimport { IImageCatalogState } from '@/types/state'\r\nimport {\r\n    IChangeDataIntervalInImageCatalog,\r\n    ICountItemsForOneIteration,\r\n    ILoaderInImageCatalog,\r\n    ILoadImagesForOneIterationToImageCatalog,\r\n    ILoadImagesToImageCatalog\r\n} from '@/types/actions';\r\nimport {\r\n    changeDataIntervalInImageCatalog,\r\n    countItemsForOneIteration,\r\n    loaderInImageCatalog,\r\n    loadImagesForOneIterationToImageCatalog,\r\n    loadImagesToImageCatalog\r\n} from '../actions/imageCatalogActions';\r\n\r\n\r\nconst initialState: IImageCatalogState = {\r\n    items: [],\r\n    itemsForOneIteration: [],\r\n    date: {\r\n        startDateValue: null,\r\n        endDateValue: null\r\n    },\r\n    itemsCounterForOneIteration: 0,\r\n    loader: true\r\n}\r\n\r\nconst imageCatalogReducer = createReducer<IImageCatalogState>({}, initialState)\r\n\r\nconst loadImagesToImageCatalogReducer = (\r\n    state: IImageCatalogState, action: ILoadImagesToImageCatalog\r\n) => ({\r\n    ...state,\r\n    items: action.items\r\n})\r\n\r\nconst loadImagesForOneIterationToImageCatalogReducer = (\r\n    state: IImageCatalogState, action: ILoadImagesForOneIterationToImageCatalog\r\n) => ({\r\n    ...state,\r\n    itemsForOneIteration: action.items\r\n})\r\n\r\nconst changeDataIntervalInImageCatalogReducer = (\r\n    state: IImageCatalogState, action: IChangeDataIntervalInImageCatalog\r\n) => ({\r\n    ...state,\r\n    date: {\r\n        startDateValue: action.startDateValue,\r\n        endDateValue: action.endDateValue\r\n    }\r\n})\r\n\r\nconst countItemsForOneIterationReducer = (\r\n    state: IImageCatalogState, action: ICountItemsForOneIteration\r\n) => ({\r\n    ...state,\r\n    itemsCounterForOneIteration: action.counter\r\n})\r\n\r\nconst loaderInImageCatalogReducer = (\r\n    state: IImageCatalogState, action: ILoaderInImageCatalog\r\n) => ({\r\n    ...state,\r\n    loader: action.loader\r\n})\r\n\r\nimageCatalogReducer.on(loadImagesToImageCatalog, loadImagesToImageCatalogReducer)\r\nimageCatalogReducer.on(loadImagesForOneIterationToImageCatalog, loadImagesForOneIterationToImageCatalogReducer)\r\nimageCatalogReducer.on(changeDataIntervalInImageCatalog, changeDataIntervalInImageCatalogReducer)\r\nimageCatalogReducer.on(countItemsForOneIteration, countItemsForOneIterationReducer)\r\nimageCatalogReducer.on(loaderInImageCatalog, loaderInImageCatalogReducer)\r\n\r\n\r\nexport default imageCatalogReducer\r\n","import React from 'react'\r\nimport { createAction } from 'redux-act'\r\nimport AC from '@/constants/actionsConstants'\r\nimport {\r\n    ISetStateForModalWindow,\r\n    ISetTitleForModalWindow,\r\n    ISetMainDataForModalWindow,\r\n    ISetDateForModalWindow,\r\n    ISetExplanationForModalWindow,\r\n} from '@/types/actions'\r\n\r\n\r\nexport const setStateForModalWindow = createAction<ISetStateForModalWindow>(\r\n    AC.SET_STATE_FOR_MODAL_WINDOW,\r\n    (state: boolean) => ({\r\n        state\r\n    })\r\n)\r\n\r\nexport const setTitleForModalWindow = createAction<ISetTitleForModalWindow>(\r\n    AC.SET_TITLE_FOR_MODAL_WINDOW,\r\n    (title: string | null) => ({\r\n        title\r\n    })\r\n)\r\n\r\nexport const setMainDataForModalWindow = createAction<ISetMainDataForModalWindow>(\r\n    AC.SET_MAIN_DATA_FOR_MODAL_WINDOW,\r\n    (mainData: React.ReactNode) => ({\r\n        mainData\r\n    })\r\n)\r\n\r\nexport const setDateForModalWindow = createAction<ISetDateForModalWindow>(\r\n    AC.SET_DATE_FOR_MODAL_WINDOW,\r\n    (date: string | null) => ({\r\n        date\r\n    })\r\n)\r\n\r\nexport const setExplanationForModalWindow = createAction<ISetExplanationForModalWindow>(\r\n    AC.SET_EXPLANATION_FOR_MODAL_WINDOW,\r\n    (explanation: string | null) => ({\r\n        explanation\r\n    })\r\n)\r\n","import { createReducer } from 'redux-act'\r\nimport { IModalWindowState } from '@/types/state'\r\nimport {\r\n    ISetDateForModalWindow,\r\n    ISetExplanationForModalWindow,\r\n    ISetMainDataForModalWindow,\r\n    ISetStateForModalWindow,\r\n    ISetTitleForModalWindow\r\n} from '@/types/actions'\r\nimport {\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow\r\n} from '../actions/modalWindowActions'\r\n\r\n\r\nconst initialState: IModalWindowState = {\r\n    modalWindowState: false,\r\n    modalWindowTitle: null,\r\n    modalWindowMainData: null,\r\n    modalWindowDate: null,\r\n    modalWindowExplanation: null\r\n}\r\n\r\nconst modalWindowReducer = createReducer<IModalWindowState>({}, initialState)\r\n\r\nconst setStateForModalWindowReducer = (\r\n    state: IModalWindowState, action: ISetStateForModalWindow\r\n) => ({\r\n    ...state,\r\n    modalWindowState: action.state\r\n})\r\n\r\nconst setTitleForModalWindowReducer = (\r\n    state: IModalWindowState, action: ISetTitleForModalWindow\r\n) => ({\r\n    ...state,\r\n    modalWindowTitle: action.title\r\n})\r\n\r\nconst setMainDataForModalWindowReducer = (\r\n    state: IModalWindowState, action: ISetMainDataForModalWindow\r\n) => ({\r\n    ...state,\r\n    modalWindowMainData: action.mainData\r\n})\r\n\r\nconst setDateForModalWindowReducer = (\r\n    state: IModalWindowState, action: ISetDateForModalWindow\r\n) => ({\r\n    ...state,\r\n    modalWindowDate: action.date\r\n})\r\n\r\nconst setExplanationForModalWindowReducer = (\r\n    state: IModalWindowState, action: ISetExplanationForModalWindow\r\n) => ({\r\n    ...state,\r\n    modalWindowExplanation: action.explanation\r\n})\r\n\r\nmodalWindowReducer.on(setStateForModalWindow, setStateForModalWindowReducer)\r\nmodalWindowReducer.on(setTitleForModalWindow, setTitleForModalWindowReducer)\r\nmodalWindowReducer.on(setMainDataForModalWindow, setMainDataForModalWindowReducer)\r\nmodalWindowReducer.on(setDateForModalWindow, setDateForModalWindowReducer)\r\nmodalWindowReducer.on(setExplanationForModalWindow, setExplanationForModalWindowReducer)\r\n\r\n\r\nexport default modalWindowReducer\r\n","import { createAction } from 'redux-act'\r\nimport AC from '@/constants/actionsConstants'\r\nimport { IUpdateItemsCounterForPreloader } from '@/types/actions'\r\n\r\nexport const updateItemsCounterForPreloader = createAction<IUpdateItemsCounterForPreloader>(\r\n    AC.UPDATE_ITEM_COUNTER_FOR_PRELOADER,\r\n    (counter: number) => ({\r\n        counter\r\n    })\r\n)\r\n\r\n// export const updateItemsCounterForPreloader = (counter: number): PreloaderTypes => ({\r\n//     type: AC.UPDATE_ITEM_COUNTER_FOR_PRELOADER,\r\n//     counter\r\n// })\r\n","import { createReducer } from 'redux-act'\r\nimport { IPreloaderState } from '@/types/state'\r\nimport { updateItemsCounterForPreloader } from '../actions/preloaderActions'\r\nimport { IUpdateItemsCounterForPreloader } from '@/types/actions'\r\n\r\nconst initialState: IPreloaderState = {\r\n    itemsCounterForPreloader: 0\r\n}\r\n\r\nconst preloaderReducer = createReducer<IPreloaderState>({}, initialState)\r\n\r\nconst updateItemsCounterForPreloaderReducer = (\r\n    state: IPreloaderState, action: IUpdateItemsCounterForPreloader\r\n) => ({\r\n    ...state,\r\n    itemsCounterForPreloader: action.counter\r\n})\r\n\r\npreloaderReducer.on(updateItemsCounterForPreloader, updateItemsCounterForPreloaderReducer)\r\n\r\n\r\nexport default preloaderReducer\r\n","import { combineReducers } from 'redux'\r\nimport mainImage from './mainImageReducer'\r\nimport imageCatalog from './imageCatalogReducer'\r\nimport modalWindow from './modalWindowReducer'\r\nimport preloader from './preloaderReducer'\r\n\r\nexport default combineReducers({\r\n    mainImage,\r\n    imageCatalog,\r\n    modalWindow,\r\n    preloader\r\n})\r\n","import { createStore } from 'redux'\r\nimport reducer from './reducers/index'\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store\r\n","const appConstants = {\r\n    NASA_QUERY: 'https://api.nasa.gov/planetary/apod',\r\n    NASA_API_KEY: '3zbRNQCuSrdOsHV2LsGKVGzEPuecszavgkAo7mYo',\r\n    NASA_API_KEY_STRING: 'api_key',\r\n    NASA_TARGET_DATE_STRING: 'date',\r\n    NASA_START_DATE_STRING: 'start_date',\r\n    NASA_END_DATE_STRING: 'end_date',\r\n    MEDIA_TYPE_IMAGE: 'image',\r\n    MEDIA_TYPE_VIDEO: 'video',\r\n    TODAY: 'today',\r\n    LOCAL_STORAGE_KEY: 'all-data',\r\n    ITEMS_ON_PAGE: 24,\r\n\r\n    MAIN_IMAGE_ATTRIBUTE: 'main-image',\r\n\r\n    CLASS_FOR_LOADED_ELEMENTS: 'loading',\r\n    ITEMS_ON_PAGE_WITH_FIRST_ITERATION: 25\r\n}\r\n\r\nexport default appConstants\r\n","import C from '@/constants/appConstants'\r\n\r\nconst checkTodayDate = (date) => {\r\n    if (date === C.TODAY) return true\r\n    else return false\r\n}\r\n\r\nexport default checkTodayDate\r\n","const checkImageInCache = (src) => {\r\n    const image = new Image()\r\n    image.src = src\r\n\r\n    return image.complete\r\n}\r\n\r\nexport default checkImageInCache\r\n","import C from '@/constants/appConstants'\r\n\r\nconst removeParentClass = (element) => {\r\n    element\r\n        .closest(`.${C.CLASS_FOR_LOADED_ELEMENTS}`)\r\n        .classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n}\r\n\r\nexport default removeParentClass\r\n","import { createContext } from 'react'\r\n\r\nexport const MainImageDataContext = createContext();\r\n","import React, { useEffect, useContext, useRef } from 'react'\r\nimport C from '@/constants/appConstants'\r\nimport checkTodayDate from '@/helpers/checkTodayDate'\r\nimport checkImageInCache from '@/helpers/checkImageInCache'\r\nimport removeParentClass from '@/helpers/removeParentClass'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport './ImageBlock.scss'\r\n\r\nconst ImageBlock = ({\r\n    modalWindowShowed,\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow,\r\n    mainImage,\r\n    todayImage,\r\n    itemsFromImageCatalog,\r\n    itemsCounterForPreloader,\r\n    updateItemsCounterForPreloader\r\n}) => {\r\n    const data = useContext(MainImageDataContext)\r\n    const imageWrap = useRef()\r\n\r\n    useEffect(() => {\r\n        if (checkImageInCache(data.url)) {\r\n            imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        } else {\r\n            imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        }\r\n        return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n    }, [data.url])\r\n\r\n    const imgCreator = (imgLink) => (\r\n        <a href={imgLink} target='_blank' className={C.CLASS_FOR_LOADED_ELEMENTS}>\r\n            <img\r\n                className='modal-window__main-data'\r\n                src={imgLink}\r\n                onLoad={(e) => removeParentClass(e.target)}\r\n            />\r\n        </a>\r\n    )\r\n\r\n    const changeStateForModalWindow = (attribute) => {\r\n        switch (attribute) {\r\n            case C.MAIN_IMAGE_ATTRIBUTE:\r\n                if (checkTodayDate(mainImage.date)) {\r\n                    setTitleForModalWindow(todayImage.title)\r\n                    setMainDataForModalWindow(imgCreator(todayImage.url))\r\n                    setExplanationForModalWindow(todayImage.explanation)\r\n                    setDateForModalWindow(todayImage.date)\r\n                } else {\r\n                    setTitleForModalWindow(mainImage.title)\r\n                    setMainDataForModalWindow(imgCreator(mainImage.url))\r\n                    setExplanationForModalWindow(mainImage.explanation)\r\n                    setDateForModalWindow(mainImage.date)\r\n                }\r\n                break\r\n\r\n            default:\r\n                const targetItem = itemsFromImageCatalog[attribute]\r\n                setTitleForModalWindow(targetItem.title)\r\n                setMainDataForModalWindow(imgCreator(targetItem.hdurl))\r\n                setExplanationForModalWindow(targetItem.explanation)\r\n                setDateForModalWindow(targetItem.date)\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeModalWindow = () => {\r\n        if (!modalWindowShowed) {\r\n            changeStateForModalWindow(data.itemCounter)\r\n            setStateForModalWindow(true)\r\n        }\r\n    }\r\n\r\n    const imageLoaded = () => {\r\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        updateItemsCounterForPreloader(++itemsCounterForPreloader)\r\n    }\r\n\r\n    return (\r\n        <div\r\n            className={`${data.className}-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\r\n            ref={imageWrap}\r\n        >\r\n            <img\r\n                src={data.url}\r\n                className={data.className}\r\n                data-item-counter={data.itemCounter}\r\n                onClick={() => changeModalWindow()}\r\n                onLoad={() => imageLoaded()}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageBlock\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow\r\n} from '@/store/actions/modalWindowActions'\r\nimport { updateItemsCounterForPreloader } from '@/store/actions/preloaderActions'\r\nimport ImageBlock from './ImageBlock'\r\n\r\nconst ImageBlockContainer = (props) => {\r\n    return <ImageBlock {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    modalWindowShowed: state.modalWindow.modalWindowState,\r\n    mainImage: state.mainImage.imageData,\r\n    todayImage: state.mainImage.todayData,\r\n    itemsFromImageCatalog: state.imageCatalog.items,\r\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStateForModalWindow(state) {\r\n        dispatch(setStateForModalWindow(state))\r\n    },\r\n\r\n    setTitleForModalWindow(title) {\r\n        dispatch(setTitleForModalWindow(title))\r\n    },\r\n\r\n    setMainDataForModalWindow(mainData) {\r\n        dispatch(setMainDataForModalWindow(mainData))\r\n    },\r\n\r\n    setDateForModalWindow(date) {\r\n        dispatch(setDateForModalWindow(date))\r\n    },\r\n\r\n    setExplanationForModalWindow(explanation) {\r\n        dispatch(setExplanationForModalWindow(explanation))\r\n    },\r\n    updateItemsCounterForPreloader(data) {\r\n        dispatch(updateItemsCounterForPreloader(data))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageBlockContainer)\r\n","import React from 'react'\r\nimport './ErrorComponent.scss'\r\n\r\nconst ErrorComponent = () => {\r\n    return (\r\n        <div className='error-component'>\r\n            <p>No data</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorComponent\r\n","const thumbnailFromVideoConstants = {\r\n    YOUTUBE_BIG_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`),\r\n    YOUTUBE_MEDIUM_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/sddefault.jpg`),\r\n    YOUTUBE_SMALL_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/hqdefault.jpg`),\r\n    // if we want get thumbnail and youtube respons error\r\n    // we get default thumbnail with this sizes\r\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH: 120,\r\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT: 90,\r\n\r\n    VIMEO_GET_THUMBNAIL_ID: (vimeoVideoId) => (`https://vimeo.com/api/oembed.json?url=https://vimeo.com/${vimeoVideoId}`),\r\n    VIMEO_GET_THUMBNAIL: (imageId) => (`https://i.vimeocdn.com/video/${imageId}.jpg`)\r\n}\r\n\r\nexport default thumbnailFromVideoConstants\r\n","import React, { useState, useEffect, useContext, useRef } from 'react'\r\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport checkImageInCache from '@/helpers/checkImageInCache'\r\nimport checkTodayDate from '@/helpers/checkTodayDate'\r\nimport removeParentClass from '@/helpers/removeParentClass'\r\nimport C from '@/constants/appConstants'\r\nimport TC from '@/constants/thumbnailFromVideoConstants'\r\nimport './VideoBlock.scss'\r\n\r\nconst VideoBlock = ({\r\n    modalWindowShowed,\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow,\r\n    mainImage,\r\n    todayImage,\r\n    itemsFromImageCatalog,\r\n    itemsCounterForPreloader,\r\n    updateItemsCounterForPreloader\r\n}) => {\r\n    const data = useContext(MainImageDataContext)\r\n    const imageWrap = useRef()\r\n\r\n    const regExpVimeo = /(http|https)?:\\/\\/(www\\.)?(vimeo.com\\/|player.vimeo.com\\/video\\/)([0-9]+)/g\r\n    const regExpYoutube = /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/g\r\n\r\n    const [videoThumbnail, setVideoThumbnail] = useState()\r\n    const [stateErrorComponent, setStateErrorComponent] = useState(false)\r\n\r\n    useEffect(() => {\r\n        renderVideo()\r\n    }, [mainImage])\r\n\r\n    useEffect(() => {\r\n        if (videoThumbnail) {\r\n            if (checkImageInCache(videoThumbnail)) {\r\n                imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n            } else {\r\n                imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\r\n            }\r\n        }\r\n        return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n    }, [videoThumbnail])\r\n\r\n    const iframeCreator = (iframeLink) => (\r\n        <div className={`modal-window__iframe-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}>\r\n            <iframe\r\n                className='modal-window__main-data modal-window__main-data_video'\r\n                src={iframeLink}\r\n                onLoad={(e) => removeParentClass(e.target)}\r\n            />\r\n        </div>\r\n    )\r\n\r\n    const renderVideo = () => {\r\n        if (data.url.match(regExpYoutube)) {\r\n            const youtubeVideoId = data.url.match(/youtube\\.com.*(\\?v=|\\/embed\\/)(.{11})/).pop()\r\n            getThumbnailFromYoutubeVideo(youtubeVideoId)\r\n        } else if (data.url.match(regExpVimeo)) {\r\n            const vimeoVideoId = data.url.match(/vimeo.*\\/(\\d+)/i).pop()\r\n            getThumbnailFromVimeoVideo(vimeoVideoId)\r\n        } else {\r\n            setStateErrorComponent(true)\r\n        }\r\n    }\r\n\r\n    const checkImagesWidth = (width, height) => {\r\n        if (\r\n            width !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH\r\n            && height !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT\r\n        ) {\r\n            return true\r\n        } else {\r\n            return false\r\n        }\r\n    }\r\n\r\n    const getThumbnailFromYoutubeVideo = (videoId) => {\r\n        const drawImageActualSize = () => {\r\n            if (checkImagesWidth(\r\n                bigThumbnail.naturalWidth,\r\n                bigThumbnail.naturalHeight\r\n            )) {\r\n                setVideoThumbnail(bigThumbnail.src)\r\n            } else {\r\n                setStateErrorComponent(true)\r\n            }\r\n        }\r\n\r\n        const bigThumbnail = new Image()\r\n\r\n        switch (data.itemCounter) {\r\n            case C.MAIN_IMAGE_ATTRIBUTE:\r\n                new Promise((resolve) => {\r\n                    bigThumbnail.src = TC.YOUTUBE_BIG_THUMBNAIL(videoId)\r\n                    bigThumbnail.onload = () => {\r\n                        if (checkImagesWidth(\r\n                            bigThumbnail.naturalWidth,\r\n                            bigThumbnail.naturalHeight\r\n                        )) {\r\n                            setVideoThumbnail(bigThumbnail.src)\r\n                        } else {\r\n                            resolve()\r\n                        }\r\n                    }\r\n                }).then(() => {\r\n                    return new Promise((resolve) => {\r\n                        bigThumbnail.src = TC.YOUTUBE_MEDIUM_THUMBNAIL(videoId)\r\n                        bigThumbnail.onload = () => {\r\n                            if (checkImagesWidth(\r\n                                bigThumbnail.naturalWidth,\r\n                                bigThumbnail.naturalHeight\r\n                            )) {\r\n                                setVideoThumbnail(bigThumbnail.src)\r\n                            } else {\r\n                                resolve()\r\n                            }\r\n                        }\r\n                    }).then(() => {\r\n                        bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\r\n                        bigThumbnail.onload = () => {\r\n                            if (checkImagesWidth(\r\n                                bigThumbnail.naturalWidth,\r\n                                bigThumbnail.naturalHeight\r\n                            )) {\r\n                                setVideoThumbnail(bigThumbnail.src)\r\n                            } else {\r\n                                setStateErrorComponent(true)\r\n                            }\r\n                        }\r\n                    })\r\n                })\r\n                break\r\n\r\n            default:\r\n                bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\r\n                bigThumbnail.onload = drawImageActualSize\r\n                break\r\n        }\r\n    }\r\n\r\n    const getThumbnailFromVimeoVideo = async (vimeoVideoId) => {\r\n        await fetch(TC.VIMEO_GET_THUMBNAIL_ID(vimeoVideoId))\r\n            .then(res => res.json())\r\n            .then(res => res.thumbnail_url.match(/vimeo.*\\/(\\d+)/i).pop())\r\n            .then(res => setVideoThumbnail(TC.VIMEO_GET_THUMBNAIL(res)))\r\n    }\r\n\r\n    const changeStateForModalWindow = (attribute) => {\r\n        switch (attribute) {\r\n            case C.MAIN_IMAGE_ATTRIBUTE:\r\n                if (checkTodayDate(mainImage.date)) {\r\n                    setTitleForModalWindow(todayImage.title)\r\n                    setMainDataForModalWindow(iframeCreator(todayImage.url))\r\n                    setExplanationForModalWindow(todayImage.explanation)\r\n                    setDateForModalWindow(todayImage.date)\r\n                } else {\r\n                    setTitleForModalWindow(mainImage.title)\r\n                    setMainDataForModalWindow(iframeCreator(mainImage.url))\r\n                    setExplanationForModalWindow(mainImage.explanation)\r\n                    setDateForModalWindow(mainImage.date)\r\n                }\r\n                break\r\n\r\n            default:\r\n                const targetItem = itemsFromImageCatalog[String(attribute)]\r\n                setTitleForModalWindow(targetItem.title)\r\n                setMainDataForModalWindow(iframeCreator(targetItem.url))\r\n                setExplanationForModalWindow(targetItem.explanation)\r\n                setDateForModalWindow(targetItem.date)\r\n                break\r\n        }\r\n    }\r\n\r\n    const changeModalWindow = () => {\r\n        if (!modalWindowShowed) {\r\n            changeStateForModalWindow(data.itemCounter)\r\n            setStateForModalWindow(true)\r\n        }\r\n    }\r\n\r\n    const imageLoaded = () => {\r\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\r\n        updateItemsCounterForPreloader(++itemsCounterForPreloader)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                stateErrorComponent\r\n                    ? <ErrorComponent />\r\n                    : <div\r\n                        className={`${data.className}_video-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\r\n                        ref={imageWrap}\r\n                    >\r\n                        <img\r\n                            className={`${data.className} ${data.className}_video`}\r\n                            data-item-counter={data.itemCounter}\r\n                            onClick={() => changeModalWindow()}\r\n                            src={videoThumbnail}\r\n                            onLoad={() => imageLoaded()}\r\n                        />\r\n                    </div>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default VideoBlock\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    setStateForModalWindow,\r\n    setTitleForModalWindow,\r\n    setMainDataForModalWindow,\r\n    setDateForModalWindow,\r\n    setExplanationForModalWindow\r\n} from '@/store/actions/modalWindowActions'\r\nimport { updateItemsCounterForPreloader } from '@/store/actions/preloaderActions'\r\nimport VideoBlock from './VideoBlock'\r\n\r\nconst VideoBlockContainer = (props) => {\r\n    return <VideoBlock {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    modalWindowShowed: state.modalWindow.modalWindowState,\r\n    mainImage: state.mainImage.imageData,\r\n    todayImage: state.mainImage.todayData,\r\n    itemsFromImageCatalog: state.imageCatalog.items,\r\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStateForModalWindow(state) {\r\n        dispatch(setStateForModalWindow(state))\r\n    },\r\n\r\n    setTitleForModalWindow(title) {\r\n        dispatch(setTitleForModalWindow(title))\r\n    },\r\n\r\n    setMainDataForModalWindow(mainData) {\r\n        dispatch(setMainDataForModalWindow(mainData))\r\n    },\r\n\r\n    setDateForModalWindow(date) {\r\n        dispatch(setDateForModalWindow(date))\r\n    },\r\n\r\n    setExplanationForModalWindow(explanation) {\r\n        dispatch(setExplanationForModalWindow(explanation))\r\n    },\r\n    updateItemsCounterForPreloader(data) {\r\n        dispatch(updateItemsCounterForPreloader(data))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(VideoBlockContainer)\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport ImageBlockContainer from '../ImageBlock/ImageBlockContainer'\r\nimport VideoBlockContainer from './../VideoBlock/VideoBlockContainer'\r\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\r\nimport C from '@/constants/appConstants'\r\n\r\nconst RenderingContentDependingOnTheType = ({ mediaType }) => {\r\n    switch (mediaType) {\r\n        case C.MEDIA_TYPE_IMAGE:\r\n            return <ImageBlockContainer />\r\n\r\n        case C.MEDIA_TYPE_VIDEO:\r\n            return <VideoBlockContainer />\r\n\r\n        default:\r\n            return <ErrorComponent />\r\n    }\r\n}\r\n\r\nRenderingContentDependingOnTheType.propTypes = {\r\n    mediaType: PropTypes.string\r\n}\r\n\r\nexport default RenderingContentDependingOnTheType\r\n","import React from 'react'\r\nimport './ApplicationError.scss'\r\n\r\nconst ApplicationError = () => {\r\n    document.body.style.overflow = 'hidden'\r\n\r\n    return (\r\n        <section className='application-error'>\r\n            <div className='application-error__items-wrap'>\r\n                <h2 className='application-error__header'>Some troubles</h2>\r\n                <h2 className='application-error__header'>Please, try again later</h2>\r\n                <button\r\n                    className='application-error__reload-button'\r\n                    onClick={() => window.location.reload()}\r\n                >\r\n                    Reload page\r\n                </button>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ApplicationError\r\n","export const writeToLocalStorage = (key, value) => {\r\n    localStorage.setItem(key, value);\r\n}\r\n\r\nexport const readFromLocalStorage = (key) => {\r\n    return localStorage.getItem(key);\r\n}\r\n","import C from '@/constants/appConstants'\r\n\r\nconst queryString = (date = '', startDate = '', endDate = '') => {\r\n    const keyString = `${C.NASA_API_KEY_STRING}=${C.NASA_API_KEY}`\r\n    const dateString = date ? `&${C.NASA_TARGET_DATE_STRING}=${date}` : ''\r\n    const startEndDate = startDate && endDate\r\n        ? `&${C.NASA_START_DATE_STRING}=${startDate}&${C.NASA_END_DATE_STRING}=${endDate}`\r\n        : ''\r\n\r\n    return (\r\n        `${C.NASA_QUERY}?${keyString}${dateString}${startEndDate}`\r\n    )\r\n}\r\n\r\nexport default queryString\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\r\nimport ApplicationError from './../ApplicationError/ApplicationError'\r\nimport { writeToLocalStorage, readFromLocalStorage } from '@/helpers/workWithLocalStorage'\r\nimport queryString from '@/helpers/queryString'\r\nimport C from '@/constants/appConstants'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport checkTodayDate from '@/helpers/checkTodayDate'\r\nimport './MainImage.scss'\r\n\r\nconst MainImage = ({\r\n    mainImage,\r\n    imageData,\r\n    changeImage,\r\n    todayData,\r\n    setTodayData\r\n}) => {\r\n    const dataFromLocalStorage = JSON.parse(readFromLocalStorage(C.LOCAL_STORAGE_KEY))\r\n\r\n    const input = useRef();\r\n    const [errorComponent, setStateErrorComponent] = useState(false)\r\n\r\n    useEffect(() => {\r\n        ajaxQuery()\r\n        input.current.addEventListener('change', setNewDate)\r\n\r\n        return () => input.current.removeEventListener('change', setNewDate)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (!todayData.date) return\r\n\r\n        if (todayData.date && !imageData.date) {\r\n            if (readFromLocalStorage(C.LOCAL_STORAGE_KEY)) {\r\n                if (dataFromLocalStorage\r\n                    && Object.keys(dataFromLocalStorage).length\r\n                    && dataFromLocalStorage.imageData.date\r\n                ) {\r\n                    changeImage(dataFromLocalStorage.imageData)\r\n                } else {\r\n                    changeImage(todayData)\r\n                }\r\n            } else {\r\n                changeImage(todayData)\r\n            }\r\n        }\r\n\r\n        if (imageData.date === todayData.date) changeImage({ ...todayData, date: C.TODAY })\r\n\r\n        writeToLocalStorage(C.LOCAL_STORAGE_KEY, JSON.stringify({ ...mainImage }))\r\n    }, [mainImage])\r\n\r\n    const ajaxQuery = async (selectedDate = '') => {\r\n        try {\r\n            const nasaQuery = await fetch(queryString(selectedDate))\r\n            if (!nasaQuery.ok) throw new Error('Some internal error')\r\n\r\n            const nasaParse = await nasaQuery.json()\r\n\r\n            const date = nasaParse.date\r\n            const mediaType = nasaParse.media_type\r\n            const url = mediaType === C.MEDIA_TYPE_IMAGE ? nasaParse.hdurl : nasaParse.url\r\n            const explanation = nasaParse.explanation\r\n            const title = nasaParse.title\r\n            const targetObj = { date, url, explanation, title, mediaType }\r\n\r\n            if (selectedDate) {\r\n                changeImage(targetObj)\r\n            } else {\r\n                setTodayData(targetObj)\r\n            }\r\n        } catch (error) {\r\n            console.log('Error: ', error)\r\n\r\n            setStateErrorComponent(true)\r\n\r\n            const targetObj = {\r\n                date: selectedDate,\r\n                url: null,\r\n                explanation: null,\r\n                title: null,\r\n                mediaType: null\r\n            }\r\n\r\n            if (selectedDate) {\r\n                changeImage(targetObj)\r\n            } else {\r\n                setTodayData(targetObj)\r\n            }\r\n        }\r\n    }\r\n\r\n    const setNewDate = (e) => {\r\n        const value = e.target.value\r\n        ajaxQuery(value)\r\n    }\r\n\r\n    const contextObj = {\r\n        className: 'main-image__image',\r\n        url: checkTodayDate(imageData.date) ? todayData.url : imageData.url,\r\n        // itemCounter used for get data from state and set to ModalWindow\r\n        itemCounter: C.MAIN_IMAGE_ATTRIBUTE\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {errorComponent && <ApplicationError />}\r\n\r\n            <section className='main-image'>\r\n                <MainImageDataContext.Provider value={contextObj}>\r\n                    <RenderingContentDependingOnTheType\r\n                        mediaType={checkTodayDate(imageData.date) ? todayData.mediaType : imageData.mediaType}\r\n                    />\r\n                </MainImageDataContext.Provider>\r\n\r\n                <h1 className='main-image__title'>NASA. APOD: Astronomy Picture of the Day</h1>\r\n\r\n                <input\r\n                    className='main-image__input'\r\n                    type=\"date\"\r\n                    max={todayData.date}\r\n                    value={checkTodayDate(imageData.date) ? todayData.date : (imageData.date || '')}\r\n                    ref={input}\r\n                    onChange={() => changeImage({ ...imageData, date: input.current.value })}\r\n                />\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MainImage\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setTodayData, setMainImage } from '@/store/actions/mainImageActions'\r\nimport MainImage from './MainImage'\r\n\r\nconst MainImageContainer = (props) => {\r\n    return <MainImage {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    mainImage: state.mainImage,\r\n    imageData: state.mainImage.imageData,\r\n    todayData: state.mainImage.todayData\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setTodayData(data) {\r\n        dispatch(setTodayData(data))\r\n    },\r\n    changeImage(data) {\r\n        dispatch(setMainImage(data))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(MainImageContainer)\r\n","import React from 'react'\r\nimport './loaders.scss'\r\n\r\nexport const LoaderActive = () => {\r\n    return (\r\n        <div className='loader-active'>\r\n            <div className='loader-active__ellips' />\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const LoaderEmpty = () => {\r\n    return (\r\n        <div className='loader-empty'>\r\n            <div className='loader-empty__ellips' />\r\n            <p>Loading...</p>\r\n        </div>\r\n    )\r\n}\r\n","const convertDateObjectToString = (date = new Date()) => {\r\n    const monthIncrement = date.getMonth() + 1\r\n    const month = monthIncrement < 10 ? `0${monthIncrement}` : monthIncrement\r\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\r\n    \r\n    return `${date.getFullYear()}-${month}-${day}`\r\n}\r\n\r\nexport default convertDateObjectToString\r\n","import React, { useState, useEffect } from 'react'\r\nimport InfiniteScroll from '@alexcambose/react-infinite-scroll';\r\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\r\nimport { LoaderActive, LoaderEmpty } from './../loaders/loaders'\r\nimport ApplicationError from './../ApplicationError/ApplicationError'\r\nimport queryString from '@/helpers/queryString'\r\nimport convertDateObjectToString from '@/helpers/convertDateObjectToString'\r\nimport { MainImageDataContext } from '@/helpers/context'\r\nimport C from '@/constants/appConstants'\r\nimport './ImageCatalog.scss'\r\n\r\nconst ImageCatalog = ({\r\n    imagesArray,\r\n    loadImages,\r\n    imagesArrayForOneIteration,\r\n    loadImagesToOneIteration,\r\n    dataInterval,\r\n    changeDataInterval,\r\n    itemsCounterForOneIteration,\r\n    countItemsForOneIteration,\r\n    loader,\r\n    changeLoader,\r\n    todayDate\r\n}) => {\r\n    let startDate, endDate\r\n\r\n    const [errorComponent, setStateErrorComponent] = useState(false)\r\n\r\n    useEffect(() => {\r\n        // if we have less them 24 items\r\n        if (itemsCounterForOneIteration < C.ITEMS_ON_PAGE && itemsCounterForOneIteration !== 0) {\r\n            startDate = new Date(dataInterval.startDateValue)\r\n            endDate = new Date(dataInterval.startDateValue)\r\n\r\n            endDate.setDate(endDate.getDate() - 1)\r\n            startDate.setDate(startDate.getDate() - (C.ITEMS_ON_PAGE - itemsCounterForOneIteration))\r\n\r\n            ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate), itemsCounterForOneIteration)\r\n\r\n            changeDataInterval(startDate, endDate)\r\n        }\r\n    }, [itemsCounterForOneIteration])\r\n\r\n    useEffect(() => {\r\n        if (!imagesArray.length) return\r\n        changeLoader(false)\r\n    }, [imagesArray])\r\n\r\n    useEffect(() => {\r\n        // fix bug. sometimes load second iteration instead of first\r\n        loadImages([...imagesArray, ...imagesArrayForOneIteration])\r\n    }, [imagesArrayForOneIteration])\r\n\r\n    useEffect(() => {\r\n        if (!todayDate) return\r\n\r\n        // first load images\r\n        startDate = new Date()\r\n        startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\r\n        endDate = new Date(todayDate)\r\n        endDate.setDate(endDate.getDate() - 1)\r\n\r\n        ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\r\n        changeDataInterval(startDate, endDate)\r\n    }, [todayDate])\r\n\r\n    const ajaxQuery = async (startDate, endDate, itemsCounter = 0) => {\r\n        try {\r\n            const nasaQuery = await fetch(queryString(null, startDate, endDate))\r\n            const nasaParse = await nasaQuery.json()\r\n\r\n            loadImagesToOneIteration([...nasaParse.reverse()])\r\n            countItemsForOneIteration(nasaParse.length + itemsCounter)\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n            setStateErrorComponent(true)\r\n        }\r\n    }\r\n\r\n    const checkScrollScreen = () => {\r\n        changeLoader(true)\r\n\r\n        if (dataInterval.startDateValue && dataInterval.endDateValue) {\r\n            // next load images\r\n            startDate = new Date(dataInterval.startDateValue)\r\n            endDate = new Date(dataInterval.startDateValue)\r\n            endDate.setDate(endDate.getDate() - 1)\r\n            startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\r\n\r\n            ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\r\n            changeDataInterval(startDate, endDate)\r\n        }\r\n    };\r\n\r\n    const contextObj = (item, counter) => ({\r\n        className: 'image-catalog__image',\r\n        url: item.url,\r\n        // itemCounter used for get data from state and set to ModalWindow\r\n        itemCounter: counter\r\n    })\r\n\r\n    return (\r\n        <>\r\n            {errorComponent && <ApplicationError />}\r\n\r\n            <section className='image-catalog'>\r\n                <InfiniteScroll\r\n                    hasMore={true}\r\n                    loadMore={checkScrollScreen}\r\n                >\r\n                    <ul className='image-catalog__wrap'>\r\n                        {imagesArray.map((item, counter) => (\r\n                            <li key={item.date}>\r\n                                <MainImageDataContext.Provider\r\n                                    value={contextObj(item, counter)}\r\n                                >\r\n                                    <RenderingContentDependingOnTheType\r\n                                        mediaType={item.media_type}\r\n                                    />\r\n                                </MainImageDataContext.Provider>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    {loader ? <LoaderActive /> : <LoaderEmpty />}\r\n                </InfiniteScroll>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageCatalog\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n    loadImagesToImageCatalog,\r\n    loadImagesForOneIterationToImageCatalog,\r\n    changeDataIntervalInImageCatalog,\r\n    countItemsForOneIteration,\r\n    loaderInImageCatalog\r\n} from '@/store/actions/imageCatalogActions'\r\nimport ImageCatalog from './ImageCatalog'\r\n\r\nconst ImageCatalogContainer = (props) => {\r\n    return <ImageCatalog {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    imagesArray: state.imageCatalog.items,\r\n    imagesArrayForOneIteration: state.imageCatalog.itemsForOneIteration,\r\n    dataInterval: state.imageCatalog.date,\r\n    itemsCounterForOneIteration: state.imageCatalog.itemsCounterForOneIteration,\r\n    loader: state.imageCatalog.loader,\r\n    todayDate: state.mainImage.todayData.date\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    loadImages(items) {\r\n        dispatch(loadImagesToImageCatalog(items))\r\n    },\r\n    loadImagesToOneIteration(items) {\r\n        dispatch(loadImagesForOneIterationToImageCatalog(items))\r\n    },\r\n    changeDataInterval(startDate, endDate) {\r\n        dispatch(changeDataIntervalInImageCatalog(startDate, endDate))\r\n    },\r\n    countItemsForOneIteration(items) {\r\n        dispatch(countItemsForOneIteration(items))\r\n    },\r\n    changeLoader(loaderShow) {\r\n        dispatch(loaderInImageCatalog(loaderShow))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ImageCatalogContainer)\r\n","const convertStringDateToObject = (date) => (\r\n    date.match(/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/).groups\r\n)\r\n\r\nexport default convertStringDateToObject\r\n","import React from 'react'\r\nimport { Modal } from 'react-bootstrap'\r\nimport convertStringDateToObject from '@/helpers/convertStringDateToObject'\r\nimport './ModalWindow.scss'\r\n\r\nconst ModalWindow = ({\r\n    modalWindowShowed,\r\n    setStateForModalWindow,\r\n    modalWindowTitle,\r\n    modalWindowMainData,\r\n    modalWindowDate,\r\n    modalWindowExplanation\r\n}) => {\r\n    const dateObject = modalWindowDate\r\n        ? convertStringDateToObject(modalWindowDate)\r\n        : { day: '', month: '', year: '' }\r\n\r\n    return (\r\n        <Modal\r\n            dialogClassName='modal-window'\r\n            show={modalWindowShowed}\r\n            onHide={() => setStateForModalWindow(false)}\r\n            animation={false}\r\n        >\r\n            <Modal.Header className='modal-window__header' closeButton>\r\n                <Modal.Title>\r\n                    <h2 className='modal-window__title'>{modalWindowTitle}</h2>\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body className='modal-window__body'>\r\n                {modalWindowMainData}\r\n                <p>{modalWindowExplanation}</p>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <p>{`${dateObject.day}.${dateObject.month}.${dateObject.year}`}</p>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default ModalWindow\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setStateForModalWindow } from '@/store/actions/modalWindowActions'\r\nimport ModalWindow from './ModalWindow'\r\n\r\nconst ModalWindowContainer = (props) => {\r\n    return <ModalWindow {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    modalWindowShowed: state.modalWindow.modalWindowState,\r\n    modalWindowTitle: state.modalWindow.modalWindowTitle,\r\n    modalWindowMainData: state.modalWindow.modalWindowMainData,\r\n    modalWindowDate: state.modalWindow.modalWindowDate,\r\n    modalWindowExplanation: state.modalWindow.modalWindowExplanation\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    setStateForModalWindow(state) {\r\n        dispatch(setStateForModalWindow(state))\r\n    }\r\n})\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(ModalWindowContainer)\r\n","import React from 'react'\r\nimport './Preloader.scss'\r\n\r\nconst Preloader = ({ className }) => {\r\n    return (\r\n        <section className={`preloader ${className}`}>\r\n            <div className='preloader__content'>\r\n                <div className='loader-circle'></div>\r\n                <div className='loader-line-mask'>\r\n                    <div className='loader-line'></div>\r\n                </div>\r\n                <p className='preloader__text'>NASA</p>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n","import { useEffect } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport MainImageContainer from './components/MainImage/MainImageContainer'\r\nimport ImageCatalogContainer from './components/ImageCatalog/ImageCatalogContainer'\r\nimport ModalWindowContainer from './components/ModalWindow/ModalWindowContainer'\r\nimport Preloader from './components/Preloader/Preloader'\r\nimport C from '@/constants/appConstants'\r\nimport { IAppState } from './types/state'\r\n\r\nconst App = () => {\r\n  const itemsCounterForPreloader: number = useSelector((state: IAppState) =>\r\n    state.preloader.itemsCounterForPreloader)\r\n\r\n  // if user reload page (like f5) he may not be at the top of the page\r\n  useEffect(() => {\r\n    // 10 - this random number (not more all items in first iteration, 25)\r\n    // it helps to delay the user's movement to the top of the page\r\n    // necessary for the user to move after the browser event fires\r\n    // (moving the user to the place where he reloaded the page)\r\n    itemsCounterForPreloader === 10 && window.scroll(0, 0)\r\n  }, [itemsCounterForPreloader])\r\n\r\n  itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\r\n    ? document.body.style.overflow = 'hidden'\r\n    : document.body.removeAttribute('style')\r\n\r\n  return (\r\n    <>\r\n      <Preloader className={\r\n        itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\r\n          ? ''\r\n          : 'hide'\r\n      } />\r\n      <MainImageContainer />\r\n      <ImageCatalogContainer />\r\n      <ModalWindowContainer />\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport App from './App'\r\nimport '@/assets/styles/main.scss'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}