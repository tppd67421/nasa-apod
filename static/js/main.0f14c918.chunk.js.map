{"version":3,"sources":["reportWebVitals.ts","constants/actionsConstants.js","store/actions/mainImageActions.ts","store/reducers/mainImageReducer.ts","store/actions/imageCatalogActions.ts","store/reducers/imageCatalogReducer.ts","store/actions/modalWindowActions.ts","store/reducers/modalWindowReducer.ts","store/actions/preloaderActions.ts","store/reducers/preloaderReducer.ts","store/reducers/index.ts","store/store.ts","constants/appConstants.js","helpers/checkTodayDate.js","helpers/checkImageInCache.js","helpers/removeParentClass.js","helpers/context.js","components/ImageBlock/ImageBlock.js","components/ImageBlock/ImageBlockContainer.js","components/ErrorComponent/ErrorComponent.js","constants/thumbnailFromVideoConstants.js","components/VideoBlock/VideoBlock.js","components/VideoBlock/VideoBlockContainer.js","components/RenderingContentDependingOnTheType/RenderingContentDependingOnTheType.js","components/ApplicationError/ApplicationError.js","helpers/workWithLocalStorage.js","helpers/queryString.js","components/MainImage/MainImage.js","components/MainImage/MainImageContainer.js","components/loaders/loaders.js","helpers/convertDateObjectToString.js","components/ImageCatalog/ImageCatalog.js","components/ImageCatalog/ImageCatalogContainer.js","helpers/convertStringDateToObject.js","components/ModalWindow/ModalWindow.js","components/ModalWindow/ModalWindowContainer.js","components/Preloader/Preloader.js","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","actionsConstants","SET_TODAY_DATA","CHANGE_MAIN_IMAGE","LOAD_IMAGES_TO_IMAGE_CATALOG","LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG","CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG","ITEMS_COUNTER_FOR_ONE_ITERATION","LOADER_IN_IMAGE_CATALOG","SET_STATE_FOR_MODAL_WINDOW","SET_TITLE_FOR_MODAL_WINDOW","SET_MAIN_DATA_FOR_MODAL_WINDOW","SET_DATE_FOR_MODAL_WINDOW","SET_EXPLANATION_FOR_MODAL_WINDOW","UPDATE_ITEM_COUNTER_FOR_PRELOADER","setTodayData","createAction","AC","data","date","url","explanation","title","mediaType","setMainImage","mainImageReducer","createReducer","imageData","todayData","on","state","action","loadImagesToImageCatalog","items","loadImagesForOneIterationToImageCatalog","changeDataIntervalInImageCatalog","startDateValue","endDateValue","countItemsForOneIteration","counter","loaderInImageCatalog","loader","imageCatalogReducer","itemsForOneIteration","itemsCounterForOneIteration","setStateForModalWindow","setTitleForModalWindow","setMainDataForModalWindow","mainData","setDateForModalWindow","setExplanationForModalWindow","modalWindowReducer","modalWindowState","modalWindowTitle","modalWindowMainData","modalWindowDate","modalWindowExplanation","updateItemsCounterForPreloader","preloaderReducer","itemsCounterForPreloader","combineReducers","mainImage","imageCatalog","modalWindow","preloader","store","configureStore","reducer","appConstants","NASA_QUERY","NASA_API_KEY","NASA_API_KEY_STRING","NASA_TARGET_DATE_STRING","NASA_START_DATE_STRING","NASA_END_DATE_STRING","MEDIA_TYPE_IMAGE","MEDIA_TYPE_VIDEO","TODAY","LOCAL_STORAGE_KEY","ITEMS_ON_PAGE","MAIN_IMAGE_ATTRIBUTE","CLASS_FOR_LOADED_ELEMENTS","ITEMS_ON_PAGE_WITH_FIRST_ITERATION","checkTodayDate","C","checkImageInCache","src","image","Image","complete","removeParentClass","element","closest","classList","remove","MainImageDataContext","createContext","ImageBlock","modalWindowShowed","todayImage","itemsFromImageCatalog","useContext","imageWrap","useRef","useEffect","current","add","imgCreator","imgLink","href","target","className","onLoad","e","changeModalWindow","attribute","targetItem","hdurl","changeStateForModalWindow","itemCounter","ref","data-item-counter","onClick","connect","dispatch","props","ErrorComponent","thumbnailFromVideoConstants","YOUTUBE_BIG_THUMBNAIL","videoId","YOUTUBE_MEDIUM_THUMBNAIL","YOUTUBE_SMALL_THUMBNAIL","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH","DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT","VIMEO_GET_THUMBNAIL_ID","vimeoVideoId","VIMEO_GET_THUMBNAIL","imageId","VideoBlock","regExpVimeo","regExpYoutube","useState","videoThumbnail","setVideoThumbnail","stateErrorComponent","setStateErrorComponent","renderVideo","iframeCreator","iframeLink","match","youtubeVideoId","pop","getThumbnailFromYoutubeVideo","getThumbnailFromVimeoVideo","checkImagesWidth","width","height","TC","bigThumbnail","Promise","resolve","onload","naturalWidth","naturalHeight","a","fetch","res","json","thumbnail_url","String","RenderingContentDependingOnTheType","ApplicationError","document","body","style","overflow","window","location","reload","readFromLocalStorage","key","localStorage","getItem","queryString","startDate","endDate","keyString","dateString","startEndDate","MainImage","changeImage","dataFromLocalStorage","JSON","parse","input","errorComponent","ajaxQuery","addEventListener","setNewDate","removeEventListener","value","Object","keys","length","stringify","setItem","selectedDate","nasaQuery","ok","Error","nasaParse","media_type","targetObj","console","log","contextObj","Provider","type","max","onChange","LoaderActive","LoaderEmpty","convertDateObjectToString","Date","monthIncrement","getMonth","month","day","getDate","getFullYear","ImageCatalog","imagesArray","loadImages","imagesArrayForOneIteration","loadImagesToOneIteration","dataInterval","changeDataInterval","changeLoader","todayDate","setDate","itemsCounter","reverse","item","hasMore","loadMore","map","loaderShow","convertStringDateToObject","groups","ModalWindow","dateObject","year","Modal","dialogClassName","show","onHide","animation","Header","closeButton","Title","Body","Footer","Preloader","App","useSelector","scroll","removeAttribute","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f14c918.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const actionsConstants = {\n    SET_TODAY_DATA: 'SET_TODAY_DATA',\n    CHANGE_MAIN_IMAGE: 'CHANGE_MAIN_IMAGE',\n\n    LOAD_IMAGES_TO_IMAGE_CATALOG: 'LOAD_IMAGE_TO_IMAGE_CATALOG',\n    LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG: 'LOAD_IMAGE_FOR_ONE_ITERATION_TO_IMAGE_CATALOG',\n    CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG: 'CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG',\n    ITEMS_COUNTER_FOR_ONE_ITERATION: 'ITEMS_COUNTER_FOR_ONE_ITERATION',\n    LOADER_IN_IMAGE_CATALOG: 'LOADER_IN_IMAGE_CATALOG',\n\n    SET_STATE_FOR_MODAL_WINDOW: 'SET_STATE_FOR_MODAL_WINDOW',\n    SET_TITLE_FOR_MODAL_WINDOW: 'SET_TITLE_FOR_MODAL_WINDOW',\n    SET_MAIN_DATA_FOR_MODAL_WINDOW: 'SET_MAIN_DATA_FOR_MODAL_WINDOW',\n    SET_DATE_FOR_MODAL_WINDOW: 'SET_DATE_FOR_MODAL_WINDOW',\n    SET_EXPLANATION_FOR_MODAL_WINDOW: 'SET_EXPLANATION_FOR_MODAL_WINDOW',\n\n    UPDATE_ITEM_COUNTER_FOR_PRELOADER: 'UPDATE_ITEM_COUNTER_FOR_PRELOADER'\n}\n\nexport default actionsConstants\n","import { createAction } from 'redux-act'\nimport AC from '@/constants/actionsConstants'\nimport { ISetMainImage, ISetTodayData } from '@/types/actions'\nimport { IMainImageItem } from '@/types/imageItems'\n\nexport const setTodayData = createAction<ISetTodayData>(\n    AC.SET_TODAY_DATA,\n    (data: IMainImageItem) => ({\n        date: data.date,\n        url: data.url,\n        explanation: data.explanation,\n        title: data.title,\n        mediaType: data.mediaType\n    })\n)\n\nexport const setMainImage = createAction<ISetMainImage>(\n    AC.CHANGE_MAIN_IMAGE,\n    (data: IMainImageItem) => ({\n        date: data.date,\n        url: data.url,\n        explanation: data.explanation,\n        title: data.title,\n        mediaType: data.mediaType\n    })\n)\n","import { createReducer } from 'redux-act'\nimport { ISetMainImage, ISetTodayData } from '@/types/actions'\nimport { IMainImageState } from '@/types/state'\nimport { setMainImage, setTodayData } from '../actions/mainImageActions'\n\nconst initialState: IMainImageState = {\n    imageData: {\n        date: '',\n        url: '',\n        explanation: '',\n        title: '',\n        mediaType: ''\n    },\n    todayData: {\n        date: '',\n        url: '',\n        explanation: '',\n        title: '',\n        mediaType: ''\n    }\n}\n\nconst mainImageReducer = createReducer<IMainImageState>({}, initialState)\n\nconst setTodayDataReducer = (\n    state: IMainImageState, action: ISetTodayData\n) => ({\n    ...state,\n    todayData: {\n        date: action.date,\n        url: action.url,\n        explanation: action.explanation,\n        title: action.title,\n        mediaType: action.mediaType\n    }\n})\n\nconst setMainImageReducer = (\n    state: IMainImageState, action: ISetMainImage\n) => ({\n    ...state,\n    imageData: {\n        date: action.date,\n        url: action.url,\n        explanation: action.explanation,\n        title: action.title,\n        mediaType: action.mediaType\n    }\n})\n\nmainImageReducer.on(setTodayData, setTodayDataReducer)\nmainImageReducer.on(setMainImage, setMainImageReducer)\n\n\nexport default mainImageReducer\n","import { createAction } from 'redux-act'\nimport AC from '@/constants/actionsConstants'\nimport {\n    ILoadImagesToImageCatalog,\n    ILoadImagesForOneIterationToImageCatalog,\n    IChangeDataIntervalInImageCatalog,\n    ICountItemsForOneIteration,\n    ILoaderInImageCatalog,\n} from '@/types/actions'\nimport { IImageCatalogItem } from '@/types/imageItems'\n\n\nexport const loadImagesToImageCatalog = createAction<ILoadImagesToImageCatalog>(\n    AC.LOAD_IMAGES_TO_IMAGE_CATALOG,\n    (items: IImageCatalogItem[]) => ({\n        items\n    })\n)\n\nexport const loadImagesForOneIterationToImageCatalog = createAction<ILoadImagesForOneIterationToImageCatalog>(\n    AC.LOAD_IMAGES_FOR_ONE_ITERATION_TO_IMAGE_CATALOG,\n    (items: IImageCatalogItem[]) => ({\n        items\n    })\n)\n\nexport const changeDataIntervalInImageCatalog = createAction<IChangeDataIntervalInImageCatalog>(\n    AC.CHANGE_DATA_INTERVAL_IN_IMAGE_CATALOG,\n    (startDateValue: string | null, endDateValue: string | null) => ({\n        startDateValue,\n        endDateValue\n    })\n)\n\nexport const countItemsForOneIteration = createAction<ICountItemsForOneIteration>(\n    AC.ITEMS_COUNTER_FOR_ONE_ITERATION,\n    (counter: number) => ({\n        counter\n    })\n)\n\nexport const loaderInImageCatalog = createAction<ILoaderInImageCatalog>(\n    AC.LOADER_IN_IMAGE_CATALOG,\n    (loader: boolean) => ({\n        loader\n    })\n)\n","import { createReducer } from 'redux-act'\nimport { IImageCatalogState } from '@/types/state'\nimport {\n    IChangeDataIntervalInImageCatalog,\n    ICountItemsForOneIteration,\n    ILoaderInImageCatalog,\n    ILoadImagesForOneIterationToImageCatalog,\n    ILoadImagesToImageCatalog\n} from '@/types/actions';\nimport {\n    changeDataIntervalInImageCatalog,\n    countItemsForOneIteration,\n    loaderInImageCatalog,\n    loadImagesForOneIterationToImageCatalog,\n    loadImagesToImageCatalog\n} from '../actions/imageCatalogActions';\n\n\nconst initialState: IImageCatalogState = {\n    items: [],\n    itemsForOneIteration: [],\n    date: {\n        startDateValue: null,\n        endDateValue: null\n    },\n    itemsCounterForOneIteration: 0,\n    loader: true\n}\n\nconst imageCatalogReducer = createReducer<IImageCatalogState>({}, initialState)\n\nconst loadImagesToImageCatalogReducer = (\n    state: IImageCatalogState, action: ILoadImagesToImageCatalog\n) => ({\n    ...state,\n    items: action.items\n})\n\nconst loadImagesForOneIterationToImageCatalogReducer = (\n    state: IImageCatalogState, action: ILoadImagesForOneIterationToImageCatalog\n) => ({\n    ...state,\n    itemsForOneIteration: action.items\n})\n\nconst changeDataIntervalInImageCatalogReducer = (\n    state: IImageCatalogState, action: IChangeDataIntervalInImageCatalog\n) => ({\n    ...state,\n    date: {\n        startDateValue: action.startDateValue,\n        endDateValue: action.endDateValue\n    }\n})\n\nconst countItemsForOneIterationReducer = (\n    state: IImageCatalogState, action: ICountItemsForOneIteration\n) => ({\n    ...state,\n    itemsCounterForOneIteration: action.counter\n})\n\nconst loaderInImageCatalogReducer = (\n    state: IImageCatalogState, action: ILoaderInImageCatalog\n) => ({\n    ...state,\n    loader: action.loader\n})\n\nimageCatalogReducer.on(loadImagesToImageCatalog, loadImagesToImageCatalogReducer)\nimageCatalogReducer.on(loadImagesForOneIterationToImageCatalog, loadImagesForOneIterationToImageCatalogReducer)\nimageCatalogReducer.on(changeDataIntervalInImageCatalog, changeDataIntervalInImageCatalogReducer)\nimageCatalogReducer.on(countItemsForOneIteration, countItemsForOneIterationReducer)\nimageCatalogReducer.on(loaderInImageCatalog, loaderInImageCatalogReducer)\n\n\nexport default imageCatalogReducer\n","import React from 'react'\nimport { createAction } from 'redux-act'\nimport AC from '@/constants/actionsConstants'\nimport {\n    ISetStateForModalWindow,\n    ISetTitleForModalWindow,\n    ISetMainDataForModalWindow,\n    ISetDateForModalWindow,\n    ISetExplanationForModalWindow,\n} from '@/types/actions'\n\n\nexport const setStateForModalWindow = createAction<ISetStateForModalWindow>(\n    AC.SET_STATE_FOR_MODAL_WINDOW,\n    (state: boolean) => ({\n        state\n    })\n)\n\nexport const setTitleForModalWindow = createAction<ISetTitleForModalWindow>(\n    AC.SET_TITLE_FOR_MODAL_WINDOW,\n    (title: string | null) => ({\n        title\n    })\n)\n\nexport const setMainDataForModalWindow = createAction<ISetMainDataForModalWindow>(\n    AC.SET_MAIN_DATA_FOR_MODAL_WINDOW,\n    (mainData: React.ReactNode) => ({\n        mainData\n    })\n)\n\nexport const setDateForModalWindow = createAction<ISetDateForModalWindow>(\n    AC.SET_DATE_FOR_MODAL_WINDOW,\n    (date: string | null) => ({\n        date\n    })\n)\n\nexport const setExplanationForModalWindow = createAction<ISetExplanationForModalWindow>(\n    AC.SET_EXPLANATION_FOR_MODAL_WINDOW,\n    (explanation: string | null) => ({\n        explanation\n    })\n)\n","import { createReducer } from 'redux-act'\nimport { IModalWindowState } from '@/types/state'\nimport {\n    ISetDateForModalWindow,\n    ISetExplanationForModalWindow,\n    ISetMainDataForModalWindow,\n    ISetStateForModalWindow,\n    ISetTitleForModalWindow\n} from '@/types/actions'\nimport {\n    setDateForModalWindow,\n    setExplanationForModalWindow,\n    setMainDataForModalWindow,\n    setStateForModalWindow,\n    setTitleForModalWindow\n} from '../actions/modalWindowActions'\n\n\nconst initialState: IModalWindowState = {\n    modalWindowState: false,\n    modalWindowTitle: null,\n    modalWindowMainData: null,\n    modalWindowDate: null,\n    modalWindowExplanation: null\n}\n\nconst modalWindowReducer = createReducer<IModalWindowState>({}, initialState)\n\nconst setStateForModalWindowReducer = (\n    state: IModalWindowState, action: ISetStateForModalWindow\n) => ({\n    ...state,\n    modalWindowState: action.state\n})\n\nconst setTitleForModalWindowReducer = (\n    state: IModalWindowState, action: ISetTitleForModalWindow\n) => ({\n    ...state,\n    modalWindowTitle: action.title\n})\n\nconst setMainDataForModalWindowReducer = (\n    state: IModalWindowState, action: ISetMainDataForModalWindow\n) => ({\n    ...state,\n    modalWindowMainData: action.mainData\n})\n\nconst setDateForModalWindowReducer = (\n    state: IModalWindowState, action: ISetDateForModalWindow\n) => ({\n    ...state,\n    modalWindowDate: action.date\n})\n\nconst setExplanationForModalWindowReducer = (\n    state: IModalWindowState, action: ISetExplanationForModalWindow\n) => ({\n    ...state,\n    modalWindowExplanation: action.explanation\n})\n\nmodalWindowReducer.on(setStateForModalWindow, setStateForModalWindowReducer)\nmodalWindowReducer.on(setTitleForModalWindow, setTitleForModalWindowReducer)\nmodalWindowReducer.on(setMainDataForModalWindow, setMainDataForModalWindowReducer)\nmodalWindowReducer.on(setDateForModalWindow, setDateForModalWindowReducer)\nmodalWindowReducer.on(setExplanationForModalWindow, setExplanationForModalWindowReducer)\n\n\nexport default modalWindowReducer\n","import { createAction } from 'redux-act'\nimport AC from '@/constants/actionsConstants'\nimport { IUpdateItemsCounterForPreloader } from '@/types/actions'\n\nexport const updateItemsCounterForPreloader = createAction<IUpdateItemsCounterForPreloader>(\n    AC.UPDATE_ITEM_COUNTER_FOR_PRELOADER,\n    (counter: number) => ({\n        counter\n    })\n)\n\n// export const updateItemsCounterForPreloader = (counter: number): PreloaderTypes => ({\n//     type: AC.UPDATE_ITEM_COUNTER_FOR_PRELOADER,\n//     counter\n// })\n","import { createReducer } from 'redux-act'\nimport { IPreloaderState } from '@/types/state'\nimport { updateItemsCounterForPreloader } from '../actions/preloaderActions'\nimport { IUpdateItemsCounterForPreloader } from '@/types/actions'\n\nconst initialState: IPreloaderState = {\n    itemsCounterForPreloader: 0\n}\n\nconst preloaderReducer = createReducer<IPreloaderState>({}, initialState)\n\nconst updateItemsCounterForPreloaderReducer = (\n    state: IPreloaderState, action: IUpdateItemsCounterForPreloader\n) => ({\n    ...state,\n    itemsCounterForPreloader: action.counter\n})\n\npreloaderReducer.on(updateItemsCounterForPreloader, updateItemsCounterForPreloaderReducer)\n\n\nexport default preloaderReducer\n","import { combineReducers } from 'redux'\nimport mainImage from './mainImageReducer'\nimport imageCatalog from './imageCatalogReducer'\nimport modalWindow from './modalWindowReducer'\nimport preloader from './preloaderReducer'\n\nexport default combineReducers({\n    mainImage,\n    imageCatalog,\n    modalWindow,\n    preloader\n})\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducers/index\";\n\nconst store = configureStore({ reducer });\n\nexport default store;\n","const appConstants = {\n    NASA_QUERY: 'https://api.nasa.gov/planetary/apod',\n    NASA_API_KEY: '3zbRNQCuSrdOsHV2LsGKVGzEPuecszavgkAo7mYo',\n    NASA_API_KEY_STRING: 'api_key',\n    NASA_TARGET_DATE_STRING: 'date',\n    NASA_START_DATE_STRING: 'start_date',\n    NASA_END_DATE_STRING: 'end_date',\n    MEDIA_TYPE_IMAGE: 'image',\n    MEDIA_TYPE_VIDEO: 'video',\n    TODAY: 'today',\n    LOCAL_STORAGE_KEY: 'all-data',\n    ITEMS_ON_PAGE: 24,\n\n    MAIN_IMAGE_ATTRIBUTE: 'main-image',\n\n    CLASS_FOR_LOADED_ELEMENTS: 'loading',\n    ITEMS_ON_PAGE_WITH_FIRST_ITERATION: 25\n}\n\nexport default appConstants\n","import C from '@/constants/appConstants'\n\nconst checkTodayDate = (date) => {\n    if (date === C.TODAY) return true\n    else return false\n}\n\nexport default checkTodayDate\n","const checkImageInCache = (src) => {\n    const image = new Image()\n    image.src = src\n\n    return image.complete\n}\n\nexport default checkImageInCache\n","import C from '@/constants/appConstants'\n\nconst removeParentClass = (element) => {\n    element\n        .closest(`.${C.CLASS_FOR_LOADED_ELEMENTS}`)\n        .classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n}\n\nexport default removeParentClass\n","import { createContext } from 'react'\n\nexport const MainImageDataContext = createContext();\n","import React, { useEffect, useContext, useRef } from 'react'\nimport C from '@/constants/appConstants'\nimport checkTodayDate from '@/helpers/checkTodayDate'\nimport checkImageInCache from '@/helpers/checkImageInCache'\nimport removeParentClass from '@/helpers/removeParentClass'\nimport { MainImageDataContext } from '@/helpers/context'\nimport './ImageBlock.scss'\n\nconst ImageBlock = ({\n    modalWindowShowed,\n    setStateForModalWindow,\n    setTitleForModalWindow,\n    setMainDataForModalWindow,\n    setDateForModalWindow,\n    setExplanationForModalWindow,\n    mainImage,\n    todayImage,\n    itemsFromImageCatalog,\n    itemsCounterForPreloader,\n    updateItemsCounterForPreloader\n}) => {\n    const data = useContext(MainImageDataContext)\n    const imageWrap = useRef()\n\n    useEffect(() => {\n        if (checkImageInCache(data.url)) {\n            imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n        } else {\n            imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\n        }\n        return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n    }, [data.url])\n\n    const imgCreator = (imgLink) => (\n        <a href={imgLink} target='_blank' className={C.CLASS_FOR_LOADED_ELEMENTS}>\n            <img\n                className='modal-window__main-data'\n                src={imgLink}\n                onLoad={(e) => removeParentClass(e.target)}\n            />\n        </a>\n    )\n\n    const changeStateForModalWindow = (attribute) => {\n        switch (attribute) {\n            case C.MAIN_IMAGE_ATTRIBUTE:\n                if (checkTodayDate(mainImage.date)) {\n                    setTitleForModalWindow(todayImage.title)\n                    setMainDataForModalWindow(imgCreator(todayImage.url))\n                    setExplanationForModalWindow(todayImage.explanation)\n                    setDateForModalWindow(todayImage.date)\n                } else {\n                    setTitleForModalWindow(mainImage.title)\n                    setMainDataForModalWindow(imgCreator(mainImage.url))\n                    setExplanationForModalWindow(mainImage.explanation)\n                    setDateForModalWindow(mainImage.date)\n                }\n                break\n\n            default:\n                const targetItem = itemsFromImageCatalog[attribute]\n                setTitleForModalWindow(targetItem.title)\n                setMainDataForModalWindow(imgCreator(targetItem.hdurl))\n                setExplanationForModalWindow(targetItem.explanation)\n                setDateForModalWindow(targetItem.date)\n                break\n        }\n    }\n\n    const changeModalWindow = () => {\n        if (!modalWindowShowed) {\n            changeStateForModalWindow(data.itemCounter)\n            setStateForModalWindow(true)\n        }\n    }\n\n    const imageLoaded = () => {\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n        updateItemsCounterForPreloader(++itemsCounterForPreloader)\n    }\n\n    return (\n        <div\n            className={`${data.className}-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\n            ref={imageWrap}\n        >\n            <img\n                src={data.url}\n                className={data.className}\n                data-item-counter={data.itemCounter}\n                onClick={() => changeModalWindow()}\n                onLoad={() => imageLoaded()}\n            />\n        </div>\n    )\n}\n\nexport default ImageBlock\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    setStateForModalWindow,\n    setTitleForModalWindow,\n    setMainDataForModalWindow,\n    setDateForModalWindow,\n    setExplanationForModalWindow\n} from '@/store/actions/modalWindowActions'\nimport { updateItemsCounterForPreloader } from '@/store/actions/preloaderActions'\nimport ImageBlock from './ImageBlock'\n\nconst ImageBlockContainer = (props) => {\n    return <ImageBlock {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n    modalWindowShowed: state.modalWindow.modalWindowState,\n    mainImage: state.mainImage.imageData,\n    todayImage: state.mainImage.todayData,\n    itemsFromImageCatalog: state.imageCatalog.items,\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setStateForModalWindow(state) {\n        dispatch(setStateForModalWindow(state))\n    },\n\n    setTitleForModalWindow(title) {\n        dispatch(setTitleForModalWindow(title))\n    },\n\n    setMainDataForModalWindow(mainData) {\n        dispatch(setMainDataForModalWindow(mainData))\n    },\n\n    setDateForModalWindow(date) {\n        dispatch(setDateForModalWindow(date))\n    },\n\n    setExplanationForModalWindow(explanation) {\n        dispatch(setExplanationForModalWindow(explanation))\n    },\n    updateItemsCounterForPreloader(data) {\n        dispatch(updateItemsCounterForPreloader(data))\n    }\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ImageBlockContainer)\n","import React from 'react'\nimport './ErrorComponent.scss'\n\nconst ErrorComponent = () => {\n    return (\n        <div className='error-component'>\n            <p>No data</p>\n        </div>\n    )\n}\n\nexport default ErrorComponent\n","const thumbnailFromVideoConstants = {\n    YOUTUBE_BIG_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/maxresdefault.jpg`),\n    YOUTUBE_MEDIUM_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/sddefault.jpg`),\n    YOUTUBE_SMALL_THUMBNAIL: (videoId) => (`https://img.youtube.com/vi/${videoId}/hqdefault.jpg`),\n    // if we want get thumbnail and youtube respons error\n    // we get default thumbnail with this sizes\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH: 120,\n    DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT: 90,\n\n    VIMEO_GET_THUMBNAIL_ID: (vimeoVideoId) => (`https://vimeo.com/api/oembed.json?url=https://vimeo.com/${vimeoVideoId}`),\n    VIMEO_GET_THUMBNAIL: (imageId) => (`https://i.vimeocdn.com/video/${imageId}.jpg`)\n}\n\nexport default thumbnailFromVideoConstants\n","import React, { useState, useEffect, useContext, useRef } from 'react'\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\nimport { MainImageDataContext } from '@/helpers/context'\nimport checkImageInCache from '@/helpers/checkImageInCache'\nimport checkTodayDate from '@/helpers/checkTodayDate'\nimport removeParentClass from '@/helpers/removeParentClass'\nimport C from '@/constants/appConstants'\nimport TC from '@/constants/thumbnailFromVideoConstants'\nimport './VideoBlock.scss'\n\nconst VideoBlock = ({\n    modalWindowShowed,\n    setStateForModalWindow,\n    setTitleForModalWindow,\n    setMainDataForModalWindow,\n    setDateForModalWindow,\n    setExplanationForModalWindow,\n    mainImage,\n    todayImage,\n    itemsFromImageCatalog,\n    itemsCounterForPreloader,\n    updateItemsCounterForPreloader\n}) => {\n    const data = useContext(MainImageDataContext)\n    const imageWrap = useRef()\n\n    const regExpVimeo = /(http|https)?:\\/\\/(www\\.)?(vimeo.com\\/|player.vimeo.com\\/video\\/)([0-9]+)/g\n    const regExpYoutube = /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/g\n\n    const [videoThumbnail, setVideoThumbnail] = useState()\n    const [stateErrorComponent, setStateErrorComponent] = useState(false)\n\n    useEffect(() => {\n        renderVideo()\n    }, [mainImage])\n\n    useEffect(() => {\n        if (videoThumbnail) {\n            if (checkImageInCache(videoThumbnail)) {\n                imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n            } else {\n                imageWrap.current.classList.add(C.CLASS_FOR_LOADED_ELEMENTS)\n            }\n        }\n        return () => imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n    }, [videoThumbnail])\n\n    const iframeCreator = (iframeLink) => (\n        <div className={`modal-window__iframe-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}>\n            <iframe\n                className='modal-window__main-data modal-window__main-data_video'\n                src={iframeLink}\n                onLoad={(e) => removeParentClass(e.target)}\n            />\n        </div>\n    )\n\n    const renderVideo = () => {\n        if (data.url.match(regExpYoutube)) {\n            const youtubeVideoId = data.url.match(/youtube\\.com.*(\\?v=|\\/embed\\/)(.{11})/).pop()\n            getThumbnailFromYoutubeVideo(youtubeVideoId)\n        } else if (data.url.match(regExpVimeo)) {\n            const vimeoVideoId = data.url.match(/vimeo.*\\/(\\d+)/i).pop()\n            getThumbnailFromVimeoVideo(vimeoVideoId)\n        } else {\n            setStateErrorComponent(true)\n        }\n    }\n\n    const checkImagesWidth = (width, height) => {\n        if (\n            width !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_WIDTH\n            && height !== TC.DEFAULT_THUMBNAIL_SIZE_YOUTUBE_HEIGHT\n        ) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    const getThumbnailFromYoutubeVideo = (videoId) => {\n        const drawImageActualSize = () => {\n            if (checkImagesWidth(\n                bigThumbnail.naturalWidth,\n                bigThumbnail.naturalHeight\n            )) {\n                setVideoThumbnail(bigThumbnail.src)\n            } else {\n                setStateErrorComponent(true)\n            }\n        }\n\n        const bigThumbnail = new Image()\n\n        switch (data.itemCounter) {\n            case C.MAIN_IMAGE_ATTRIBUTE:\n                new Promise((resolve) => {\n                    bigThumbnail.src = TC.YOUTUBE_BIG_THUMBNAIL(videoId)\n                    bigThumbnail.onload = () => {\n                        if (checkImagesWidth(\n                            bigThumbnail.naturalWidth,\n                            bigThumbnail.naturalHeight\n                        )) {\n                            setVideoThumbnail(bigThumbnail.src)\n                        } else {\n                            resolve()\n                        }\n                    }\n                }).then(() => {\n                    return new Promise((resolve) => {\n                        bigThumbnail.src = TC.YOUTUBE_MEDIUM_THUMBNAIL(videoId)\n                        bigThumbnail.onload = () => {\n                            if (checkImagesWidth(\n                                bigThumbnail.naturalWidth,\n                                bigThumbnail.naturalHeight\n                            )) {\n                                setVideoThumbnail(bigThumbnail.src)\n                            } else {\n                                resolve()\n                            }\n                        }\n                    }).then(() => {\n                        bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\n                        bigThumbnail.onload = () => {\n                            if (checkImagesWidth(\n                                bigThumbnail.naturalWidth,\n                                bigThumbnail.naturalHeight\n                            )) {\n                                setVideoThumbnail(bigThumbnail.src)\n                            } else {\n                                setStateErrorComponent(true)\n                            }\n                        }\n                    })\n                })\n                break\n\n            default:\n                bigThumbnail.src = TC.YOUTUBE_SMALL_THUMBNAIL(videoId)\n                bigThumbnail.onload = drawImageActualSize\n                break\n        }\n    }\n\n    const getThumbnailFromVimeoVideo = async (vimeoVideoId) => {\n        await fetch(TC.VIMEO_GET_THUMBNAIL_ID(vimeoVideoId))\n            .then(res => res.json())\n            .then(res => res.thumbnail_url.match(/vimeo.*\\/(\\d+)/i).pop())\n            .then(res => setVideoThumbnail(TC.VIMEO_GET_THUMBNAIL(res)))\n    }\n\n    const changeStateForModalWindow = (attribute) => {\n        switch (attribute) {\n            case C.MAIN_IMAGE_ATTRIBUTE:\n                if (checkTodayDate(mainImage.date)) {\n                    setTitleForModalWindow(todayImage.title)\n                    setMainDataForModalWindow(iframeCreator(todayImage.url))\n                    setExplanationForModalWindow(todayImage.explanation)\n                    setDateForModalWindow(todayImage.date)\n                } else {\n                    setTitleForModalWindow(mainImage.title)\n                    setMainDataForModalWindow(iframeCreator(mainImage.url))\n                    setExplanationForModalWindow(mainImage.explanation)\n                    setDateForModalWindow(mainImage.date)\n                }\n                break\n\n            default:\n                const targetItem = itemsFromImageCatalog[String(attribute)]\n                setTitleForModalWindow(targetItem.title)\n                setMainDataForModalWindow(iframeCreator(targetItem.url))\n                setExplanationForModalWindow(targetItem.explanation)\n                setDateForModalWindow(targetItem.date)\n                break\n        }\n    }\n\n    const changeModalWindow = () => {\n        if (!modalWindowShowed) {\n            changeStateForModalWindow(data.itemCounter)\n            setStateForModalWindow(true)\n        }\n    }\n\n    const imageLoaded = () => {\n        imageWrap.current.classList.remove(C.CLASS_FOR_LOADED_ELEMENTS)\n        updateItemsCounterForPreloader(++itemsCounterForPreloader)\n    }\n\n    return (\n        <>\n            {\n                stateErrorComponent\n                    ? <ErrorComponent />\n                    : <div\n                        className={`${data.className}_video-wrap ${C.CLASS_FOR_LOADED_ELEMENTS}`}\n                        ref={imageWrap}\n                    >\n                        <img\n                            className={`${data.className} ${data.className}_video`}\n                            data-item-counter={data.itemCounter}\n                            onClick={() => changeModalWindow()}\n                            src={videoThumbnail}\n                            onLoad={() => imageLoaded()}\n                        />\n                    </div>\n            }\n        </>\n    )\n}\n\nexport default VideoBlock\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    setStateForModalWindow,\n    setTitleForModalWindow,\n    setMainDataForModalWindow,\n    setDateForModalWindow,\n    setExplanationForModalWindow\n} from '@/store/actions/modalWindowActions'\nimport { updateItemsCounterForPreloader } from '@/store/actions/preloaderActions'\nimport VideoBlock from './VideoBlock'\n\nconst VideoBlockContainer = (props) => {\n    return <VideoBlock {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n    modalWindowShowed: state.modalWindow.modalWindowState,\n    mainImage: state.mainImage.imageData,\n    todayImage: state.mainImage.todayData,\n    itemsFromImageCatalog: state.imageCatalog.items,\n    itemsCounterForPreloader: state.preloader.itemsCounterForPreloader\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setStateForModalWindow(state) {\n        dispatch(setStateForModalWindow(state))\n    },\n\n    setTitleForModalWindow(title) {\n        dispatch(setTitleForModalWindow(title))\n    },\n\n    setMainDataForModalWindow(mainData) {\n        dispatch(setMainDataForModalWindow(mainData))\n    },\n\n    setDateForModalWindow(date) {\n        dispatch(setDateForModalWindow(date))\n    },\n\n    setExplanationForModalWindow(explanation) {\n        dispatch(setExplanationForModalWindow(explanation))\n    },\n    updateItemsCounterForPreloader(data) {\n        dispatch(updateItemsCounterForPreloader(data))\n    }\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(VideoBlockContainer)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport ImageBlockContainer from '../ImageBlock/ImageBlockContainer'\nimport VideoBlockContainer from './../VideoBlock/VideoBlockContainer'\nimport ErrorComponent from './../ErrorComponent/ErrorComponent'\nimport C from '@/constants/appConstants'\n\nconst RenderingContentDependingOnTheType = ({ mediaType }) => {\n    switch (mediaType) {\n        case C.MEDIA_TYPE_IMAGE:\n            return <ImageBlockContainer />\n\n        case C.MEDIA_TYPE_VIDEO:\n            return <VideoBlockContainer />\n\n        default:\n            return <ErrorComponent />\n    }\n}\n\nRenderingContentDependingOnTheType.propTypes = {\n    mediaType: PropTypes.string\n}\n\nexport default RenderingContentDependingOnTheType\n","import React from 'react'\nimport './ApplicationError.scss'\n\nconst ApplicationError = () => {\n    document.body.style.overflow = 'hidden'\n\n    return (\n        <section className='application-error'>\n            <div className='application-error__items-wrap'>\n                <h2 className='application-error__header'>Some troubles</h2>\n                <h2 className='application-error__header'>Please, try again later</h2>\n                <button\n                    className='application-error__reload-button'\n                    onClick={() => window.location.reload()}\n                >\n                    Reload page\n                </button>\n            </div>\n        </section>\n    )\n}\n\nexport default ApplicationError\n","export const writeToLocalStorage = (key, value) => {\n    localStorage.setItem(key, value);\n}\n\nexport const readFromLocalStorage = (key) => {\n    return localStorage.getItem(key);\n}\n","import C from '@/constants/appConstants'\n\nconst queryString = (date = '', startDate = '', endDate = '') => {\n    const keyString = `${C.NASA_API_KEY_STRING}=${C.NASA_API_KEY}`\n    const dateString = date ? `&${C.NASA_TARGET_DATE_STRING}=${date}` : ''\n    const startEndDate = startDate && endDate\n        ? `&${C.NASA_START_DATE_STRING}=${startDate}&${C.NASA_END_DATE_STRING}=${endDate}`\n        : ''\n\n    return (\n        `${C.NASA_QUERY}?${keyString}${dateString}${startEndDate}`\n    )\n}\n\nexport default queryString\n","import React, { useState, useEffect, useRef } from 'react'\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\nimport ApplicationError from './../ApplicationError/ApplicationError'\nimport { writeToLocalStorage, readFromLocalStorage } from '@/helpers/workWithLocalStorage'\nimport queryString from '@/helpers/queryString'\nimport C from '@/constants/appConstants'\nimport { MainImageDataContext } from '@/helpers/context'\nimport checkTodayDate from '@/helpers/checkTodayDate'\nimport './MainImage.scss'\n\nconst MainImage = ({\n    mainImage,\n    imageData,\n    changeImage,\n    todayData,\n    setTodayData\n}) => {\n    const dataFromLocalStorage = JSON.parse(readFromLocalStorage(C.LOCAL_STORAGE_KEY))\n\n    const input = useRef();\n    const [errorComponent, setStateErrorComponent] = useState(false)\n\n    useEffect(() => {\n        ajaxQuery()\n        input.current.addEventListener('change', setNewDate)\n\n        return () => input.current.removeEventListener('change', setNewDate)\n    }, [])\n\n    useEffect(() => {\n        if (!todayData.date) return\n\n        if (todayData.date && !imageData.date) {\n            if (readFromLocalStorage(C.LOCAL_STORAGE_KEY)) {\n                if (dataFromLocalStorage\n                    && Object.keys(dataFromLocalStorage).length\n                    && dataFromLocalStorage.imageData.date\n                ) {\n                    changeImage(dataFromLocalStorage.imageData)\n                } else {\n                    changeImage(todayData)\n                }\n            } else {\n                changeImage(todayData)\n            }\n        }\n\n        if (imageData.date === todayData.date) changeImage({ ...todayData, date: C.TODAY })\n\n        writeToLocalStorage(C.LOCAL_STORAGE_KEY, JSON.stringify({ ...mainImage }))\n    }, [mainImage])\n\n    const ajaxQuery = async (selectedDate = '') => {\n        try {\n            const nasaQuery = await fetch(queryString(selectedDate))\n            if (!nasaQuery.ok) throw new Error('Some internal error')\n\n            const nasaParse = await nasaQuery.json()\n\n            const date = nasaParse.date\n            const mediaType = nasaParse.media_type\n            const url = mediaType === C.MEDIA_TYPE_IMAGE ? nasaParse.hdurl : nasaParse.url\n            const explanation = nasaParse.explanation\n            const title = nasaParse.title\n            const targetObj = { date, url, explanation, title, mediaType }\n\n            if (selectedDate) {\n                changeImage(targetObj)\n            } else {\n                setTodayData(targetObj)\n            }\n        } catch (error) {\n            console.log('Error: ', error)\n\n            setStateErrorComponent(true)\n\n            const targetObj = {\n                date: selectedDate,\n                url: null,\n                explanation: null,\n                title: null,\n                mediaType: null\n            }\n\n            if (selectedDate) {\n                changeImage(targetObj)\n            } else {\n                setTodayData(targetObj)\n            }\n        }\n    }\n\n    const setNewDate = (e) => {\n        const value = e.target.value\n        ajaxQuery(value)\n    }\n\n    const contextObj = {\n        className: 'main-image__image',\n        url: checkTodayDate(imageData.date) ? todayData.url : imageData.url,\n        // itemCounter used for get data from state and set to ModalWindow\n        itemCounter: C.MAIN_IMAGE_ATTRIBUTE\n    }\n\n    return (\n        <>\n            {errorComponent && <ApplicationError />}\n\n            <section className='main-image'>\n                <MainImageDataContext.Provider value={contextObj}>\n                    <RenderingContentDependingOnTheType\n                        mediaType={checkTodayDate(imageData.date) ? todayData.mediaType : imageData.mediaType}\n                    />\n                </MainImageDataContext.Provider>\n\n                <h1 className='main-image__title'>NASA. APOD: Astronomy Picture of the Day</h1>\n\n                <input\n                    className='main-image__input'\n                    type=\"date\"\n                    max={todayData.date}\n                    value={checkTodayDate(imageData.date) ? todayData.date : (imageData.date || '')}\n                    ref={input}\n                    onChange={() => changeImage({ ...imageData, date: input.current.value })}\n                />\n            </section>\n        </>\n    )\n}\n\nexport default MainImage\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setTodayData, setMainImage } from '@/store/actions/mainImageActions'\nimport MainImage from './MainImage'\n\nconst MainImageContainer = (props) => {\n    return <MainImage {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n    mainImage: state.mainImage,\n    imageData: state.mainImage.imageData,\n    todayData: state.mainImage.todayData\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setTodayData(data) {\n        dispatch(setTodayData(data))\n    },\n    changeImage(data) {\n        dispatch(setMainImage(data))\n    }\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(MainImageContainer)\n","import React from 'react'\nimport './loaders.scss'\n\nexport const LoaderActive = () => {\n    return (\n        <div className='loader-active'>\n            <div className='loader-active__ellips' />\n            <p>Loading...</p>\n        </div>\n    )\n}\n\nexport const LoaderEmpty = () => {\n    return (\n        <div className='loader-empty'>\n            <div className='loader-empty__ellips' />\n            <p>Loading...</p>\n        </div>\n    )\n}\n","const convertDateObjectToString = (date = new Date()) => {\n    const monthIncrement = date.getMonth() + 1\n    const month = monthIncrement < 10 ? `0${monthIncrement}` : monthIncrement\n    const day = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate()\n    \n    return `${date.getFullYear()}-${month}-${day}`\n}\n\nexport default convertDateObjectToString\n","import React, { useState, useEffect } from 'react'\nimport InfiniteScroll from '@alexcambose/react-infinite-scroll';\nimport RenderingContentDependingOnTheType from './../RenderingContentDependingOnTheType/RenderingContentDependingOnTheType';\nimport { LoaderActive, LoaderEmpty } from './../loaders/loaders'\nimport ApplicationError from './../ApplicationError/ApplicationError'\nimport queryString from '@/helpers/queryString'\nimport convertDateObjectToString from '@/helpers/convertDateObjectToString'\nimport { MainImageDataContext } from '@/helpers/context'\nimport C from '@/constants/appConstants'\nimport './ImageCatalog.scss'\n\nconst ImageCatalog = ({\n    imagesArray,\n    loadImages,\n    imagesArrayForOneIteration,\n    loadImagesToOneIteration,\n    dataInterval,\n    changeDataInterval,\n    itemsCounterForOneIteration,\n    countItemsForOneIteration,\n    loader,\n    changeLoader,\n    todayDate\n}) => {\n    let startDate, endDate\n\n    const [errorComponent, setStateErrorComponent] = useState(false)\n\n    useEffect(() => {\n        // if we have less them 24 items\n        if (itemsCounterForOneIteration < C.ITEMS_ON_PAGE && itemsCounterForOneIteration !== 0) {\n            startDate = new Date(dataInterval.startDateValue)\n            endDate = new Date(dataInterval.startDateValue)\n\n            endDate.setDate(endDate.getDate() - 1)\n            startDate.setDate(startDate.getDate() - (C.ITEMS_ON_PAGE - itemsCounterForOneIteration))\n\n            ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate), itemsCounterForOneIteration)\n\n            changeDataInterval(startDate, endDate)\n        }\n    }, [itemsCounterForOneIteration])\n\n    useEffect(() => {\n        if (!imagesArray.length) return\n        changeLoader(false)\n    }, [imagesArray])\n\n    useEffect(() => {\n        // fix bug. sometimes load second iteration instead of first\n        loadImages([...imagesArray, ...imagesArrayForOneIteration])\n    }, [imagesArrayForOneIteration])\n\n    useEffect(() => {\n        if (!todayDate) return\n\n        // first load images\n        startDate = new Date()\n        startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\n        endDate = new Date(todayDate)\n        endDate.setDate(endDate.getDate() - 1)\n\n        ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\n        changeDataInterval(startDate, endDate)\n    }, [todayDate])\n\n    const ajaxQuery = async (startDate, endDate, itemsCounter = 0) => {\n        try {\n            const nasaQuery = await fetch(queryString(null, startDate, endDate))\n            const nasaParse = await nasaQuery.json()\n\n            loadImagesToOneIteration([...nasaParse.reverse()])\n            countItemsForOneIteration(nasaParse.length + itemsCounter)\n        } catch (error) {\n            console.log(error)\n\n            setStateErrorComponent(true)\n        }\n    }\n\n    const checkScrollScreen = () => {\n        changeLoader(true)\n\n        if (dataInterval.startDateValue && dataInterval.endDateValue) {\n            // next load images\n            startDate = new Date(dataInterval.startDateValue)\n            endDate = new Date(dataInterval.startDateValue)\n            endDate.setDate(endDate.getDate() - 1)\n            startDate.setDate(startDate.getDate() - C.ITEMS_ON_PAGE)\n\n            ajaxQuery(convertDateObjectToString(startDate), convertDateObjectToString(endDate))\n            changeDataInterval(startDate, endDate)\n        }\n    };\n\n    const contextObj = (item, counter) => ({\n        className: 'image-catalog__image',\n        url: item.url,\n        // itemCounter used for get data from state and set to ModalWindow\n        itemCounter: counter\n    })\n\n    return (\n        <>\n            {errorComponent && <ApplicationError />}\n\n            <section className='image-catalog'>\n                <InfiniteScroll\n                    hasMore={true}\n                    loadMore={checkScrollScreen}\n                >\n                    <ul className='image-catalog__wrap'>\n                        {imagesArray.map((item, counter) => (\n                            <li key={item.date}>\n                                <MainImageDataContext.Provider\n                                    value={contextObj(item, counter)}\n                                >\n                                    <RenderingContentDependingOnTheType\n                                        mediaType={item.media_type}\n                                    />\n                                </MainImageDataContext.Provider>\n                            </li>\n                        ))}\n                    </ul>\n                    {loader ? <LoaderActive /> : <LoaderEmpty />}\n                </InfiniteScroll>\n            </section>\n        </>\n    )\n}\n\nexport default ImageCatalog\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport {\n    loadImagesToImageCatalog,\n    loadImagesForOneIterationToImageCatalog,\n    changeDataIntervalInImageCatalog,\n    countItemsForOneIteration,\n    loaderInImageCatalog\n} from '@/store/actions/imageCatalogActions'\nimport ImageCatalog from './ImageCatalog'\n\nconst ImageCatalogContainer = (props) => {\n    return <ImageCatalog {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n    imagesArray: state.imageCatalog.items,\n    imagesArrayForOneIteration: state.imageCatalog.itemsForOneIteration,\n    dataInterval: state.imageCatalog.date,\n    itemsCounterForOneIteration: state.imageCatalog.itemsCounterForOneIteration,\n    loader: state.imageCatalog.loader,\n    todayDate: state.mainImage.todayData.date\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    loadImages(items) {\n        dispatch(loadImagesToImageCatalog(items))\n    },\n    loadImagesToOneIteration(items) {\n        dispatch(loadImagesForOneIterationToImageCatalog(items))\n    },\n    changeDataInterval(startDate, endDate) {\n        dispatch(changeDataIntervalInImageCatalog(startDate, endDate))\n    },\n    countItemsForOneIteration(items) {\n        dispatch(countItemsForOneIteration(items))\n    },\n    changeLoader(loaderShow) {\n        dispatch(loaderInImageCatalog(loaderShow))\n    }\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ImageCatalogContainer)\n","const convertStringDateToObject = (date) => (\n    date.match(/(?<year>[0-9]{4})-(?<month>[0-9]{2})-(?<day>[0-9]{2})/).groups\n)\n\nexport default convertStringDateToObject\n","import React from 'react'\nimport { Modal } from 'react-bootstrap'\nimport convertStringDateToObject from '@/helpers/convertStringDateToObject'\nimport './ModalWindow.scss'\n\nconst ModalWindow = ({\n    modalWindowShowed,\n    setStateForModalWindow,\n    modalWindowTitle,\n    modalWindowMainData,\n    modalWindowDate,\n    modalWindowExplanation\n}) => {\n    const dateObject = modalWindowDate\n        ? convertStringDateToObject(modalWindowDate)\n        : { day: '', month: '', year: '' }\n\n    return (\n        <Modal\n            dialogClassName='modal-window'\n            show={modalWindowShowed}\n            onHide={() => setStateForModalWindow(false)}\n            animation={false}\n        >\n            <Modal.Header className='modal-window__header' closeButton>\n                <Modal.Title>\n                    <h2 className='modal-window__title'>{modalWindowTitle}</h2>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body className='modal-window__body'>\n                {modalWindowMainData}\n                <p>{modalWindowExplanation}</p>\n            </Modal.Body>\n            <Modal.Footer>\n                <p>{`${dateObject.day}.${dateObject.month}.${dateObject.year}`}</p>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default ModalWindow\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { setStateForModalWindow } from '@/store/actions/modalWindowActions'\nimport ModalWindow from './ModalWindow'\n\nconst ModalWindowContainer = (props) => {\n    return <ModalWindow {...props} />\n}\n\nconst mapStateToProps = (state) => ({\n    modalWindowShowed: state.modalWindow.modalWindowState,\n    modalWindowTitle: state.modalWindow.modalWindowTitle,\n    modalWindowMainData: state.modalWindow.modalWindowMainData,\n    modalWindowDate: state.modalWindow.modalWindowDate,\n    modalWindowExplanation: state.modalWindow.modalWindowExplanation\n})\n\nconst mapDispatchToProps = (dispatch) => ({\n    setStateForModalWindow(state) {\n        dispatch(setStateForModalWindow(state))\n    }\n})\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(ModalWindowContainer)\n","import React from 'react'\nimport './Preloader.scss'\n\nconst Preloader = ({ className }) => {\n    return (\n        <section className={`preloader ${className}`}>\n            <div className='preloader__content'>\n                <div className='loader-circle'></div>\n                <div className='loader-line-mask'>\n                    <div className='loader-line'></div>\n                </div>\n                <p className='preloader__text'>NASA</p>\n            </div>\n        </section>\n    )\n}\n\nexport default Preloader\n","import { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport MainImageContainer from './components/MainImage/MainImageContainer'\nimport ImageCatalogContainer from './components/ImageCatalog/ImageCatalogContainer'\nimport ModalWindowContainer from './components/ModalWindow/ModalWindowContainer'\nimport Preloader from './components/Preloader/Preloader'\nimport C from '@/constants/appConstants'\nimport { IAppState } from './types/state'\n\nconst App = () => {\n  const itemsCounterForPreloader: number = useSelector((state: IAppState) =>\n    state.preloader.itemsCounterForPreloader)\n\n  // if user reload page (like f5) he may not be at the top of the page\n  useEffect(() => {\n    // 10 - this random number (not more all items in first iteration, 25)\n    // it helps to delay the user's movement to the top of the page\n    // necessary for the user to move after the browser event fires\n    // (moving the user to the place where he reloaded the page)\n    itemsCounterForPreloader === 10 && window.scroll(0, 0)\n  }, [itemsCounterForPreloader])\n\n  itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\n    ? document.body.style.overflow = 'hidden'\n    : document.body.removeAttribute('style')\n\n  return (\n    <>\n      <Preloader className={\n        itemsCounterForPreloader < C.ITEMS_ON_PAGE_WITH_FIRST_ITERATION\n          ? ''\n          : 'hide'\n      } />\n      <MainImageContainer />\n      <ImageCatalogContainer />\n      <ModalWindowContainer />\n    </>\n  )\n}\n\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport App from './App'\nimport '@/assets/styles/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}